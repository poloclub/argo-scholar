{"version":3,"sources":["stores/PreferencesStore.js","services/BackendAPIUtils.js","stores/GraphStore.js","stores/ImportStore.js","stores/ProjectStore.js","stores/SearchStore.js","ipc/logger.js","stores/index.js","components/PreferencesDialog.jsx","components/utils/Collapsable.jsx","components/utils/CommonItemRenderer.jsx","components/utils/SimpleSelect.jsx","components/PostImportOptions.jsx","components/ImportDialog.jsx","components/GEXFImportDialog.jsx","components/OpenDialog.jsx","components/NewProjectDialog.jsx","components/ProjectDetailDialog.jsx","components/SaveSnapshotDialog.jsx","components/RenameSnapshotDialog.jsx","components/OpenSnapshotDialog.jsx","components/ShareDialog.jsx","components/StatisticsDialog.jsx","components/HelpDialog.jsx","components/NodeTable.jsx","components/NeighborDialog.jsx","components/DataSheetDialog.jsx","components/NewNetworkDialog.jsx","components/Dialogs.jsx","components/panels/AddNodesRow.jsx","components/panels/PaperResultsSubPanel.jsx","components/panels/AddNodesPanel.jsx","components/SearchBar.jsx","components/Navbar.jsx","components/WorkspaceView.jsx","visualizers/ThreeJSVis.jsx","components/panels/GlobalPanel.jsx","components/utils/SwitchCollapsable.jsx","components/panels/SelectionPanel.jsx","components/panels/NodesPanel.jsx","components/panels/EdgesPanel.jsx","components/panels/LabelsPanel.jsx","components/panels/NodeDetailPanel.jsx","components/Legends.jsx","components/StatusBar.jsx","components/panels/SelectionActionPanel.jsx","components/panels/ZoomPanel.jsx","components/FloatingCards.jsx","app.jsx","index.js","services/AlgorithmUtils.js","constants/index.js","ipc/client.js","notifications/client.js","graph-frontend/src/structure/node.js","graph-frontend/include/THREE.MeshLine.js","graph-frontend/src/select.js","graph-frontend/index.js","images/argoscholar_logo_dark.svg","images/argoscholar_logo_light.svg","graph-frontend/src/imports.js","graph-frontend/src/process.js","graph-frontend/include/QuickHull.js","graph-frontend/include/ConvexGeometry.js","graph-frontend/include/CSS3DRenderer.js","graph-frontend/include/OrbitControls.js","graph-frontend/src/utils/utils.js","graph-frontend/src/setup.js","graph-frontend/src/addremove.js","graph-frontend/src/highlighting.js","graph-frontend/src/mouse.js","graph-frontend/src/modify.js","graph-frontend/src/draw.js","graph-frontend/src/api.js","graph-frontend/src/update.js"],"names":["PreferencesStore","requestLoadUserConfig","userConfig","darkMode","this","workspace","workspacePath","requestSaveUserConfig","isRenderOptionsCardHidden","minimapShowing","isStatusBarShowing","isNavbarInMinimalMode","isLegendShowing","appState","graph","frame","hideMiniMap","console","log","showMiniMap","observable","IS_IFRAME_WIDGET","nodePrefix","nodeFields","addSortedCitations","sortMethod","curcount","offset","rightClickedNodeId","rightClickedNode","data","ref","id","toString","requestURL","promises","page","requestBody","JSON","stringify","pageSize","sort","authors","coAuthors","venues","yearFilter","requireViewablePdf","publicationTypes","externalContentTypes","fieldsOfStudy","push","fetch","method","headers","Accept","body","then","res","ok","json","citations","results","map","citation","Promise","all","result","PaperIds","flat","length","edgesArr","toJS","rawGraph","edges","addedNodes","fetches","duplicateNodes","nonCorpusNodes","i","some","edge","source_id","target_id","citationAPI","response","addNodetoGraph","selectedNodes","selection","addFrontEndNodeInARow","paperId","paperNode","process","getNode","renderData","textHolder","children","element","override","catch","err","warn","pageLimit","toaster","show","message","intent","Intent","WARNING","nodeLabels","nodeIds","forEach","node","label","logger","addLog","eventName","elementName","valueName","newValue","error","addRandomCitations","updateNodesShowingLabels","DANGER","iconName","addSortedReferences","references","reference","referenceAPI","addRandomReferences","GraphStore","initialGlobalConfig","nodes","colorBy","color","scale","from","to","sizeBy","size","min","max","labelBy","shape","labelSize","labelLength","_lastSelectedSingleNode","nodesShowingLabels","hasGraphLoaded","selectedNodeId","setOfNeighborIds","Set","e","source","target","add","filter","has","paperJsonResponse","parentID","citationOrReference","rawGraphNodes","backEndgraph","preprocessedRawGraph","degreeDict","addNode","addedNode","degree","pagerank","paperName","title","paperAbstract","abstract","n","name","join","citationCount","venue","year","url","isHidden","addLink","getLink","addEdgetoGraph","rank","pageRank","nodesArr","node_id","nodesData","reduce","currentNode","nodesPanelData","updateFrontEndNodeGraphDataWithBackendRawgraph","metadata","fullNodes","fullEdges","nodeProperties","Object","keys","citingID","citedID","nodeids","runInAction","includes","removeNodesByIds","snapshotId","Math","round","random","overrides","positions","getPositions","pinnedNodes","Array","getPinnedNodes","global","optionalConfig","snapshot","getSnapshot","noPosition","undefined","noGlobal","noOverride","savedStatesStr","savedStates","parse","savedOverrides","Map","entries","k","v","clear","merge","initialNodesShowingLabels","createGraph","runActiveLayout","paused","smartPause","defaultActive","isActive","startTime","Date","now","smartPaused","nodesToPin","that","forEachNode","setPinnedNodes","getGraph","graphFrame","Frame","computedGraph","init","display","ee","on","onHover","currentlyHovered","menu","MenuFactory","MenuItemFactory","onClick","toggleSelectedLabels","text","key","unpinSelectedNodes","pinSelectedNodes","MenuDividerFactory","BackendAPIUtils","ContextMenu","left","pageX","top","pageY","startedHovering","hoveredTime","autoDisplayExploration","uniq","nodeComputed","ret","p","Number","MAX_VALUE","MIN_VALUE","scales","domain","minMax","range","get","nodeSizeScale","nodeColorScale","hasNode","averageClusteringCoefficient","connectedComponents","graphDensity","averageDegree","exactGraphDiameter","duration","interactingWithGraph","computed","edgeProperties","snapshotName","action","ImportStore","postImportFilteringOptions","sortedList","n1","n2","setIds","defaultPostImportFilteringOption","selectedPostImportFilteringOption","nodeFile","path","topN","hasColumns","ready","columns","mapping","delimiter","edgeFile","fromId","toId","createMissing","ProjectStore","SearchStore","Logger","initialValues","fileName","records","addOSRecord","addBrowserRecord","logNum","time","oldValue","oldValueObj","newValueObj","value","newLog","uploadToS3","browser","window","opr","addons","opera","navigator","userAgent","indexOf","InstallTrigger","test","HTMLElement","safari","pushNotification","document","documentMode","StyleMedia","chrome","webstore","runtime","addRecord","osName","endValues","exportLog","endTime","blob","Blob","toJSON","type","keepalive","downloadJSON","addEventListener","event","AppState","preferences","import","search","project","loadAndDisplaySnapshotFromStrapi","uuid","BACKEND_URL","mode","timeout","loadSnapshotFromStrapi","snapshotString","loadImmediateStates","loadAndDisplaySnapshotFromURL","loadSnapshotFromURL","split","pop","loadInitialSampleGraph","a","location","hash","substring","startsWith","decodeURIComponent","alert","SAMPLE_GRAPH_SNAPSHOTS","saveSnapshotToString","saveImmediateStates","autorun","hasGraph","updateGraph","setAllNodesShapeWithOverride","setLabelRelativeSize","setLabelLength","pinNodes","updatePositions","showLabels","searchStr","runSearch","panelOpen","candidates","splice","highlightNodeIds","file","selectedEdgeFileFromInput","hasHeader","importConfig","reader","FileReader","readAsText","onload","lines","topLinesAsString","l","trim","it","comment","auto_parse","skip_empty_lines","onerror","selectedNodeFileFromInput","PreferencesDialog","observer","className","classnames","Classes","DARK","isOpen","dialogOpen","onClose","checked","onChange","saveUserConfig","toggleDark","PRIMARY","React","Component","onToggle","LARGE","FILL","MINIMAL","rightIconName","handleClick","item","ACTIVE","items","onSelect","fill","itemRenderer","CommonItemRenderer","filterable","onItemSelect","PostImportOptions","SimpleSelect","selected","PreviewTable","props","numRows","selectedRegions","values","rows","cols","renderCell","changeAvailable","targetValue","ONLY_EDGE_FILE","setState","available","canImport","state","NODE_AND_EDGE_FILE","renderNodesSelection","Collapsable","nodesOpen","CONTROL_GROUP","INPUT_GROUP","DISABLED","files","renderEdgesSelection","edgesOpen","disabled","newDelimiter","updateDelimiter","loading","DIALOG_BODY","renderDelimiterSelection","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","requestCreateNewProject","newProjectName","createdDate","toLocaleString","requestImportGraphFromCSV","turnOffLabelCSSRenderer","selectedGexfFileFromInput","requestImportGraphFromGexf","gexfDialogOpen","renderImportButton","GRAPH_AND_STATE_FILE","stateFile","graphFile","renderSelectGraph","INPUT","placeholder","readOnly","requestChooseGraphFile","renderSelectState","requestChooseStateFile","ONLY_GRAPH_FILE","selectedGraph","selectedState","openDialogOpen","requestOpen","isNewProjectNameDuplicate","projects","isNewProjectNameEmpty","isValidated","isNewProjectDialogOpen","dir","ProjectDetailDialog","currentProject","isProjectDetailDialogOpen","hasGraphData","interactive","elevation","Card","ELEVATION_TWO","graphDataPath","snapshotPaths","snapshotPath","replace","BUTTON","INTENT_PRIMARY","currentSnapshotName","requestDelete","SaveSnapshotDialog","isSaveSnapshotDialogOpen","stringCopyOfSnapshot","getElementById","select","execCommand","isRenameSnapshotDialogOpen","OpenSnapshotDialog","selectedFile","openSnapshotDialogOpen","NONE","fileAsString","uuidv4","require","ShareDialog","isShared","isFetching","sharedURL","selectedContinue","handleRequest","bind","backendURL","cache","referrer","shareDialogOpen","style","width","marginRight","marginBottom","marginTop","overflow","resize","readonly","position","dangerouslySetInnerHTML","__html","StatisticsDialog","statisticsDialogOpen","TABLE","density","diameter","averageClustering","components","HelpDialog","helpDialogOpen","NodeTable","sortBy","sortOrder","filteredNodes","n1val","n2val","n1valAsNum","n2valAsNum","isNaN","n1valAsString","n2valAsString","localeCompare","nodeAttributesOrig","allPropertiesKeyList","showNodes","hideNodes","NeighborDialog","showMoreBy","showMoreNum","lastSelectedSingleNode","getNeighborNodesFromRawGraph","neighborDialogOpen","minWidth","numberToShow","attributeName","hiddenNodes","ids","showNMoreByAttribute","onValueChange","valAsNumber","valAsString","DataSheetDialog","dataSheetDialogOpen","NewNetworkDialog","requestCreateEmptyPaperGraph","preventDefault","isNewNetworkDialogOpen","createEmptyGraph","Dialogs","RenameSnapshotDialog","AddNodesRow","paper","currentIncrement","nodeid","pinnedx","pinnedy","x","controls","camera","y","nodeHidden","isNodeHidden","buttonDisabled","class","rel","href","content","popoverClassName","Position","BOTTOM","numberAddedPerSearch","PaperResultsSubPanel","papers","query","cards","AddNodes","_isMounted","pointerEvents","corpusIDregex","SearchBar","searchResults","handleChange","handleSubmit","handleEnter","which","apiurl","searches","addToast","keywordQuery","leftIconName","rightElement","autoFocus","enforceFocus","onKeyPress","RegularNavbar","NAVBAR","NAVBAR_GROUP","ALIGN_LEFT","LOGO_URL","src","argologo_dark","argologo_light","height","NAVBAR_HEADING","sample","sampleSnapshotTitle","sampleSnapshotStrapiUuid","pauseLayout","forceUpdate","sortedNodeList","NAVBAR_DIVIDER","self","setInterval","timeNow","resumeLayout","ALIGN_RIGHT","turnOnMinimalMode","GITHUB_URL","fontSize","textDecoration","icon","faGithub","MinimalNavbar","backgroundColor","role","turnOffMinimalMode","Navbar","WorkspaceView","textAlign","ThreeJSVis","setUpFrame","flex","GlobalPanel","timeOutRef","sizeOptionOpen","colorOptionOpen","shapeOptionOpen","visibilityOptionOpen","CARD","float","placement","modifiers","preventOverflow","enabled","backgroundImage","hex","x1","y1","x2","y2","stopColor","stopOpacity","stepSize","labelStepSize","b","pluralize","SelectionPanel","twoLayerUpdate","nodeId","set","nodeAttrs","delete","batchTwoLayerUpdate","labelOptionOpen","SwitchCollapsable","overrideConfig","NodesPanel","getRenderedNodes","EdgesPanel","directionOptionOpen","red","THREE","Color","r","blue","g","green","linecolor","directedOrNot","LabelsPanel","hideAllLabels","showAllLabels","marginLeft","hideSelectedLabels","showSelectedLabels","NodeDetail","lineHeight","flexWrap","visibility","currentEmptyGraphDoNotDisplayLegend","direction","itemDirection","itemMargin","shapeMargin","labelFormat","format","cx","cy","StatusBar","numHiddenNodes","SelectionActionPanel","numHiddenNeighbor","getSelectedIds","ZoomPanel","anime","targets","zoom","percent","nextZoomInPercent","nextZoomOutPercent","reset","RenderOptionsCard","animate","panel","Expander","FloatingCards","optionsVisible","optionsInvisible","sideButtonVisDark","sideButtonVisWhite","sideButtonInv","toggleOptions","ELEVATION_2","justifyContent","alignItems","numCandidates","searchOrder","TABLE_STRIPED","INTERACTIVE","userSelect","onMouseOver","onMouseDown","onMouseLeave","pageNum","allCands","slice","nPerPage","cursor","pages","maxPage","ELEVATION_4","paddingTop","paddingRight","paddingBottom","registerIPC","FocusStyleManager","onlyShowFocusOnTabs","fetchWorkspaceProjects","loadUserConfig","DELETE","Keys","BACKSPACE","P","U","respondToResize","innerWidth","MOBILE_WIDTH_CUTOFF","innerHeight","MOBILE_HEIGHT_CUTOFF","setTimeout","App","keydown","ReactDOM","render","jsnx","jsgraphs","jsnxGraph","Graph","addNodesFrom","addEdgesFrom","convertToJsnx","ConnectedComponents","idDict","addEdge","convertToJSGraph","componentCount","nodeCount","sum","temp","WeightedDiGraph","Edge","convertToJSGraphWeightedDi","jsg","dia","dijkstra","Dijkstra","f","hasPathTo","pathLength","pathTo","parent","FRONTEND_URL","SCALE_LINEAR","SCALE_LOG","LOAD_USER_CONFIG","LOADED_USER_CONFIG","SAVE_USER_CONFIG","SAVED_USER_CONFIG","FETCH_WORKSPACE_PROJECTS","FETCHED_WORKSPACE_PROJECTS","MENU_NEW_PROJECT","CREATE_NEW_PROJECT","CREATED_NEW_PROJECT","DELETE_FILE","RENAME_FILE","LOAD_GRAPH_JSON","LOAD_GRAPH_SQLITE","LOADED_GRAPH_JSON","LOAD_TOAST_KEY","SAVE_GRAPH_JSON","SAVE_GRAPH_SQLITE","SAVED_GRAPH_JSON","SAVE_TOAST_KEY","MENU_LOAD","MENU_IMPORT_CSV","MENU_SAVE_GRAPH_STATE","MENU_SAVE_GRAPH_STATE_TO_PROJECT","MENU_SAVE_GRAPH_SQLITE","SAVE_GRAPH_STATE","SAVED_GRAPH_STATE","SAVE_GRAPH_STATE_TO_PROJECT","SAVED_GRAPH_STATE_TO_PROJECT","LOAD_GRAPH_STATE","LOADED_GRAPH_STATE","SHOW_ITEM_IN_FOLDER","SHOW_WORKSPACE_FOLDER","CHANGE_WORKSPACE_FOLDER","CHANGED_WORKSPACE_FOLDER","CHOOSE_EDGE_FILE","CHOSEN_EDGE_FILE","CHOOSE_NODE_FILE","PEAKED_NODE_FILE","CHOSEN_NODE_FILE","CHOOSE_GRAPH_FILE","CHOSEN_GRAPH_FILE","CHOOSE_STATE_FILE","CHOSEN_STATE_FILE","IMPORT_GRAPH","IMPORTED_GRAPH","OPEN_GRAPH","OPENED_GRAPH","SEARCH_REQUEST","SEARCH_RESPONSE","ADD_NODES","ADD_SELECT_NODE","ADD_NODE","GET_NEIGHBORS","ipcRenderer","eventString","filePath","hasNodeFile","importGraphFromCSV","postImportFilter","createEmptyPaperGraph","importGraphFromGexf","readCSV","fileObject","resolve","reject","msg","parseGEXF","parser","DOMParser","xmlDoc","parseFromString","xmlEdges","getElementsByTagName","xmlNodes","xmlAttri","nodeAttri","nodeAttriOrdered","curr","getAttribute","currEdge","s","t","currNode","nodeAttvalues","nodeAttvalue","j","attributes","attributeIdElementAttribute","attributeId","currAttri","readGEXF","config","parseInt","edgesSet","edgeKey","gexfParsed","projectMetadata","Toaster","create","$","Node","index","in","out","domainData","vx","vy","connectedTo","outNodeIds","outNode","inArray","prototype","connectNode","exports","memcpy","srcOffset","dst","dstOffset","subarray","buffer","MeshLine","previous","next","side","indices_array","uvs","counters","geometry","BufferGeometry","widthCallback","setGeometry","c","Geometry","vertices","z","Float32Array","compareV3","aa","ab","copyV3","w","copyArray","needsUpdate","uv","Uint16Array","BufferAttribute","addAttribute","setIndex","advance","array","MeshLineMaterial","parameters","check","d","Material","call","lineWidth","useMap","opacity","resolution","Vector2","sizeAttenuation","near","far","dashArray","useDash","alphaTest","material","RawShaderMaterial","uniforms","vertexShader","fragmentShader","setValues","constructor","copy","def","default","OrbitControls","d3","module","selectNode","dragging","isSelected","updateSelection","mouseX","mouseY","clearSelection","NODE_NO_HIGHLIGHT","draw_object","visible","hideme","diffx","diffy","clickedNode","fx","fy","hcolor","checkSelection","mouseEnd","Vector3","mouseStart","right","npos","options","layout","force","getNodePosition","insideBox","posx","posy","balancedBinTree","Argo","STATS","STATS_SHOW","NODE_COLOR","NODE_HIGHLIGHT","ADJACENT_HIGHLIGHT","SEARCH_HIGHLIGHT","NODE_HTEXTURE","NODE_TEXTURE","NODE_NO_HTEX","NODE_NO_TEX","NODE_NO_HCOLOR","NODE_NO_COLOR","NODE_NEIGHBOR_HIGHLIGHT","NODE_SHAPE","NODE_HSHAPE","NODE_SIZE","HIGHLIGHT_SIZE","LAYOUT","LINES","MAP","MAP_RENDER_PER_NUMBER_OF_FRAME","TEXT_SCALE","TEXT_SIZE","TEXT_X_OFFSET","TEXT_Y_OFFSET","TEXT_BACK_COLOR","TEXT_OPACITY","TEXT_WIREFRAME","PIN_COLOR","spawn","inGraph","layout_options","graphLayout","lineObjects","lineIndices","MAX_LINES","textureLoader","TextureLoader","crossOrigin","oldIntersect","fov","showBox","renderWidth","renderHeight","maxZoom","mouseDown","layoutInit","relativeFontSize","mapShowing","mapRenderPerNumberOfFrame","lastNode","doHighlightNeighbors","prevHighlights","hull","stats","showPanel","appendChild","dom","begin","update","end","requestAnimationFrame","renderer","WebGLRenderer","alpha","antialias","preserveDrawingBuffer","minimapRenderer","setDisplayParams","setRendererParams","setupCamera","setupMinimap","setupGeometry","setupSelect","innerHTML","domElement","cssRenderer","setupLayout","setupGraph","onWindowResize","clientRect","getBoundingClientRect","minimap","aspect","ccamera","updateProjectionMatrix","setSize","stage","numberOfFrameSinceMiniMapRerender","getNodesCount","updateCamera","updateNodes","updateEdges","updateLabels","forceLink","restart","stop","tickToStatic","ceil","alphaMin","alphaDecay","tick","setViewport","setScissor","setScissorTest","scene","QuickHull","tolerance","faces","newFaces","assigned","VertexList","unassigned","Face","normal","midpoint","area","constant","outside","mark","HalfEdge","vertex","face","prev","twin","VertexNode","point","head","tail","assign","setFromPoints","points","isArray","makeEmpty","compute","setFromObject","object","updateMatrixWorld","traverse","isGeometry","clone","applyMatrix4","matrixWorld","isBufferGeometry","attribute","count","fromBufferAttribute","addVertexToFace","append","insertBefore","removeVertexFromFace","remove","removeAllVerticesFromFace","start","removeSubList","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distanceToPoint","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","distance","computeExtremes","minVertices","maxVertices","getComponent","setComponent","EPSILON","abs","computeInitialHull","line3","plane","closestPoint","Line3","Plane","v0","v1","v2","v3","extremes","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","twinEdge","oppositeFace","addAdjoiningFace","horizonEdge","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","cleanup","e0","e1","e2","triangle","Triangle","dot","distanceTo","lengthSquared","last","insertAfter","ConvexGeometry","fromBufferGeometry","ConvexBufferGeometry","mergeVertices","normals","Float32BufferAttribute","CSS3DObject","Object3D","parentNode","removeChild","CSS3DSprite","CSS3DRenderer","_width","_height","REVISION","matrix","Matrix4","objects","createElement","WebkitTransformStyle","MozTransformStyle","oTransformStyle","transformStyle","cameraElement","epsilon","getObjectCSSMatrix","elements","setClearColor","isPaused","getSize","tan","degToRad","getEffectiveFOV","WebkitPerspective","MozPerspective","oPerspective","perspective","matrixWorldInverse","getInverse","getCameraCSSMatrix","WebkitTransform","MozTransform","oTransform","transform","renderObject","transpose","copyPosition","cachedStyle","minDistance","Infinity","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","SPACE","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","position0","zoom0","spacePan","bothPan","originalCameraDistance","percentPresets","defaultPercent","reverse","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","scope","dispatchEvent","changeEvent","STATE","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","radius","panOffset","setFromSpherical","lookAt","zoomChanged","EPS","quaternion","dispose","removeEventListener","onContextMenu","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","dollyIn","dollyScale","mousePos","dollyOut","handleMouseDownPan","clientX","clientY","button","handleMouseDownRotate","handleMouseDownDolly","subVectors","clientWidth","handleMouseMoveRotate","handleMouseMoveDolly","spacePanStart","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleKeyUp","EventDispatcher","relMouseCoords","currentElement","totalOffsetX","totalOffsetY","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","prepNode","nodeToAdd","exec","numYeast","tsize","make1x1Rect","rectShape","Shape","moveTo","lineTo","ShapeGeometry","make2x2Rect","volToRadius","volume","createNGraph","setupNgraphLayout","setupD3Layout","forceSimulation","forceManyBody","strength","forceY","forceX","velocityDecay","bottom","zIndex","setPixelRatio","devicePixelRatio","PerspectiveCamera","oldCoords","panToMousePosition","coordX","coordY","coefficient","Scene","Group","setupFancyEdges","setUpSimpleEdges","rect","setupSelectionBox","setupBoundaries","setupViewPort","edgeCount","LineBasicMaterial","linewidth","vertexColors","VertexColors","shading","FlatShading","line","LineSegments","frustumCulled","colors","directedArrows","arrowMaterial","MeshBasicMaterial","arrow","Mesh","arrowPositions","arrowColors","drawCount","selectBox","Line","boundaries","setBoundarySize","viewPort","setViewPortSize","computeBoundingSphere","setupMouseHandlers","callback","currentMouseX","currentMouseY","coords","mousePosition","unproject","normalize","isMouseCoordinatesOnMinimap","raycaster","Raycaster","pos","onRightClick","focus","onRightClickCoords","callMouseHandler","intersects","intersectObjects","nodeIndex","ctrlKey","mouseHandler","graphNode","drawNode","links","removeNode","removeGraphEdges","undrawEdges","undrawNode","nodeLinks","getLinks","removeLink","hidden","killed","drawEdge","highlightNode","toggle","setHex","highlightEdges","froms","tos","highlightNeighbors","colorNodeOpacity","colorNodeEdge","linkObjs","isHighlighted","setRGB","op","ctrl","leftMouseDown","lastHover","currentNodes","currentNodeX","currentNodeY","oldStartTime","clickDifference","doubleClicked","newNodeIds","oldValues","newValues","oldNode","newNode","o1","a1","findNode","xDiff","yDiff","oldValuesX","oldValuesY","newValuesX","newValuesY","emit","setUniformNodeSize","hsize","setNodeDataSize","dataValue","dataVal","setUniformNodeColor","hsvDegree","setNodeDataColor","mapNodeAttributes","val","mod","attr","changeLabelFontSize","changeLabelLength","changeNodes","changeNode","numChars","relativeSize","createHighlightMesh","texture","hshape","hgeometry","CircleGeometry","createHighlightDrawObject","getNodeSize","hmaterial","transparent","highlight","createNodeMesh","createNodeDrawObject","createPinMesh","pinMesh","createNodeLabel","wireframe","wireframeLinewidth","DoubleSide","PlaneGeometry","textMesh","createAndSetupLabelTextMesh","createAndSetupLabelDiv","createAndSetupTextHolder","bbox","Box3","createLabelDiv","createLabelDivElement","createTextNode","textElement","createLabelTextElement","textOverflow","whiteSpace","setupNodeDrawObject","htexture","onTextureLoad","load","himage","image","hide","updateColorsAndPositions","v1pos","v2pos","v1color","v2color","setMouseMode","mouseMode","isMouseModeMove","pause","mapSelectedNodes","mapAllNodes","setLabelFontSize","toggleMiniMap","turnOnLabelCSSRenderer","toggleLabels","hideLabels","setCanvasSize","setAllNodesShape","setNodeShape","getNumSelected","updateViewPortEdgeColor","getNodeList","poses","getPinPositions","alias","toggleAlias","setLastNode","dragLastNode","lowerRes","toggleNeighborHighlight","removeSelected","getSelected","nodeData","updateNode","sourcenodeid","spawnnodeid","numofnode","parentnode","childnode","setDrawRange","total","arrowPosition","midPointX","midPointY","dX","dY","radianDegree","atan","tempXCorner","cos","tempYCorner","sin","degreeDifference","thisNode","step","forEachLink","link","childNodes","innerText"],"mappings":"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","file":"static/js/main.d8d4862f.chunk.js","sourcesContent":["import { observable, action } from \"mobx\";\nimport { requestLoadUserConfig, requestSaveUserConfig } from \"../ipc/client\";\nimport { IS_IFRAME_WIDGET } from \"../constants\";\n\nexport default class PreferencesStore {\n  @observable dialogOpen = false;\n\n  @observable openDialogOpen = false;\n  @observable openSnapshotDialogOpen = false;\n  @observable shareDialogOpen = false;\n  @observable statisticsDialogOpen = false;\n  @observable helpDialogOpen = false;\n  @observable neighborDialogOpen = false;\n  @observable dataSheetDialogOpen = false;\n  @observable isRenderOptionsCardHidden = IS_IFRAME_WIDGET;\n\n  @observable currentEmptyGraphDoNotDisplayLegend = false;\n  // The following fields are asynchronously loaded.\n  // Any writes to these fields through saveUserConfig\n  // won't be active until the app exits and starts\n  // next time.\n\n  @observable darkMode = false;\n  @observable minimapShowing = !IS_IFRAME_WIDGET;\n  @observable isStatusBarShowing = !IS_IFRAME_WIDGET;\n  @observable isNavbarInMinimalMode = IS_IFRAME_WIDGET;\n  @observable isLegendShowing = !IS_IFRAME_WIDGET;\n\n  @observable workspacePath = '';\n\n  // This is called at the beginning of the app.\n  loadUserConfig() {\n    requestLoadUserConfig();\n  }\n\n  saveUserConfig() {\n    const userConfig = {\n      darkMode: this.darkMode,\n      workspace: this.workspacePath,\n    }\n\n    requestSaveUserConfig(userConfig);\n  }\n\n  turnOnMinimalMode() {\n    this.isRenderOptionsCardHidden = true;\n    this.minimapShowing = false;\n    this.isStatusBarShowing = false;\n    this.isNavbarInMinimalMode = true;\n    this.isLegendShowing = false;\n    if (appState.graph.frame) {\n      appState.graph.frame.hideMiniMap();\n    } else {\n      console.log(\"Frame not ready when trying to toggle minimap.\");\n    }\n\n  }\n\n  turnOffMinimalMode() {\n    this.isRenderOptionsCardHidden = false;\n    this.minimapShowing = true;\n    this.isStatusBarShowing = true;\n    this.isNavbarInMinimalMode = false;\n    this.isLegendShowing = true;\n    if (appState.graph.frame) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      console.log(\"Frame not ready when trying to toggle minimap.\");\n    }\n  }\n}","import { toJS } from \"mobx\";\nimport appState from \"../stores/index\";\nimport { toaster } from \"../notifications/client\";\nimport { Intent } from \"@blueprintjs/core\";\n\n/**\n * Change this to query more papers.\n * pageSize > 10 will return incorrect ranks.\n *  */\nconst pageLimit = 10;\nconst pageSize = 10;\n\nconst nodePrefix = \"https://api.semanticscholar.org/graph/v1/paper/\";\nconst nodeFields = \"?fields=abstract,authors,citationCount,paperId,references,title,url,venue,year,citations\";\n/**\n * Adding sorted citations from Semantic Scholar's backend API through multiple steps.\n * Step 1: fetch multiple times in the for-loop and store the node id arrays in the promises array since maximum pageSize is 10 in order for the API to return ordered results.\n * Step 2: use Promise.all() to concatenate all node ids in one array.\n * Step 3: pick the first 5 non-duplicate ids and fetch node info with Semantic Scholar's public API.\n * Backup Step: if backend API fails, call addRandomCitations() to add 5 unsorted nodes with Semantic Scholar's public API.\n * @param {*} sortMethod\n */\nexport function addSortedCitations(sortMethod, graph) {\n  // Fetch request body and params\n  let curcount = 0;\n  let offset = 0;\n\n  const rightClickedNodeId =\n    graph.frame.rightClickedNode.data.ref.id.toString();\n  var requestURL =\n    \"https://argo-cors-anywhere.herokuapp.com/https://www.semanticscholar.org/api/1/search/paper/\" +\n    rightClickedNodeId +\n    \"/citations\";\n\n  let promises = [];\n  // 30 ids in total, 10 each iteration\n  for (let page = 1; page <= pageLimit; page++) {\n    var requestBody = JSON.stringify({\n      page: page,\n      pageSize: pageSize,\n      sort: sortMethod,\n      authors: [],\n      coAuthors: [],\n      venues: [],\n      yearFilter: null,\n      requireViewablePdf: false,\n      publicationTypes: [],\n      externalContentTypes: [],\n      fieldsOfStudy: [],\n    });\n    //Fetching node info from backend API\n    promises.push(\n      fetch(requestURL, {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: requestBody,\n      })\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw \"Connection to backend API failed.\";\n          }\n        })\n        // Mapping ids onto an array\n        .then((citations) => {\n          var PaperIds = citations.results.map(function (citation) {\n            return citation.id;\n          });\n          return PaperIds;\n        })\n    );\n  }\n\n  Promise.all(promises)\n    .then((result) => {\n      // Concatenate the ids into one long array\n      let PaperIds = result.flat();\n      console.log(PaperIds);\n      console.log(\"Node array length: \" + PaperIds.length);\n      // Creating nodes\n      let edgesArr = toJS(appState.graph.rawGraph.edges);\n      let addedNodes = [];\n      let fetches = [];\n\n      let duplicateNodes = 0;\n      let nonCorpusNodes = 0;\n      for (let i = 0; i < PaperIds.length; i++) {\n        // Null check\n        if (!PaperIds[i]) {\n          nonCorpusNodes += 1;\n          continue;\n        }\n\n        // Checking duplicate nodes\n        if (\n          edgesArr.some(\n            (edge) =>\n              edge.source_id == PaperIds[i] &&\n              edge.target_id == rightClickedNodeId\n          )\n        ) {\n          console.log(\"Already containing nodes!\");\n          duplicateNodes += 1;\n          continue;\n        }\n\n        curcount += 1;\n\n        // Fetching node info from public API\n        let citationAPI = nodePrefix + PaperIds[i] + nodeFields;\n        fetches.push(\n          fetch(citationAPI)\n            .then((res) => {\n              if (res.ok) {\n                return res.json();\n              } else {\n                throw \"Connection to public API failed.\";\n              }\n            })\n            .then((response) => {\n              graph.addNodetoGraph(response, rightClickedNodeId, 0);\n              appState.graph.selectedNodes = [];\n              appState.graph.frame.selection = [];\n              graph.frame.addFrontEndNodeInARow(\n                rightClickedNodeId,\n                response.paperId,\n                offset,\n                0\n              );\n              let paperNode = appState.graph.process.graph.getNode(\n                response.paperId\n              );\n              addedNodes.push(paperNode);\n              paperNode.renderData.textHolder.children[0].element.override = true;\n              offset += 1;\n            })\n            .catch(function (err) {\n              console.warn(\n                \"Cannot fetch node info through Semantic Scholar's public API. \" +\n                  requestURL,\n                err\n              );\n            })\n        );\n\n        // Exit condition\n        if (curcount >= 5) {\n          break;\n        }\n      }\n      console.log(\"Graph contains \" + duplicateNodes + \" duplicate nodes.\");\n      console.log(\"Graph contains \" + nonCorpusNodes + \" non-corpus nodes.\");\n\n      // Check for remaining nodes\n      if (\n        PaperIds.length < pageLimit * pageSize &&\n        PaperIds.length == duplicateNodes\n      ) {\n        console.log(\"All citations added\");\n        toaster.show({\n          message: \"All the citations for this node have been added.\",\n          intent: Intent.WARNING,\n        });\n      }\n\n      // Check for upper limit\n      if (duplicateNodes >= pageLimit * pageSize) {\n        console.log(\"Limit reached\");\n        toaster.show({\n          message:\n            \"Maximum number of citations allowed (\" +\n            pageLimit * pageSize +\n            \") reached.\",\n          intent: Intent.WARNING,\n        });\n      }\n\n      Promise.all(fetches).then(() => {\n        var nodeLabels = []\n        var nodeIds = []\n        addedNodes.forEach((node) => {\n          appState.graph.selectedNodes.push(node);\n          appState.graph.frame.selection.push(node);\n          nodeLabels.push(node.data.label);\n          nodeIds.push(node.id);\n        });\n        appState.logger.addLog({eventName: `AddCitation${sortMethod}`, elementName: rightClickedNodeId, valueName: nodeLabels, newValue: nodeIds});\n      });\n    })\n    // Error message, using backup method instead\n    .catch((error) => {\n      console.error(\n        \"Error occurred when requesting sorted citations through Semantic Scholar's backend API. Adding random citations. Reason:\",\n        error\n      );\n      toaster.show({\n        message:\n          \"Error getting sorted results. Adding unsorted results from Semantic Scholar instead.\",\n        intent: Intent.WARNING,\n      });\n      addRandomCitations(graph);\n    });\n\n  appState.graph.frame.updateNodesShowingLabels();\n}\n\n//Backup: add random citaions to right clicked node\nfunction addRandomCitations(graph) {\n  // Fetch request body and params\n  const rightClickedNodeId =\n    graph.frame.rightClickedNode.data.ref.id.toString();\n  let curcount = 0;\n  let offset = 0;\n  let apiurl = \"https://api.semanticscholar.org/v1/paper/\" + rightClickedNodeId;\n\n  // Fetching node ids from public API\n  fetch(apiurl)\n    .then((res) => {\n      return res.json();\n    })\n    .then((response) => {\n      return response.citations;\n    })\n    .then((citations) => {\n      console.log(citations);\n      let edgesArr = toJS(appState.graph.rawGraph.edges);\n      let addedNodes = [];\n      let fetches = [];\n\n      let duplicateNodes = 0;\n      for (let i = 0; i < citations.length; i++) {\n        if (duplicateNodes >= pageLimit * pageSize) {\n          break;\n        }\n        if (\n          edgesArr.some(\n            (edge) =>\n              edge.source_id == citations[i].paperId &&\n              edge.target_id == rightClickedNodeId\n          )\n        ) {\n          console.log(\"Already containing nodes!\");\n          duplicateNodes += 1;\n          continue;\n        }\n        curcount += 1;\n        let citationAPI = nodePrefix + citations[i].paperId + nodeFields;\n\n        // Fetching node info from public API\n        fetches.push(\n          fetch(citationAPI)\n            .then((res) => {\n              if (res.ok) {\n                return res.json();\n              } else {\n                throw \"Connection to public API failed.\";\n              }\n            })\n            .then((response) => {\n              graph.addNodetoGraph(response, rightClickedNodeId, 0);\n              appState.graph.selectedNodes = [];\n              appState.graph.frame.selection = [];\n              graph.frame.addFrontEndNodeInARow(\n                rightClickedNodeId,\n                response.paperId,\n                offset,\n                0\n              );\n              let paperNode = appState.graph.process.graph.getNode(\n                response.paperId\n              );\n              addedNodes.push(paperNode);\n              paperNode.renderData.textHolder.children[0].element.override = true;\n              offset += 1;\n              // appState.graph.process.graph.getNode(\n              //   response.paperId\n              // ).renderData.textHolder.children[0].element.override = true;\n              // offset += 1;\n              // appState.graph.selectedNodes = [];\n              // appState.graph.frame.selection = [];\n            })\n            .catch(function (err) {\n              console.warn(\n                \"Cannot fetch node info through Semantic Scholar's public API. \" +\n                  requestURL,\n                err\n              );\n            })\n        );\n        if (curcount >= 5) {\n          break;\n        }\n      }\n      console.log(\"Graph contains \" + duplicateNodes + \" duplicate nodes.\");\n\n      // Check for remaining nodes\n      if (\n        citations.length < pageLimit * pageSize &&\n        citations.length == duplicateNodes\n      ) {\n        console.log(\"All citations added\");\n        toaster.show({\n          message: \"All the citations for this node have been added.\",\n          intent: Intent.WARNING,\n        });\n      }\n\n      // Check for upper limit\n      if (duplicateNodes >= pageLimit * pageSize) {\n        console.log(\"Limit reached\");\n        toaster.show({\n          message:\n            \"Maximum number of citations allowed (\" +\n            pageLimit * pageSize +\n            \") reached.\",\n          intent: Intent.WARNING,\n        });\n      }\n\n      Promise.all(fetches).then(() => {\n        var nodeLabels = [];\n        var nodeIds = [];\n        addedNodes.forEach((node) => {\n          appState.graph.selectedNodes.push(node);\n          appState.graph.frame.selection.push(node);\n          nodeLabels.push(node.data.label);\n          nodeIds.push(node.id);\n        });\n        appState.logger.addLog({eventName: `AddCitationRandom`, elementName: rightClickedNodeId, valueName: nodeIds, newValue: nodeLabels});\n      });\n    })\n    .catch((error) => {\n      console.error(\"Cannot add random nodes. Reason:\", error);\n      toaster.show({\n        message: \"Cannot load results. Please check network connection.\",\n        intent: Intent.DANGER,\n        iconName: \"warning-sign\",\n      });\n    });\n  appState.graph.frame.updateNodesShowingLabels();\n}\n\n/**\n * Adding sorted referenences from Semantic Scholar's backend API through multiple steps.\n * Step 1: fetch the first pageLimit * pageSize results and store the node id arrays in the array.\n * Step 3: pick the first 5 non-duplicate ids and fetch node info with Semantic Scholar's public API.\n * Backup Step: if backend API fails, call addRandomReferences() to add 5 unsorted nodes with Semantic Scholar's public API.\n * @param {*} sortMethod\n */\nexport function addSortedReferences(sortMethod, graph) {\n  // Fetch request body and params\n  let curcount = 0;\n  let offset = 0;\n\n  const rightClickedNodeId =\n    graph.frame.rightClickedNode.data.ref.id.toString();\n  var requestURL =\n    \"https://argo-cors-anywhere.herokuapp.com/https://www.semanticscholar.org/api/1/paper/\" +\n    rightClickedNodeId +\n    \"/citations?sort=\" +\n    sortMethod +\n    \"&offset=\" +\n    offset +\n    \"&citationType=citedPapers&citationsPageSize=\" +\n    pageLimit * pageSize;\n\n  // Fetching node info from backend API\n  fetch(requestURL, {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw \"Connection failed.\";\n      }\n    })\n    .then((references) => {\n      var PaperIds = references.citations.map(function (reference) {\n        return reference.id;\n      });\n      console.log(PaperIds);\n      console.log(\"Node array length: \" + PaperIds.length);\n\n      let edgesArr = toJS(appState.graph.rawGraph.edges);\n      let addedNodes = [];\n      let fetches = [];\n\n      let duplicateNodes = 0;\n      let nonCorpusNodes = 0;\n      for (let i = 0; i < PaperIds.length; i++) {\n        // Null check\n        if (!PaperIds[i]) {\n          nonCorpusNodes += 1;\n          continue;\n        }\n\n        // Checking duplicate nodes\n        if (\n          edgesArr.some(\n            (edge) =>\n              edge.source_id == rightClickedNodeId &&\n              edge.target_id == PaperIds[i]\n          )\n        ) {\n          console.log(\"Already containing nodes!\");\n          duplicateNodes += 1;\n          continue;\n        }\n        curcount += 1;\n\n        // Fetching node info from public API\n        let citationAPI = nodePrefix + PaperIds[i] + nodeFields;\n        fetches.push(\n          fetch(citationAPI)\n            .then((res) => {\n              if (res.ok) {\n                return res.json();\n              } else {\n                throw \"Connection to public API failed.\";\n              }\n            })\n            .then((response) => {\n              graph.addNodetoGraph(response, rightClickedNodeId, 1);\n              appState.graph.selectedNodes = [];\n              appState.graph.frame.selection = [];\n              graph.frame.addFrontEndNodeInARow(\n                rightClickedNodeId,\n                response.paperId,\n                offset,\n                1\n              );\n              let paperNode = appState.graph.process.graph.getNode(\n                response.paperId\n              );\n              addedNodes.push(paperNode);\n              paperNode.renderData.textHolder.children[0].element.override = true;\n              offset += 1;\n            })\n            .catch(function (err) {\n              console.warn(\n                \"Error adding paper nodes through Semantic Scholar API. \" +\n                  requestURL,\n                err\n              );\n            })\n        );\n\n        // Exit condition\n        if (curcount >= 5) {\n          break;\n        }\n      }\n      console.log(\"Graph contains \" + duplicateNodes + \" duplicate nodes.\");\n      console.log(\"Graph contains \" + nonCorpusNodes + \" non-corpus nodes.\");\n      // Check for remaining nodes\n      if (\n        PaperIds.length < pageLimit * pageSize &&\n        PaperIds.length == duplicateNodes + nonCorpusNodes\n      ) {\n        console.log(\"All references added\");\n        toaster.show({\n          message: \"All the references for this node have been added.\",\n          intent: Intent.WARNING,\n        });\n      }\n\n      // Check for upper limit\n      if (duplicateNodes >= pageLimit * pageSize) {\n        console.log(\"Limit reached\");\n        toaster.show({\n          message:\n            \"Maximum number of references allowed (\" +\n            pageLimit * pageSize +\n            \") reached.\",\n          intent: Intent.WARNING,\n        });\n      }\n\n      Promise.all(fetches).then((response) => {\n        var nodeLabels = []\n        var nodeIds = []\n        addedNodes.forEach((node) => {\n          appState.graph.selectedNodes.push(node);\n          appState.graph.frame.selection.push(node);\n          nodeLabels.push(node.data.label);\n          nodeIds.push(node.id);\n        });\n        appState.logger.addLog({eventName: `AddReference${sortMethod}`, elementName: rightClickedNodeId, valueName: nodeIds, newValue: nodeLabels});\n      });\n    })\n    // Error message, using backup method instead\n    .catch((error) => {\n      console.error(\n        \"Error occurred when requesting sorted references through web API. Adding random references. Reason:\",\n        error\n      );\n      toaster.show({\n        message:\n          \"Error getting sorted results. Adding unsorted results from Semantic Scholar instead.\",\n        intent: Intent.WARNING,\n      });\n      addRandomReferences(graph);\n    });\n  appState.graph.frame.updateNodesShowingLabels();\n}\n\n//Backup: add random references to the right clicked node\nfunction addRandomReferences(graph) {\n  // Fetch request body and params\n  const rightClickedNodeId =\n    graph.frame.rightClickedNode.data.ref.id.toString();\n  let curcount = 0;\n  let offset = 0;\n  let apiurl = \"https://api.semanticscholar.org/v1/paper/\" + rightClickedNodeId;\n\n  // Fetching node ids from public API\n  fetch(apiurl)\n    .then((res) => {\n      return res.json();\n    })\n    .then((response) => {\n      return response.references;\n    })\n    .then((references) => {\n      console.log(references);\n      let edgesArr = toJS(appState.graph.rawGraph.edges);\n      let addedNodes = [];\n      let fetches = [];\n\n      let duplicateNodes = 0;\n      for (let i = 0; i < references.length; i++) {\n        if (\n          edgesArr.some(\n            (edge) =>\n              edge.source_id == rightClickedNodeId &&\n              edge.target_id == references[i].paperId\n          )\n        ) {\n          console.log(\"Already containing nodes!\");\n          duplicateNodes += 1;\n          continue;\n        }\n        curcount += 1;\n        let referenceAPI = nodePrefix + references[i].paperId + nodeFields;\n\n        // Fetching node info from public API\n        fetches.push(\n          fetch(referenceAPI)\n            .then((res) => {\n              if (res.ok) {\n                return res.json();\n              } else {\n                throw \"Connection to public API failed.\";\n              }\n            })\n            .then((response) => {\n              graph.addNodetoGraph(response, rightClickedNodeId, 1);\n              appState.graph.selectedNodes = [];\n              appState.graph.frame.selection = [];\n              graph.frame.addFrontEndNodeInARow(\n                rightClickedNodeId,\n                response.paperId,\n                offset,\n                1\n              );\n              let paperNode = appState.graph.process.graph.getNode(\n                response.paperId\n              );\n              addedNodes.push(paperNode);\n              paperNode.renderData.textHolder.children[0].element.override = true;\n              offset += 1;\n            })\n        );\n        if (curcount >= 5) {\n          break;\n        }\n      }\n      console.log(\"Graph contains \" + duplicateNodes + \" duplicate nodes.\");\n\n      // Check for remaining nodes\n      if (\n        references.length < pageLimit * pageSize &&\n        references.length == duplicateNodes\n      ) {\n        console.log(\"All references added\");\n        toaster.show({\n          message: \"All the references for this node have been added.\",\n          intent: Intent.WARNING,\n        });\n      }\n\n      // Check for upper limit\n      if (duplicateNodes >= pageLimit * pageSize) {\n        console.log(\"Limit reached\");\n        toaster.show({\n          message:\n            \"Maximum number of references allowed (\" +\n            pageLimit * pageSize +\n            \") reached.\",\n          intent: Intent.WARNING,\n        });\n      }\n      Promise.all(fetches).then((response) => {\n        var nodeLabels = [];\n        var nodeIds = [];\n        addedNodes.forEach((node) => {\n          appState.graph.selectedNodes.push(node);\n          appState.graph.frame.selection.push(node);\n          nodeLabels.push(node.data.label);\n          nodeIds.push(node.id);\n        });\n        appState.logger.addLog({eventName: `AddReferenceRandom`, elementName: rightClickedNodeId, valueName: nodeIds, newValue: nodeLabels});\n      });\n    })\n    .catch((error) => {\n      console.error(\"Cannot add random nodes. Reason:\", error);\n      toaster.show({\n        message: \"Cannot load results. Please check network connection.\",\n        intent: Intent.DANGER,\n        iconName: \"warning-sign\",\n      });\n    });\n\n  appState.graph.frame.updateNodesShowingLabels();\n}\n","import { observable, computed, action, runInAction, toJS } from \"mobx\";\nimport createGraph from \"ngraph.graph\";\nimport { scales } from \"../constants/index\";\nimport uniq from \"lodash/uniq\";\nimport {\n  averageClusteringCoefficient,\n  connectedComponents,\n  graphDensity,\n  averageDegree,\n  exactGraphDiameter,\n} from \"../services/AlgorithmUtils\";\nimport {\n  ContextMenu,\n  MenuFactory,\n  MenuItemFactory,\n  MenuDividerFactory,\n  Intent,\n} from \"@blueprintjs/core\";\nimport { Frame, graph } from \"../graph-frontend\";\nimport pageRank from \"ngraph.pagerank\";\nimport appState from \".\";\nimport * as BackendAPIUtils from \"../services/BackendAPIUtils\";\n\nexport default class GraphStore {\n  initialGlobalConfig = {\n    nodes: {\n      colorBy: \"citationCount\",\n      color: {\n        scale: \"Linear Scale\",\n        from: \"#448AFF\",\n        to: \"#E91E63\",\n      },\n      sizeBy: \"citationCount\",\n      size: {\n        min: 2,\n        max: 10,\n        scale: \"Linear Scale\",\n      },\n      labelBy: \"paperName\",\n      shape: \"circle\",\n      labelSize: 0.5,\n      labelLength: 30,\n    },\n    edges: {\n      color: \"#7f7f7f\",\n    },\n  };\n\n  @observable nodes = this.initialGlobalConfig.nodes;\n  @observable edges = this.initialGlobalConfig.edges;\n\n  @observable enableDegree = true;\n  @observable enableDensity = true;\n  @observable enableDiameter = false;\n  @observable enableCoefficient = true;\n  @observable enableComponent = true;\n\n  //access to process.js \"self\"\n  @observable process = undefined;\n\n  // Updated by frame event\n  @observable selectedNodes = [];\n\n  // Currently hovered node\n  @observable currentlyHovered = undefined;\n\n\n  @observable startedHovering = false;\n  @observable hoveredTime = undefined;\n  @observable autoDisplayExploration = false;\n  @observable currentMouseX = 0;\n  @observable currentMouseY = 0;\n\n  @observable numberAddedPerSearch = 0;\n\n  @observable currentNodeX;\n  @observable currentNodeY;\n  @observable currentNodes; \n  \n  /**\n   * Stores data relevant to smart pause feature\n   */\n  @observable smartPause = {\n    defaultActive: {\n      //data for when graph layout is resumed and smart pause is not in effect\n      isActive: true, //true when layout is resumed and smart pause is not in effect\n      startTime: Date.now(), //keeps track of most recent time graph was unpaused\n      duration: 10000, //duration of resumed layout\n    },\n    //lastUnpaused: undefined, //old code using lastUnpaused\n    smartPaused: false, //true when resumed, but graph layout is paused due to inactivity\n    interactingWithGraph: false, //true when node is clicked or dragged. TODO: refactor to more understandable name\n  };\n\n  // Directed or not\n  @observable directedOrNot = false;\n\n  // Cache the single node that's been selected last time\n  // and will not update unless exactly one node is selected again\n  // useful for NeighborDialog\n  _lastSelectedSingleNode = null;\n  @computed\n  get lastSelectedSingleNode() {\n    if (this.selectedNodes.length === 1) {\n      this._lastSelectedSingleNode = this.selectedNodes[0];\n    }\n    return this._lastSelectedSingleNode;\n  }\n  // Updated by frame event. Not being listened, only used to save label visibility.\n  nodesShowingLabels = [];\n  // Used by autorun during snapshot loading.\n  @observable initialNodesShowingLabels = [];\n\n  @observable\n  overrideConfig = {\n    color: \"#000\",\n    size: 5,\n    label: \"\",\n    shape: \"circle\",\n  };\n\n  // preprocessed rawGraph\n  @observable\n  preprocessedRawGraph = {\n    graph: null,\n    degreeDict: {},\n    nodesPanelData: {},\n  };\n\n  @observable\n  rawGraph = {\n    nodes: [],\n    edges: [],\n  };\n\n  //saved states from loaded graph snapshot\n  @observable savedStates = null;\n\n  @observable\n  metadata = {\n    fullNodes: 0,\n    fullEdges: 0,\n    nodeProperties: [],\n    nodeComputed: [\"pagerank\", \"degree\"],\n    edgeProperties: [],\n    snapshotName: \"loading...\", // Optional: for display in Argo-scholar only\n    snapshotId: \"\",\n  };\n\n  // used for listing all the properties, either original or computed\n  @computed\n  get allPropertiesKeyList() {\n    return uniq([\n      ...this.metadata.nodeProperties,\n      ...this.metadata.nodeComputed,\n    ]).filter((k) => k !== \"id\"); // since node_id is already present\n  }\n\n  @observable.ref frame = null;\n  @observable.ref positions = null;\n  @observable pinnedNodes = null;\n\n  @observable overrides = new Map();\n  @observable searchOrder = \"degree\";\n\n  hasGraphLoaded = false;\n\n  @computed\n  get hasGraph() {\n    if (this.rawGraph.nodes.length > 0) {\n      this.hasGraphLoaded = true;\n    }\n    return this.hasGraphLoaded;\n  }\n\n  @computed\n  get minMax() {\n    const ret = {};\n    for (const p of [\n      ...this.metadata.nodeProperties,\n      ...this.metadata.nodeComputed,\n    ]) {\n      let min = Number.MAX_VALUE;\n      let max = Number.MIN_VALUE;\n\n      for (const n of this.rawGraph.nodes) {\n        min = Math.max(Math.min(min, n[p]), 0.0000001);\n        max = Math.max(max, n[p]);\n      }\n\n      ret[p] = [min, max];\n    }\n    return ret;\n  }\n\n  @computed\n  get nodeSizeScale() {\n    return scales[this.nodes.size.scale]()\n      .domain(this.minMax[this.nodes.sizeBy])\n      .range([this.nodes.size.min, this.nodes.size.max]);\n  }\n\n  @computed\n  get nodeColorScale() {\n    return scales[this.nodes.color.scale]()\n      .domain(this.minMax[this.nodes.colorBy])\n      .range([this.nodes.color.from, this.nodes.color.to]);\n  }\n\n  // Return raw graph nodes that is neighbor with the selected node,\n  // excluding the node itself.\n  getNeighborNodesFromRawGraph(selectedNodeId) {\n    const setOfNeighborIds = new Set();\n    this.rawGraph.edges.forEach((e) => {\n      const source = e.source_id.toString();\n      const target = e.target_id.toString();\n      if (source === selectedNodeId && target !== selectedNodeId) {\n        setOfNeighborIds.add(target);\n      }\n      if (target === selectedNodeId && source !== selectedNodeId) {\n        setOfNeighborIds.add(source);\n      }\n    });\n    return this.rawGraph.nodes.filter((node) =>\n      setOfNeighborIds.has(node.id.toString())\n    );\n  }\n\n  // Triggers autorun in stores/index.js to sent computedGraph to graph-frontend.\n  @computed\n  get computedGraph() {\n    const graph = createGraph();\n    this.rawGraph.nodes.forEach((n) => {\n      // If isHidden flag is defined and true, ignore the node in graph-frontend.\n      if (n.isHidden) {\n        return;\n      }\n      const override = this.overrides.get(n.id.toString());\n      graph.addNode(n.id.toString(), {\n        label: (override && override.get(\"label\")) || n[this.nodes.labelBy],\n        size:\n          (override && override.get(\"size\")) ||\n          this.nodeSizeScale(n[this.nodes.sizeBy]),\n        color:\n          (override && override.get(\"color\")) ||\n          this.nodeColorScale(n[this.nodes.colorBy]),\n        shape: (override && override.get(\"shape\")) || n[this.nodes.shape],\n        ref: n,\n      });\n    });\n\n    this.rawGraph.edges.forEach((e) => {\n      // If isHidden flag is defined and true on an associated node,\n      // leave out its related edges.\n      if (\n        graph.hasNode(e.source_id.toString()) &&\n        graph.hasNode(e.target_id.toString())\n      ) {\n        graph.addLink(e.source_id.toString(), e.target_id.toString());\n      }\n    });\n\n    return graph;\n  }\n\n  @computed\n  get numHiddenNodes() {\n    return this.rawGraph.nodes.filter((n) => n.isHidden).length;\n  }\n\n  /**\n   * citationOrReference: 0 if citation, 1 if reference\n   */\n  addNodetoGraph(paperJsonResponse, parentID, citationOrReference) {\n    let rawGraphNodes = appState.graph.rawGraph.nodes;\n    let edgesArr = appState.graph.rawGraph.edges;\n    let backEndgraph = appState.graph.preprocessedRawGraph.graph;\n    let degreeDict = appState.graph.preprocessedRawGraph.degreeDict;\n\n    if (!(paperJsonResponse.paperId in degreeDict)) {\n      backEndgraph.addNode(paperJsonResponse.paperId);\n      let addedNode = {\n        id: paperJsonResponse.paperId,\n        degree: 0,\n        pagerank: 0,\n        paperName: paperJsonResponse.title,\n        paperAbstract:\n          paperJsonResponse.abstract == null\n            ? \"n/a\"\n            : paperJsonResponse.abstract,\n        authors: paperJsonResponse.authors.map((n) => n.name).join(\", \"),\n        citationCount: paperJsonResponse.citationCount,\n        venue: paperJsonResponse.venue == \"\" ? \"n/a\" : paperJsonResponse.venue,\n        year: paperJsonResponse.year,\n        url: paperJsonResponse.url,\n        isHidden: false,\n      };\n      degreeDict[paperJsonResponse.paperId] = 0;\n      rawGraphNodes.push(addedNode);\n    }\n\n    if (parentID != \"null\") {\n      if (citationOrReference == 0) {\n        backEndgraph.addLink(paperJsonResponse.paperId, parentID);\n        edgesArr.push({\n          source_id: paperJsonResponse.paperId,\n          target_id: parentID,\n        });\n      } else {\n        backEndgraph.addLink(parentID, paperJsonResponse.paperId);\n        edgesArr.push({\n          source_id: parentID,\n          target_id: paperJsonResponse.paperId,\n        });\n      }\n      degreeDict[paperJsonResponse.paperId] += 1;\n      degreeDict[parentID] += 1;\n    }\n\n    paperJsonResponse.citations.forEach((citation) => {\n      if (\n        citation.paperId in degreeDict &&\n        !backEndgraph.getLink(citation.paperId, paperJsonResponse.paperId)\n      ) {\n        this.addEdgetoGraph(citation.paperId, paperJsonResponse.paperId);\n      }\n    });\n\n    paperJsonResponse.references.forEach((reference) => {\n      if (\n        reference.paperId in degreeDict &&\n        !backEndgraph.getLink(paperJsonResponse.paperId, reference.paperId)\n      ) {\n        this.addEdgetoGraph(paperJsonResponse.paperId, reference.paperId);\n      }\n    });\n\n    backEndgraph = appState.graph.preprocessedRawGraph.graph;\n\n    const rank = pageRank(backEndgraph);\n\n    let nodesArr = rawGraphNodes.map((n) => ({\n      ...n,\n      node_id: n.id,\n      pagerank: rank[n.id],\n      degree: degreeDict[n.id],\n      paperName: n.paperName,\n      paperAbstract: n.paperAbstract,\n      authors: n.authors,\n      citationCount: n.citationCount,\n      venue: n.venue,\n      year: n.year,\n      url: n.url,\n    }));\n\n    const nodesData = nodesArr.reduce((map, currentNode) => {\n      map[currentNode.node_id] = currentNode;\n      return map;\n    }, {});\n\n    appState.graph.preprocessedRawGraph = {\n      graph: backEndgraph,\n      degreeDict: degreeDict,\n      nodesPanelData: nodesData,\n    };\n\n    this.frame.updateFrontEndNodeGraphDataWithBackendRawgraph();\n\n    appState.graph.rawGraph = { nodes: nodesArr, edges: edgesArr };\n    appState.graph.metadata.fullNodes = nodesArr.length;\n    appState.graph.metadata.fullEdges = edgesArr.length;\n    appState.graph.metadata.nodeProperties = Object.keys(nodesArr[0]);\n  }\n\n  addEdgetoGraph(citingID, citedID) {\n    appState.graph.preprocessedRawGraph.graph.addLink(citingID, citedID);\n    appState.graph.rawGraph.edges.push({\n      source_id: citingID,\n      target_id: citedID,\n    });\n    appState.graph.preprocessedRawGraph.degreeDict[citingID] += 1;\n    appState.graph.preprocessedRawGraph.degreeDict[citedID] += 1;\n  }\n\n  showNodes(nodeids) {\n    appState.logger.addLog({eventName: 'ShowNodes', elementName: nodeids})\n    runInAction(\"show hidden nodes by ids\", () => {\n      this.rawGraph.nodes = this.rawGraph.nodes.map((n) => {\n        if (nodeids.includes(n.id)) {\n          return { ...n, isHidden: false };\n        }\n        return n;\n      });\n    });\n  }\n\n  hideNodes(nodeids) {\n    appState.logger.addLog({eventName: 'HideNodes', elementName: nodeids})\n    runInAction(\"hide nodes by ids\", () => {\n      this.frame.removeNodesByIds(nodeids);\n      this.rawGraph.nodes = this.rawGraph.nodes.map((n) => {\n        if (nodeids.includes(n.id)) {\n          return { ...n, isHidden: true };\n        }\n        return n;\n      });\n    });\n  }\n\n  removeNodes(nodeids) {\n    runInAction(\"remove nodes by ids\", () => {\n      this.frame.removeNodesByIds(nodeids);\n      this.rawGraph.nodes = this.rawGraph.nodes.filter(\n        (n) => !nodeids.includes(n.id)\n      );\n      this.rawGraph.edges = this.rawGraph.edges.filter(\n        (e) => !nodeids.includes(e.source_id) && !nodeids.includes(e.target_id)\n      );\n    });\n  }\n\n  getSnapshot() {\n    if (!this.metadata.snapshotId) {\n      this.metadata.snapshotId = `${Math.round(Math.random() * 10000000, 0)}`;\n    }\n    const snapshot = {\n      rawGraph: this.rawGraph,\n      overrides: this.overrides,\n      nodesShowingLabels: this.nodesShowingLabels,\n      positions: this.frame.getPositions(),\n      pinnedNodes: Array.from(this.frame.getPinnedNodes()),\n      metadata: this.metadata,\n      global: {\n        nodes: this.nodes,\n        edges: this.edges,\n      },\n    };\n    return snapshot;\n  }\n\n  /**\n   * [Argo-scholar] Saves graph snapshot as String\n   *\n   * Note that Argo-lite snapshot contains all graph data\n   * and metadata except nodes/edges deleted by users.\n   * This is different from Argo-electron snapshot.\n   */\n  saveImmediateStates(optionalConfig) {\n    const snapshot = this.getSnapshot();\n    // TODO: add corresponding options on frontend\n    // The optional options allows users to leave out\n    // certain app state when saving snapshot\n    if (optionalConfig) {\n      if (optionalConfig.noPosition) {\n        snapshot.positions = undefined;\n      }\n      if (optionalConfig.noGlobal) {\n        snapshot.global = undefined;\n      }\n      if (optionalConfig.noOverride) {\n        snapshot.overrides = undefined;\n      }\n    }\n    return JSON.stringify(snapshot);\n  }\n\n  @action\n  loadImmediateStates(savedStatesStr) {\n    const savedStates = JSON.parse(savedStatesStr);\n    this.savedStates = savedStates;\n    if (!savedStates) {\n      return;\n    }\n    const savedOverrides = new Map(\n      Object.entries(savedStates.overrides).map(([k, v]) => [\n        k,\n        new Map(Object.entries(v)),\n      ])\n    );\n    this.overrides.clear();\n    this.overrides.merge(savedOverrides);\n\n    if (savedStates.metadata) {\n      this.metadata = savedStates.metadata;\n    }\n    if (savedStates.global) {\n      this.nodes = savedStates.global.nodes;\n      this.edges = savedStates.global.edges\n        ? savedStates.global.edges\n        : this.edges;\n    }\n    // The following lines trigger autoruns.\n    this.rawGraph = savedStates.rawGraph;\n    if (savedStates.positions) {\n      this.positions = savedStates.positions;\n    }\n    if (savedStates.nodesShowingLabels) {\n      this.initialNodesShowingLabels = savedStates.nodesShowingLabels;\n      this.nodesShowingLabels = savedStates.nodesShowingLabels;\n    }\n\n    //stores data pinned nodes in appState\n    if (savedStates.pinnedNodes) {\n      this.pinnedNodes = new Set(savedStates.pinnedNodes);\n    }\n\n    let nodesData = savedStates.rawGraph.nodes.reduce((map, currentNode) => {\n      map[currentNode.node_id] = currentNode;\n      return map;\n    }, {});\n\n    this.preprocessedRawGraph.nodesPanelData = nodesData;\n\n    let graph = createGraph();\n    let degreeDict = {};\n\n    this.rawGraph.nodes.forEach((node) => {\n      graph.addNode(node.id);\n      degreeDict[node.id] = node.degree;\n    });\n\n    this.rawGraph.edges.forEach((edge) => {\n      graph.addLink(edge.source_id, edge.target_id);\n    });\n\n    this.preprocessedRawGraph.graph = graph;\n    this.preprocessedRawGraph.degreeDict = degreeDict;\n\n    this.runActiveLayout();\n  }\n\n  //resumes graph layout for a set duration before smart-pausing\n  runActiveLayout() {\n    if (this.frame) {\n      this.frame.paused = false;\n    }\n    this.smartPause.defaultActive.isActive = true;\n    this.smartPause.defaultActive.startTime = Date.now();\n    this.smartPause.smartPaused = false;\n  }\n\n  //selects which nodes should be pinned based on saved state of loaded snapshot\n  pinNodes() {\n    if (this.pinnedNodes) {\n      let nodesToPin = [];\n      let that = this; //\"this\" will not work inside of forEach, so it needs to be stored\n      this.process.graph.forEachNode(function (n) {\n        if (that.pinnedNodes.has(n.id)) {\n          nodesToPin.push(n);\n        }\n      });\n      this.frame.setPinnedNodes(nodesToPin);\n    }\n  }\n\n  setUpFrame() {\n    if (this.frame) {\n      this.frame.getGraph().clear();\n    }\n    const graphFrame = new Frame(this.computedGraph);\n    graphFrame.init();\n    graphFrame.display();\n    this.frame = graphFrame;\n    graphFrame.ee.on(\"select-nodes\", (nodes) => {\n      this.selectedNodes = nodes;\n    });\n    graphFrame.ee.on(\"show-node-label\", (nodes) => {\n      this.nodesShowingLabels = nodes;\n    });\n    graphFrame.ee.on(\"right-click\", (data) => {\n      this.process.onHover();\n      this.frame.rightClickedNode = this.currentlyHovered;\n      const menu = MenuFactory({\n        children: [\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.toggleSelectedLabels();\n            },\n            text: \"Toggle Labels\",\n            key: \"Toggle Labels\",\n          }),\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.unpinSelectedNodes();\n            },\n            text: \"Unpin Selected\",\n            key: \"Unpin Selected\",\n          }),\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.pinSelectedNodes();\n            },\n            text: \"Pin Selected\",\n            key: \"Pin Selected\",\n          }),\n          // this.frame.rightClickedNode &&\n          //   MenuItemFactory({\n          //     onClick: () => {\n          //       if (this.frame.rightClickedNode) {\n          //         const rightClickedNodeId =\n          //           this.frame.rightClickedNode.data.ref.id.toString();\n          //         const neighbors =\n          //           this.getNeighborNodesFromRawGraph(rightClickedNodeId);\n          //         neighbors.sort((n1, n2) => {\n          //           if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n          //             return n2[\"pagerank\"] - n1[\"pagerank\"];\n          //           }\n          //           return 0;\n          //         });\n          //         const ids = [];\n          //         for (let i = 0; i < 5 && i < neighbors.length; i++) {\n          //           ids.push(neighbors[i].id);\n          //         }\n          //         this.showNodes(ids);\n          //       }\n          //     },\n          //     text: \"Show 5 Neighbors with Highest PageRank\",\n          //     key: \"Show 5 Neighbors with Highest PageRank\",\n          //   }),\n          this.frame.rightClickedNode && MenuDividerFactory({}),\n          this.frame.rightClickedNode && MenuItemFactory({\n            children: [\n              MenuItemFactory({\n                onClick: () => {\n                  BackendAPIUtils.addSortedCitations(\"relevance\", this);\n                },\n                text: \"Sort By Relevance\",\n                key: \"Sort By Relevance\",\n              }),\n              MenuItemFactory({\n                onClick: () => {\n                  BackendAPIUtils.addSortedCitations(\"is-influential\", this);\n                },\n                text: \"Sort By Most Influenced Papers\",\n                key: \"Sort By Most Influenced Papers\",\n              }),\n              MenuItemFactory({\n                onClick: () => {\n                  BackendAPIUtils.addSortedCitations(\"total-citations\", this);\n                },\n                text: \"Sort By Citation Count\",\n                key: \"Sort By Citation Count\",\n              }),\n              MenuItemFactory({\n                onClick: () => {\n                  BackendAPIUtils.addSortedCitations(\"pub-date\", this);\n                },\n                text: \"Sort By Recency\",\n                key: \"Sort By Recency\",\n              }),\n            ],\n            text: \"Add 5 Paper Citations\",\n            key: \"Add 5 Paper Citations\",\n          }),\n          this.frame.rightClickedNode &&\n            MenuItemFactory({\n              children: [\n                MenuItemFactory({\n                  onClick: () => {\n                    BackendAPIUtils.addSortedReferences(\"relevance\", this);\n                  },\n                  text: \"Sort By Relevance\",\n                  key: \"Sort By Relevance\",\n                }),\n                MenuItemFactory({\n                  onClick: () => {\n                    BackendAPIUtils.addSortedReferences(\"is-influential\", this);\n                  },\n                  text: \"Sort By Most Influenced Papers\",\n                  key: \"Sort By Most Influenced Papers\",\n                }),\n                MenuItemFactory({\n                  onClick: () => {\n                    BackendAPIUtils.addSortedReferences(\"year\", this);\n                  },\n                  text: \"Sort By Recency\",\n                  key: \"Sort By Recency\",\n                }),\n              ],\n              text: \"Add 5 Paper References\",\n              key: \"Add 5 Paper References\",\n            }),\n        ],\n      });\n      ContextMenu.show(menu, { left: data.pageX, top: data.pageY }, () => {\n        // onMenuClose\n        console.log(\"ContextMenu closed\");\n        this.currentlyHovered = null;\n        this.startedHovering = false;\n        this.hoveredTime = undefined;\n        this.autoDisplayExploration = false;\n      });\n    });\n  }\n\n  /*\n   * Graph algorithms used in StatisticsDialog.\n   */\n\n  get averageClustering() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return averageClusteringCoefficient(snapshot);\n  }\n\n  get components() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return connectedComponents(snapshot);\n  }\n\n  @computed\n  get density() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return graphDensity(snapshot);\n  }\n\n  @computed\n  get degree() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return averageDegree(snapshot);\n  }\n\n  @computed\n  get diameter() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return exactGraphDiameter(snapshot);\n  }\n}\n","import { observable } from \"mobx\";\n\nexport default class ImportStore {\n  @observable graphFile = \"\";\n  @observable stateFile = \"\";\n\n  @observable dialogOpen = false;\n  @observable gexfDialogOpen = false;\n\n  @observable loading = false;\n\n  // Argo-lite specific: File object selected via the file input.\n  @observable selectedEdgeFileFromInput = null;\n  @observable selectedNodeFileFromInput = null;\n\n  @observable selectedGexfFileFromInput = null;\n\n  @observable\n  importConfig = {\n    nodeFile: {\n      path: \"\",\n      topN: [],\n      hasColumns: true,\n      ready: false, // whether the topN is ready to display\n      columns: [],\n      mapping: {\n        id: \"<UNK>\"\n      },\n      delimiter: \",\"\n    },\n    edgeFile: {\n      path: \"\",\n      ready: false,\n      hasColumns: true,\n      columns: [],\n      topN: [],\n      mapping: {\n        fromId: \"<UNK>\",\n        toId: \"<UNK>\"\n      },\n      createMissing: true,\n      delimiter: \",\"\n    }\n  };\n\n  /*\n    Post Import Filtering related options.\n  */\n\n  postImportFilteringOptions = {\n    \"top 10 nodes with highest PageRank scores\": (rawGraph) => {\n      const sortedList = [...rawGraph.nodes];\n      sortedList.sort((n1, n2) => {\n          if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n              return n2[\"pagerank\"] - n1[\"pagerank\"];\n          }\n          return 0;\n      });\n      const setIds = new Set();\n      for (let i = 0; i < 10 && i < sortedList.length; i++) {\n        setIds.add(sortedList[i].id);\n      }\n      rawGraph.nodes = rawGraph.nodes.map(n => {\n        if (setIds.has(n.id)) {\n          return {...n, isHidden: false};\n        }\n        return n;\n      });\n    },\n    \"All Nodes\": (rawGraph) => {\n      rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: false}));\n    },\n  };\n\n  defaultPostImportFilteringOption = \"top 10 nodes with highest PageRank scores\";\n  \n  @observable selectedPostImportFilteringOption = this.defaultPostImportFilteringOption;\n\n  postImportFilter(rawGraph) {\n    // Hide all nodes by default, use filtering option to show them.\n    rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: true}));\n    // Run the selected post import filtering option.\n    this.postImportFilteringOptions[this.selectedPostImportFilteringOption](rawGraph);\n  }\n\n\n}\n","import { observable } from \"mobx\";\n\nexport default class ProjectStore {\n \n  @observable projects = [];\n\n  /*\n   * Active project and snapshot\n   */\n  @observable currentProject = null;\n  // @observable currentProjectName = null;\n  // @observable currentProjectPath = null;\n  @observable currentSnapshotName = \"Quick Save\"; // TODO: If not loaded from snapshot, use this, otherwise use the name of the loaded snapshot\n\n  // [Argo-lite] for displaying snapshot file in textarea to be copied\n  @observable stringCopyOfSnapshot = 'Loading';\n  \n  /*\n   * Dialogs and UI\n   */\n  @observable isNewProjectDialogOpen = false;\n  @observable isProjectDetailDialogOpen = false;\n  @observable isSaveSnapshotDialogOpen = false;\n  @observable isRenameSnapshotDialogOpen = false;\n  // @observable isAddPapersDialogOpen = false; used for Dialog box, switched to popover box now\n  @observable isNewNetworkDialogOpen = false;\n\n// when the ipc returns the projects data for the first time\n  // turn off `isFetching` so that the spinner of WorkspaceView will be turned off\n  // Also used when refreshing WorkspaceView\n  @observable isFetching = true;\n\n  // @observable currentQuery = '';\n\n  // @observable searchResults = [];\n  /*\n   * New project creation and import\n   */\n  @observable newProjectName = '';\n}\n","import { observable } from \"mobx\";\n\nexport default class SearchStore {\n  @observable searchStr = \"\";\n  @observable candidates = [];\n  @observable numCandidates = 0;\n  @observable panelOpen = false;\n}\n","/**\n * @typedef {Object} LogValue A value that an interaction event changes\n * @property {string} name Value name\n * @property {string | number | number[]} value Value\n */\n\n/**\n * @typedef {Object} Log A single event log\n * @property {string} eventName A string from ['click', 'dragEnd',\n *  'mouseEnter', 'mouseLeave']\n * @property {string} elementName Name of element that handles the event\n * @property {Date} time Timestamp for the event\n * @property {LogValue | null} oldValue The old value that this interaction\n *  changes from\n * @property {LogValue | null} newValue The new value that this interaction\n *  changes to\n */\nimport appState from \"../stores\";\n\n/**\n * An object to log interaction events.\n */\nexport class Logger {\n  /**\n   * Initialize a new Logger object.\n   * @param {any} [initialValues] Any objects to store with the logger\n   */\n  constructor(initialValues = null) {\n    /** @type{Log[]} */\n    this.log = [];\n\n    this.initialValues = initialValues;\n\n    /** @type{Date} */\n    this.startTime = new Date();\n\n    this.id = Math.round(Math.random() * 1000, 0);\n\n    this.fileName =  `f${this.startTime}-${this.id}.json`;\n    // Create a map to register any object on the fly\n    /** @type {object[][]} Each entry is [key, value, timestamp]*/\n    this.records = [];\n\n    this.addOSRecord();\n    this.addBrowserRecord();\n\n    this.logNum = 0;\n  }\n\n  /**\n   * Add a new log event\n   * @param {object} obj Smart parameter\n   * @param {string} obj.eventName A string from ['click', 'dragEnd',\n   *  'mouseEnter', 'mouseLeave'] or any other given name\n   * @param {string} obj.elementName Name of the element that users interact\n   *  with\n   * @param {Date | null} [obj.time] Timestamp for the event\n   * @param {string | null} [obj.valueName] Name of the given value\n   * @param {string | number | null | number[]} [obj.oldValue] Old value that\n   *  this interaction changes from\n   * @param {string | number | null | number[]} [obj.newValue] New value that\n   *  this interaction changes to\n   */\n  addLog({\n    eventName,\n    elementName,\n    time = null,\n    valueName = null,\n    oldValue = null,\n    newValue = null\n  }) {\n    // Create a time stamp if it is not given\n    const timeStamp = time !== null ? time : new Date();\n\n    // Create value objects if they are given\n\n    /** @type {LogValue} */\n    let oldValueObj = null;\n\n    /** @type {LogValue} */\n    let newValueObj = null;\n\n    if (valueName !== null) {\n      if (oldValue !== null) {\n        oldValueObj = {\n          name: valueName,\n          value: oldValue\n        };\n      }\n      if (newValue !== null) {\n        newValueObj = {\n          name: valueName,\n          value: newValue\n        };\n      }\n    }\n\n    // Create a new Log object\n    /** @type {Log} */\n    const newLog = {\n      eventName,\n      elementName,\n      time: timeStamp,\n      oldValue: oldValueObj,\n      newValue: newValueObj\n    };\n\n    this.log.push(newLog);\n    this.logNum += 1;\n    if (this.logNum % 10 == 0) {\n      appState.logger.uploadToS3();\n    }\n  }\n\n  /**\n   * Overwrite the initial values\n   * @param {any} initialValues\n   */\n  setInitialValues(initialValues) {\n    this.initialValues = initialValues;\n  }\n\n  /**\n   * Add a key value pair to the internal record map.\n   * @param {string} key Key name\n   * @param {any} value Any serializable object\n   */\n  addRecord(key, value) {\n    this.records.push([key, value, new Date()]);\n  }\n\n  /**\n   * Detect what is the current browser and add the info to the record.\n   */\n  addBrowserRecord() {\n    let browser = 'unknown';\n    if (\n      (!!window.opr && !!opr.addons) ||\n      !!window.opera ||\n      navigator.userAgent.indexOf(' OPR/') >= 0\n    ) {\n      browser = 'opera';\n    } else if (typeof InstallTrigger !== 'undefined') {\n      browser = 'firefox';\n    } else if (\n      /constructor/i.test(window.HTMLElement) ||\n      (function (p) {\n        return p.toString() === '[object SafariRemoteNotification]';\n      })(\n        !window['safari'] ||\n          (typeof safari !== 'undefined' && window['safari'].pushNotification)\n      )\n    ) {\n      browser = 'safari';\n    } else if (/*@cc_on!@*/ false || !!document.documentMode) {\n      browser = 'ie';\n    } else if (!!window.StyleMedia) {\n      browser = 'edge';\n    } else if (\n      !!window.chrome &&\n      (!!window.chrome.webstore || !!window.chrome.runtime)\n    ) {\n      browser = 'chrome';\n    }\n\n    this.addRecord('browser', browser);\n  }\n\n  /**\n   * Detect the current OS and add the info to the record.\n   */\n  addOSRecord() {\n    let osName = 'Unknown OS';\n\n    if (navigator.userAgent.indexOf('Win') != -1) osName = 'windows';\n    if (navigator.userAgent.indexOf('Mac') != -1) osName = 'mac';\n    if (navigator.userAgent.indexOf('Linux') != -1) osName = 'linux';\n    if (navigator.userAgent.indexOf('Android') != -1) osName = 'android';\n    if (navigator.userAgent.indexOf('like Mac') != -1) osName = 'ios';\n\n    this.addRecord('os', osName);\n  }\n\n  /**\n   * Export the logs as a JSON string.\n   * @param {any} [endValues] Any values to exported with the log\n   */\n  toJSON(endValues = null) {\n    const exportLog = {\n      log: this.log,\n      startTime: this.startTime,\n      endTime: new Date(),\n      initialValues: this.initialValues,\n      endValues: endValues,\n      records: this.records,\n      key: this.fileName\n    };\n    return JSON.stringify(exportLog);\n  }\n\n  /**\n   * Upload the\n   */\n  async uploadToS3() {\n    try {\n      const url = 'https://argo-cors-anywhere.herokuapp.com/https://h5r94usqaf.execute-api.us-east-1.amazonaws.com/default/LogArgoActions';\n\n      const blob = new Blob([this.toJSON()], {type: 'application/json'});\n\n      fetch(url, {\n        method: 'POST',\n        keepalive: true,\n        body: blob\n      });\n\n    } catch (e) {\n      console.error('Failed to upload to S3');\n      // this.download();\n      return -1;\n    }\n\n  }\n\n  /**\n   * Download the log file as a JSON file.\n   */\n  download() {\n    downloadJSON(JSON.parse(this.toJSON()), null, 'strategy-data.json');\n  }\n}\n\nwindow.addEventListener('beforeunload', (event) => {\n  if (appState.logger.logNum > 3) {\n    appState.logger.uploadToS3();\n  }\n  }\n);","import { autorun, runInAction } from \"mobx\";\nimport { Intent } from \"@blueprintjs/core\";\n\nimport PreferencesStore from \"./PreferencesStore\";\nimport GraphStore from \"./GraphStore\";\nimport ImportStore from \"./ImportStore\";\nimport ProjectStore from \"./ProjectStore\";\n// import { peakCSV } from \"../services/CSVUtils\";\nimport parse from \"csv-parse/lib/sync\";\nimport SearchStore from \"./SearchStore\";\nimport { runSearch } from \"../ipc/client\";\nimport { Logger } from \"../ipc/logger\";\n\nimport { BACKEND_URL, SAMPLE_GRAPH_SNAPSHOTS } from \"../constants\";\nimport { toaster } from \"../notifications/client\";\n\nexport class AppState {\n  constructor() {\n    this.preferences = new PreferencesStore();\n    this.graph = new GraphStore();\n    this.import = new ImportStore();\n    this.search = new SearchStore();\n    this.project = new ProjectStore();\n    this.logger = new Logger();\n  }\n}\n\nconst appState = new AppState();\n\nwindow.appState = appState;\n\nconst loadSnapshotFromURL = (url) => {\n  return fetch(url, {\n    method: \"GET\",\n    mode: \"cors\",\n  })\n    .then((response) => response.text())\n    .catch((error) => {\n      toaster.show({\n        message: \"Failed to fetch graph snapshot\",\n        intent: Intent.DANGER,\n        timeout: -1,\n        iconName: \"warning-sign\",\n      });\n      console.error(error);\n    });\n};\n\nconst loadSnapshotFromStrapi = (uuid) => {\n  const url = `${BACKEND_URL}/snapshots?uuid=${uuid}`;\n  return fetch(url, {\n    method: \"GET\",\n    mode: \"cors\",\n  })\n    .then((response) => response.json())\n    .then((json) => json[0].body)\n    .catch((error) => {\n      toaster.show({\n        message: \"Failed to fetch graph snapshot\",\n        intent: Intent.DANGER,\n        timeout: -1,\n        iconName: \"warning-sign\",\n      });\n      console.error(error);\n    });\n};\n\nconst loadAndDisplaySnapshotFromURL = (url) => {\n  loadSnapshotFromURL(url).then((snapshotString) => {\n    // use filename/last segment of URL as title in Navbar\n    appState.logger.addLog({eventName: `LoadSnapshotFromURL`, elementName: url});\n    appState.graph.metadata.snapshotName =\n      url.split(\"/\").pop() || url.split(\"/\").pop().pop();\n    appState.graph.loadImmediateStates(snapshotString);\n  });\n};\n\nconst loadAndDisplaySnapshotFromStrapi = (uuid) => {\n  loadSnapshotFromStrapi(uuid).then((snapshotString) => {\n    // TODO: use more sensible snapshot name\n    appState.logger.addLog({eventName: `LoadSnapshotFromStrapi`, elementName: uuid});\n    appState.graph.metadata.snapshotName = \"Shared\";\n    appState.graph.loadImmediateStates(snapshotString);\n  });\n};\n\nwindow.loadAndDisplaySnapshotFromURL = loadAndDisplaySnapshotFromURL;\nwindow.loadAndDisplaySnapshotFromStrapi = loadAndDisplaySnapshotFromStrapi;\n\nwindow.loadInitialSampleGraph = async () => {\n  // default fallback url\n  let url = \"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\";\n\n  // check url hash\n  if (window.location.hash) {\n    const hash = window.location.hash.substring(1);\n    // If the hash component begins with http.\n    if (hash.length >= 4 && hash.startsWith(\"http\")) {\n      try {\n        url = decodeURIComponent(hash);\n      } catch (e) {\n        console.error(e);\n        alert(\"Provided URL is not valid.\");\n      }\n    } else {\n      // If the hash component does not begin with http\n      // treat it as a uuid in strapi.\n      loadAndDisplaySnapshotFromStrapi(hash);\n      return;\n    }\n  }\n  // loadAndDisplaySnapshotFromURL(url)\n  loadAndDisplaySnapshotFromStrapi(SAMPLE_GRAPH_SNAPSHOTS[0][1]);\n};\n\nwindow.saveSnapshotToString = () => {\n  const snapshotString = appState.graph.saveImmediateStates();\n  return snapshotString;\n};\n\n// Load initial sample graph when Argo Lite is ready\nwindow.addEventListener(\"load\", (event) => {\n  window.loadInitialSampleGraph();\n});\n\nconst updateTimeout = null;\n\n// Load graph on frontend once the rawGraph has been returned from IPC\n// Once a graph has been loaded and displayed, even if nodes are all deleted, still consider it \"hasGraph\"\nautorun(() => {\n  if (!appState.graph.hasGraph && appState.graph.rawGraph.nodes.length > 0) {\n    appState.graph.hasGraph = true;\n  }\n});\n\nautorun(() => {\n  if (appState.graph.frame) {\n    appState.graph.frame.updateGraph(appState.graph.computedGraph); //loads nodes on screen when snapshot loaded\n    appState.graph.frame.setAllNodesShapeWithOverride(\n      appState.graph.nodes.shape,\n      appState.graph.overrides\n    );\n    appState.graph.frame.setLabelRelativeSize(appState.graph.nodes.labelSize);\n    appState.graph.frame.setLabelLength(appState.graph.nodes.labelLength);\n  }\n\n  //pins nodes only after nodes are loaded\n  appState.graph.pinNodes();\n});\n\nautorun(() => {\n  if (appState.graph.frame && appState.graph.positions) {\n    // If positions are saved in a snapshot, pause layout upon loading.\n    appState.graph.frame.updatePositions(appState.graph.positions);\n    appState.graph.positions = null;\n    console.log(\"[autorun] Positions updated.\");\n  }\n  if (appState.graph.frame && appState.graph.initialNodesShowingLabels) {\n    appState.graph.frame.showLabels(appState.graph.initialNodesShowingLabels);\n    appState.graph.initialNodesShowingLabels = null;\n  }\n});\n\nautorun(() => {\n  const searchStr = appState.search.searchStr;\n  if (searchStr.length >= 3) {\n    runSearch(searchStr);\n  } else {\n    appState.search.panelOpen = false;\n    appState.search.candidates.splice(0, appState.search.candidates.length);\n    if (appState.graph.frame) {\n      appState.graph.frame.highlightNodeIds([], true);\n    }\n  }\n});\n\n// Argo-lite specific: extract CSV from File object and update related fields.\nautorun(() => {\n  const file = appState.import.selectedEdgeFileFromInput;\n  const hasHeader = appState.import.importConfig.edgeFile.hasColumns;\n  const delimiter = appState.import.importConfig.edgeFile.delimiter;\n\n  if (!file) {\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {\n    // Read entire CSV into memory as string\n    const fileAsString = reader.result;\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\n    const lines = fileAsString.split(\"\\n\");\n    const lineNumber = lines.length;\n    const topLinesAsString = lines\n      .map((l) => l.trim())\n      .filter((l, i) => i < 20)\n      .join(\"\\n\");\n    console.log(topLinesAsString);\n\n    // Parse the top lines\n    try {\n      const it = hasHeader\n        ? parse(topLinesAsString, {\n            comment: \"#\",\n            trim: true,\n            auto_parse: true,\n            skip_empty_lines: true,\n            columns: hasHeader,\n            delimiter,\n          })\n        : parse(topLinesAsString, {\n            comment: \"#\",\n            trim: true,\n            auto_parse: true,\n            skip_empty_lines: true,\n            columns: undefined,\n            delimiter,\n          });\n      runInAction(\"preview top N lines of edge file\", () => {\n        appState.import.importConfig.edgeFile.topN = it;\n        appState.import.importConfig.edgeFile.columns = Object.keys(it[0]).map(\n          (key) => `${key}`\n        );\n        appState.import.importConfig.edgeFile.mapping.fromId =\n          appState.import.importConfig.edgeFile.columns[0];\n        appState.import.importConfig.edgeFile.mapping.toId =\n          appState.import.importConfig.edgeFile.columns[1];\n        appState.import.importConfig.edgeFile.ready = true;\n      });\n    } catch {\n      toaster.show({\n        message: \"Error: Fails to parse file\",\n        intent: Intent.DANGER,\n        timeout: -1,\n        iconName: \"warning-sign\",\n      });\n    }\n  };\n\n  reader.onerror = () => {\n    console.error(reader.error);\n    toaster.show({\n      message: \"Error: Fails to open file\",\n      intent: Intent.DANGER,\n      timeout: -1,\n      iconName: \"warning-sign\",\n    });\n  };\n});\n\nautorun(() => {\n  const file = appState.import.selectedNodeFileFromInput;\n  const hasHeader = appState.import.importConfig.nodeFile.hasColumns;\n  const delimiter = appState.import.importConfig.nodeFile.delimiter;\n\n  if (!file) {\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {\n    // Read entire CSV into memory as string\n    const fileAsString = reader.result;\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\n    const lines = fileAsString.split(\"\\n\");\n    const lineNumber = lines.length;\n    const topLinesAsString = lines\n      .map((l) => l.trim())\n      .filter((l, i) => i < 20)\n      .join(\"\\n\");\n    console.log(topLinesAsString);\n\n    // Parse the top lines\n    try {\n      const it = hasHeader\n        ? parse(topLinesAsString, {\n            comment: \"#\",\n            trim: true,\n            auto_parse: true,\n            skip_empty_lines: true,\n            columns: hasHeader,\n            delimiter,\n          })\n        : parse(topLinesAsString, {\n            comment: \"#\",\n            trim: true,\n            auto_parse: true,\n            skip_empty_lines: true,\n            columns: undefined,\n            delimiter,\n          });\n\n      runInAction(\"preview top N lines of node file\", () => {\n        appState.import.importConfig.nodeFile.topN = it;\n        appState.import.importConfig.nodeFile.columns = Object.keys(it[0]).map(\n          (key) => `${key}`\n        );\n        appState.import.importConfig.nodeFile.mapping.id =\n          appState.import.importConfig.nodeFile.columns[0];\n        appState.import.importConfig.nodeFile.ready = true;\n      });\n    } catch {\n      toaster.show({\n        message: \"Error: Fails to open file\",\n        intent: Intent.DANGER,\n        timeout: -1,\n        iconName: \"warning-sign\",\n      });\n    }\n  };\n\n  reader.onerror = () => {\n    console.error(reader.error);\n    toaster.show({\n      message: \"Error: Fails to open file\",\n      intent: Intent.DANGER,\n      timeout: -1,\n      iconName: \"warning-sign\",\n    });\n  };\n});\n\nexport default appState;\n","import React from \"react\";\nimport { Button, Classes, Dialog, Intent, Switch } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { requestChangeWorkspace } from \"../ipc/client\";\n\n@observer\nclass PreferencesDialog extends React.Component {\n  render() {\n    return (\n      <Dialog\n        iconName=\"cog\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.dialogOpen}\n        onClose={() => {\n          appState.preferences.dialogOpen = false;\n        }}\n        title=\"Preferences\"\n      >\n        <div className=\"pt-dialog-body\">\n          <Switch\n            label=\"Dark Mode\"\n            checked={appState.preferences.darkMode}\n            onChange={() => {\n              appState.preferences.darkMode = !appState.preferences.darkMode;\n              appState.preferences.saveUserConfig();\n              if (appState.graph.frame) {\n                appState.graph.frame.toggleDark();\n              }\n            }}\n          />\n          \n          <Switch\n           label=\"Minimap\"\n           checked={appState.preferences.minimapShowing}\n           onChange={() => {\n            appState.preferences.minimapShowing = !appState.preferences.minimapShowing;\n            appState.preferences.saveUserConfig();\n            if (appState.graph.frame) {\n              if (appState.preferences.minimapShowing) {\n                appState.graph.frame.showMiniMap();\n              } else {\n                appState.graph.frame.hideMiniMap();\n              }\n            } else {\n              console.log(\"Frame not ready when trying to toggle minimap.\");\n            }\n           }}\n          />\n        </div>\n        <div className=\"pt-dialog-footer\">\n          <div className=\"pt-dialog-footer-actions\">\n            <Button\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                appState.preferences.dialogOpen = false;\n              }}\n              text=\"Done\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default PreferencesDialog;","import React from \"react\";\nimport { Button, Classes, Collapse } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\n\nexport default ({ name, isOpen, onToggle, children }) => (\n  <div>\n    <Button\n      className={classnames(Classes.LARGE, Classes.FILL, Classes.MINIMAL, \"text-align-left\")}\n      rightIconName={isOpen ? \"chevron-up\" : \"chevron-down\"}\n      onClick={onToggle}\n    >\n      {name}\n    </Button>\n    <Collapse isOpen={isOpen}>{children}</Collapse>\n  </div>\n);\n","import React from \"react\";\nimport { Classes, MenuItem } from \"@blueprintjs/core\";\n\nexport default ({ handleClick, item, isActive }) => (\n  <MenuItem\n    className={isActive ? Classes.ACTIVE : \"\"}\n    key={item}\n    onClick={handleClick}\n    text={item}\n  />\n);\n","import React from \"react\";\nimport { Button, Classes } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/labs\";\nimport CommonItemRenderer from \"./CommonItemRenderer\";\n\nexport default ({ items, onSelect, value, fill = false }) => (\n  <Select\n    items={items}\n    itemRenderer={CommonItemRenderer}\n    filterable={false}\n    onItemSelect={onSelect}\n  >\n    <Button className={fill ? Classes.FILL : null} text={value} />\n  </Select>\n);\n","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch,\n  FileInput\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass PostImportOptions extends React.Component {\n  render() {\n    return (\n      <div>\n            After import, show:\n            <SimpleSelect\n                items={Object.keys(appState.import.postImportFilteringOptions)}\n                value={appState.import.selectedPostImportFilteringOption}\n                onSelect={(selected) => {\n                    appState.import.selectedPostImportFilteringOption = selected;\n                }}\n            />\n      </div>\n    );\n  }\n}\n\nexport default PostImportOptions;","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestChooseEdgeFile,\n  requestChooseNodeFile,\n  requestImportGraphFromCSV,\n  requestCreateNewProject\n} from \"../ipc/client\";\nimport Collapsable from \"./utils/Collapsable\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { NODE_AND_EDGE_FILE, ONLY_EDGE_FILE } from \"../constants/index\";\nimport PostImportOptions from './PostImportOptions';\n\n@observer\nclass PreviewTable extends React.Component {\n  render() {\n    const file = this.props.file;\n    return (\n      <Table\n        className=\"import-preview-table\"\n        numRows={file.topN.length}\n        selectedRegions={Object.values(file.mapping)\n          .map(it => file.columns.indexOf(it))\n          .map(it => ({ rows: null, cols: [it, it] }))}\n      >\n        {file.columns.map(it => (\n          <Column\n            key={it}\n            name={it}\n            renderCell={i => <Cell>{file.topN[i][it]}</Cell>}\n          />\n        ))}\n      </Table>\n    );\n  }\n}\n\n@observer\nclass ImportDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      available: ONLY_EDGE_FILE,\n      nodesOpen: true,\n      edgesOpen: true,\n      delimiter: ','\n    };\n  }\n\n  changeAvailable = targetValue => {\n    if (targetValue === ONLY_EDGE_FILE) {\n      appState.import.importConfig.edgeFile.createMissing = true;\n    }\n    this.setState({ available: targetValue });\n  };\n\n  canImport = () => {\n    if (this.state.available === NODE_AND_EDGE_FILE) {\n      return (\n        appState.import.importConfig.edgeFile.ready &&\n        appState.import.importConfig.nodeFile.ready\n      );\n    } else if (this.state.available === ONLY_EDGE_FILE) {\n      return appState.import.importConfig.edgeFile.ready;\n    }\n    return false;\n  };\n\n  renderNodesSelection = () => {\n    const nodeFile = appState.import.importConfig.nodeFile;\n    if (this.state.available === ONLY_EDGE_FILE) {\n      return null;\n    }\n    return (\n      <Collapsable\n        name=\"Nodes\"\n        isOpen={this.state.nodesOpen}\n        onToggle={() => this.setState({ nodesOpen: !this.state.nodesOpen })}\n      >\n        <div className={classnames(Classes.CONTROL_GROUP)}>\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n            <input\n              type=\"file\"\n              className={classnames(Classes.DISABLED)}\n              onChange={(event) => {\n                if (event.target.files.length < 1) {\n                  return;\n                }\n                appState.import.selectedNodeFileFromInput = event.target.files[0];\n              }}\n            />\n          </div>\n        </div>\n        <Switch\n          label=\"Has Headers\"\n          checked={nodeFile.hasColumns}\n          onChange={() => (nodeFile.hasColumns = !nodeFile.hasColumns)}\n        />\n        {nodeFile.ready && (\n          <div className=\"column-selection\">\n            <PreviewTable file={nodeFile} />\n            Column for Node ID:\n            <SimpleSelect\n              items={nodeFile.columns}\n              value={nodeFile.mapping.id}\n              onSelect={it => (nodeFile.mapping.id = it)}\n            />\n          </div>\n        )}\n      </Collapsable>\n    );\n  };\n\n  renderEdgesSelection = () => {\n    const edgeFile = appState.import.importConfig.edgeFile;\n    return (\n      <Collapsable\n        name=\"Edges\"\n        isOpen={this.state.edgesOpen}\n        onToggle={() => this.setState({ edgesOpen: !this.state.edgesOpen })}\n      >\n        <div className={classnames(Classes.CONTROL_GROUP)}>\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n            <input\n              type=\"file\"\n              className={classnames(Classes.DISABLED)}\n              onChange={(event) => {\n                if (event.target.files.length < 1) {\n                  return;\n                }\n                appState.import.selectedEdgeFileFromInput = event.target.files[0];\n              }}\n            />\n          </div>\n        </div>\n        <Switch\n          label=\"Has Headers\"\n          checked={edgeFile.hasColumns}\n          onChange={() => (edgeFile.hasColumns = !edgeFile.hasColumns)}\n        />\n        <Switch\n          label=\"Create Missing Nodes\"\n          checked={edgeFile.createMissing}\n          disabled={this.state.available === ONLY_EDGE_FILE}\n          onChange={() => (edgeFile.createMissing = !edgeFile.createMissing)}\n        />\n        {edgeFile.ready && (\n          <div className=\"column-selection\">\n            <PreviewTable file={edgeFile} />\n            Column for Source ID:\n            <SimpleSelect\n              items={edgeFile.columns}\n              value={edgeFile.mapping.fromId}\n              onSelect={it => (edgeFile.mapping.fromId = it)}\n            />{\" \"}\n            <br />\n            Column for Target ID:\n            <SimpleSelect\n              items={edgeFile.columns}\n              value={edgeFile.mapping.toId}\n              onSelect={it => (edgeFile.mapping.toId = it)}\n            />\n          </div>\n        )}\n      </Collapsable>\n    );\n  };\n\n  updateDelimiter (newDelimiter) {\n    this.setState({delimiter: newDelimiter});\n\n    if (newDelimiter == \"\\\\t\") {\n      newDelimiter = \"\\t\"\n    }\n\n    appState.import.importConfig.edgeFile.delimiter = newDelimiter\n    appState.import.importConfig.nodeFile.delimiter = newDelimiter\n  }\n\n  renderDelimiterSelection() {\n    return (\n      <div className=\"column-selection\">\n        Selected Delimiter\n        <SimpleSelect\n          items={[\",\", \"\\\\t\", \";\"]}\n          value={this.state.delimiter}\n          onSelect={it => { this.updateDelimiter(it) }}\n        />{\" \"}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.import.dialogOpen}\n        onClose={() => {\n          appState.import.dialogOpen = false;\n        }}\n        title=\"Import CSV\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div>\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n              I have:\n              <SimpleSelect\n                items={[ONLY_EDGE_FILE, NODE_AND_EDGE_FILE]}\n                value={this.state.available}\n                onSelect={this.changeAvailable}\n              />\n              {this.renderNodesSelection()}\n              {this.renderEdgesSelection()}\n              {this.renderDelimiterSelection()}\n              <hr />\n              <PostImportOptions />\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.canImport()\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // TODO: this might be unsafe, check if there's racing condition\n\n                    //active layout when new graph imported\n                    appState.graph.runActiveLayout();\n\n                    requestCreateNewProject({\n                      name: appState.project.newProjectName,\n                      createdDate: new Date().toLocaleString(),\n                    });\n                    requestImportGraphFromCSV( //edgefile.delimiter and nodefile.delimiter are the same\n                      this.state.available === NODE_AND_EDGE_FILE, appState.import.importConfig.edgeFile.delimiter, appState.project.newProjectName\n                    );\n\n                    // Importing a graph means no label would be shown by default,\n                    // thus turn off label CSSRenderer for better performance.\n                    appState.graph.frame.turnOffLabelCSSRenderer();\n                  }}\n                  text=\"Import\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default ImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestImportGraphFromGexf\n} from \"../ipc/client\";\nimport PostImportOptions from './PostImportOptions';\n\n@observer\nclass GEXFImportDialog extends React.Component {\n\n  renderImportButton() {\n    return (\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button\n            className={classnames({\n              [Classes.DISABLED]: appState.import.selectedGexfFileFromInput == null\n            })}\n            intent={Intent.PRIMARY}\n            onClick={() => {\n              // Temp\n              \n               //active layout when new graph imported\n               appState.graph.runActiveLayout();\n\n              appState.import.loading = true;\n              requestImportGraphFromGexf();\n            }}\n            text=\"Import\"\n          />\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.import.gexfDialogOpen}\n        onClose={() => {\n          appState.import.gexfDialogOpen = false;\n          appState.import.loading = false;\n        }}\n        title=\"Import GEXF\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n            <div>\n              <div className={classnames(Classes.CONTROL_GROUP)}>\n                <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                <input\n                  type=\"file\"\n                  className={classnames(Classes.DISABLED)}\n                  onChange={(event) => {\n                    if (event.target.files.length < 1) {\n                      return;\n                    }\n                    appState.import.selectedGexfFileFromInput = event.target.files[0];\n                  }}\n                />\n              </div>\n            </div>\n            <hr />\n            <PostImportOptions />\n          </div>\n            {this.renderImportButton()}\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default GEXFImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\n\n/**\n * [Deprecated] This dialog is only used to open SQlite-based\n * graph file and optionally along with a snapshot file.\n * \n * For Argo-lite, which only has the JSON snapshot file,\n * use OpenSnapshotDialog.\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent, Spinner } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestChooseGraphFile,\n  requestChooseStateFile,\n  requestOpen\n} from \"../ipc/client\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport {\n  GRAPH_AND_STATE_FILE,\n  ONLY_EDGE_FILE,\n  ONLY_GRAPH_FILE\n} from \"../constants\";\n\n@observer\nclass OpenDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      available: ONLY_GRAPH_FILE,\n      selectedGraph: null,\n      selectedState: null\n    };\n  }\n\n  canImport = () => {\n    if (this.state.available === GRAPH_AND_STATE_FILE) {\n      return appState.import.stateFile && appState.import.graphFile;\n    } else {\n      return appState.import.graphFile;\n    }\n    return false;\n  };\n\n  changeAvailable = targetValue => {\n    if (targetValue === ONLY_EDGE_FILE) {\n      appState.import.importConfig.edgeFile.createMissing = true;\n    }\n    this.setState({ available: targetValue });\n  };\n\n  renderSelectGraph = () => {\n    return (\n      <div className={classnames(Classes.CONTROL_GROUP)}>\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n          <input\n            type=\"text\"\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\n            placeholder=\"Select graph file\"\n            readOnly\n            value={appState.import.graphFile}\n          />\n        </div>\n        <Button intent={Intent.PRIMARY} onClick={requestChooseGraphFile}>\n          Choose File\n        </Button>\n      </div>\n    );\n  };\n\n  renderSelectState = () => {\n    return (\n      <div className={classnames(Classes.CONTROL_GROUP)}>\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n          <input\n            type=\"text\"\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\n            placeholder=\"Select snapshot file\"\n            readOnly\n            value={appState.import.stateFile}\n          />\n        </div>\n        <Button intent={Intent.PRIMARY} onClick={requestChooseStateFile}>\n          Choose File\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openDialogOpen}\n        onClose={() => {\n          appState.preferences.openDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div>\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n              I have:\n              <SimpleSelect\n                items={[GRAPH_AND_STATE_FILE, ONLY_GRAPH_FILE]}\n                value={this.state.available}\n                onSelect={this.changeAvailable}\n              />\n              {this.renderSelectGraph()}\n              {this.state.available === GRAPH_AND_STATE_FILE &&\n                this.renderSelectState()}\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.canImport()\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    appState.preferences.openDialogOpen = false;\n                    requestOpen();\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass NewProjectDialog extends React.Component {\n  \n  render() {\n    const isNewProjectNameDuplicate = appState.project.projects.some(p => p.name === appState.project.newProjectName);\n    const isNewProjectNameEmpty = appState.project.newProjectName.trim() === '';\n    const isValidated = !(isNewProjectNameDuplicate || isNewProjectNameEmpty);\n  \n    return (\n      <Dialog\n        iconName=\"projects\"\n        isOpen={appState.project.isNewProjectDialogOpen}\n        onClose={() => {\n          appState.project.isNewProjectDialogOpen = false;\n        }}\n        title=\"Create New Project\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <label className=\"pt-label .modifier\">\n            Project Name\n            <span className=\"pt-text-muted\"> (required){isNewProjectNameDuplicate && ' (This name has already been taken!)'}</span>\n            <input\n              className=\"pt-input\"\n              type=\"text\"\n              placeholder=\"New Project\"\n              dir=\"auto\"\n              value={appState.project.newProjectName}\n              onChange={event => {\n                appState.project.newProjectName = event.target.value;\n              }}\n            />\n          </label>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <Button\n              className={classnames({\n                [Classes.DISABLED]: !isValidated\n              })}\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                if (isValidated) {\n                  appState.project.isNewProjectDialogOpen = false;\n                  appState.import.dialogOpen = true;\n                }\n              }}\n              text=\"Next\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default NewProjectDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { requestOpen, requestDelete } from \"../ipc/client\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass ProjectDetailDialog extends React.Component {\n  render() {\n    return (\n      appState.project.currentProject && (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isProjectDetailDialogOpen}\n          onClose={() => {\n            appState.project.isProjectDetailDialogOpen = false;\n          }}\n          title={`Load ${appState.project.currentProject.name} Project`}\n        >\n          {appState.project.currentProject.hasGraphData ? (\n            <div className={Classes.DIALOG_BODY}>\n              <Card\n                interactive={true}\n                elevation={Card.ELEVATION_TWO}\n                onClick={() => {\n                  appState.import.graphFile =\n                    appState.project.currentProject.graphDataPath;\n                  appState.project.isProjectDetailDialogOpen = false;\n                  requestOpen();\n                }}\n              >\n                <Icon iconName=\"graph\" /> Start fresh from original graph\n              </Card>\n              <hr />\n              <div className=\"argo-menu-list-header\">Load recent snapshots</div>\n              <div>\n                {appState.project.currentProject.snapshotPaths.map(\n                  snapshotPath => {\n                    return (\n                      <div key={snapshotPath}>\n                        <Card\n                          interactive={false}\n                          elevation={Card.ELEVATION_TWO}\n                        >\n                          {/* <Icon iconName=\"layout\" /> */}\n                          <h5>\n                            {snapshotPath\n                              .replace(/^.*[\\\\\\/]/, \"\")\n                              .replace(/\\.[^/.]+$/, \"\")}\n                          </h5>\n                          <Button\n                            className={classnames([\n                              Classes.BUTTON,\n                              Classes.INTENT_PRIMARY\n                            ])}\n                            onClick={() => {\n                              appState.import.graphFile =\n                                appState.project.currentProject.graphDataPath;\n                              appState.import.stateFile = snapshotPath;\n                              appState.project.currentSnapshotName = snapshotPath\n                                .replace(/^.*[\\\\\\/]/, \"\")\n                                .replace(/\\.[^/.]+$/, \"\");\n                              appState.project.isProjectDetailDialogOpen = false;\n                              requestOpen();\n                            }}\n                          >\n                            Load Snapshot\n                          </Button>\n                          <Button\n                            className={classnames([Classes.BUTTON])}\n                            onClick={() => {\n                                requestDelete(snapshotPath);\n                                appState.project.currentProject.snapshotPaths = appState.project.currentProject.snapshotPaths.filter(\n                                  path => path !== snapshotPath\n                                );\n                            }}\n                          >\n                            Delete\n                          </Button>\n                        </Card>\n                      </div>\n                    );\n                  }\n                )}\n              </div>\n            </div>\n          ) : (\n            <div>\n              Error: Cannot find .argograph file in this project directory.\n            </div>\n          )}\n        </Dialog>\n      )\n    );\n  }\n}\n\nexport default ProjectDetailDialog;","/**\n * [Argo-lite Modified]\n * In electron Argo, snapshots are saved to the active project folder.\n * In Argo-lite, snapshots are saved as a file download.\n * Sometimes, it's tricky to let browser download something without a backend\n * hosting the file. Thus we also allow user to copy paste from\n * a text area containing our snapshot JSON.\n * \n * Remember to change appState.project.stringCopyOfSnapshot\n * before showing the dialog.\n */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { requestSaveSnapshot } from \"../ipc/client\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     name: \"Quick Save\",\n  //   };\n  // }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isSaveSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isSaveSnapshotDialogOpen = false;\n          }}\n          title={`Save Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            {/* <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label> */}\n            <p>If your browser doesn't start downloading the file, you can manually copy the content below and save to a plain text file.</p>\n            <input id=\"snapshot-textarea\" type=\"textarea\" value={appState.project.stringCopyOfSnapshot} readOnly />\n            <button\n              onClick={() => {\n                document.getElementById('snapshot-textarea').select();\n                document.execCommand(\"copy\");\n                // appState.logger.addLog({eventName: `SaveSnapshot`, elementName: `Copy to Clipboard`})\n              }}\n            >\n              Copy to Clipboard\n            </button>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                // className={classnames({\n                //   [Classes.DISABLED]: !this.state.name\n                // })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.project.isSaveSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  render() {\n    return (\n      <Dialog\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        iconName=\"projects\"\n        isOpen={appState.project.isRenameSnapshotDialogOpen}\n        onClose={() => {\n          appState.project.isRenameSnapshotDialogOpen = false;\n        }}\n        title={`Rename Snapshot`}\n      >\n        <div className={classnames(Classes.DIALOG_BODY)}>\n          <label className=\"pt-label .modifier\">\n            Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n            <input\n              className=\"pt-input\"\n              type=\"text\"\n              placeholder=\"My Snapshot\"\n              dir=\"auto\"\n              value={this.state.name}\n              onChange={event => this.setState({ name: event.target.value })}\n            />\n          </label>\n        </div>\n\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <Button\n              className={classnames({\n                [Classes.DISABLED]: !this.state.name\n              })}\n              disabled={!this.state.name}\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                appState.graph.metadata.snapshotName = this.state.name;\n                appState.project.isRenameSnapshotDialogOpen = false;\n              }}\n              text=\"Done\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","/**\n * [Argo-lite] Open the Argo-lite JSON graph snapshot file\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { toaster } from '../notifications/client';\n\n@observer\nclass OpenSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null\n    };\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openSnapshotDialogOpen}\n        onClose={() => {\n          appState.preferences.openSnapshotDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        <div>\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <div className={classnames(Classes.CONTROL_GROUP)}>\n              <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                <input\n                  type=\"file\"\n                  className={classnames(Classes.DISABLED)}\n                  onChange={(event) => {\n                    if (event.target.files.length < 1) {\n                      return;\n                    }\n                    this.setState({\n                      selectedFile: event.target.files[0]\n                    });\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                className={classnames({\n                  [Classes.DISABLED]: !this.state.selectedFile\n                })}\n                disabled={!this.state.selectedFile}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  // This dialog is closed when user is done selecting file\n                  appState.preferences.openSnapshotDialogOpen = false;\n\n                  // Show user a notification\n                  toaster.show({\n                    message: 'Loading Graph Snapshot. Please wait...',\n                    intent: Intent.NONE,\n                    timeout: 2000\n                  });\n\n                  // Read the file and load snapshot\n                  const reader = new FileReader();\n                  reader.readAsText(this.state.selectedFile);\n\n                  reader.onload = () => {\n                    const fileAsString = reader.result;\n                    appState.logger.addLog({eventName: `OpenSnapshot`, elementName: fileAsString});\n                    appState.graph.loadImmediateStates(fileAsString);\n                  }\n                }}\n                text=\"Open\"\n              />\n            </div>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenSnapshotDialog;","import React from \"react\";\nimport {\n    Button,\n    Classes,\n    Card,\n    Icon,\n    Dialog,\n    Intent,\n    Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport { toaster } from '../notifications/client';\nimport * as Blueprint from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { BACKEND_URL } from \"../constants\";\n\nconst uuidv4 = require('uuid/v4');\n\n@observer\nclass ShareDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShared: false,\n            isFetching: false,\n            sharedURL: 'Error: Sharing failed',\n            selectedContinue: false,\n        };\n\n        this.handleRequest = this.handleRequest.bind(this);\n    }\n\n\n\n\n    async handleRequest(uuid) {\n        // return await new Promise(resolve => setTimeout(resolve, 2000));\n        const backendURL = `${BACKEND_URL}/snapshots`;\n        // TODO: add better error handling\n        return await fetch(backendURL, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-cache',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            referrer: 'no-referrer',\n            body: JSON.stringify({\n                uuid,\n                body: window.saveSnapshotToString()\n            }),\n        }).then(response => response.ok).catch(error => {\n            toaster.show({\n                message: 'Failed to publish to sharing server. Unexpected error.',\n                intent: Intent.DANGER,\n                timeout: -1,\n                iconName: \"warning-sign\"\n            });\n        });\n    }\n\n    render() {\n\n\n\n        return (\n            <Dialog\n                iconName=\"projects\"\n                isOpen={appState.preferences.shareDialogOpen}\n                onClose={() => {\n                    appState.preferences.shareDialogOpen = false;\n                    this.setState({\n                        ...this.state,\n                        selectedContinue: false,\n                    });\n                }}\n                title={`Share Graph Snapshot`}\n                style={{ width: !this.state.selectedContinue ? 735 : 580 }}\n            >\n                <div className={classnames(Classes.DIALOG_BODY)}>\n                    {\n                        !this.state.selectedContinue && (\n                            <div>\n                                <p style={{ display: \"inline\", marginRight: \"20px\" }}>You can share your snapshot as\n                                    <b> a public URL</b>, an <b> HTML iframe</b>, or a <b>Jupyter Notebook IFrame</b></p>\n                                {\n                                    !this.state.selectedContinue && (\n                                        <Button\n                                            className={classnames({\n                                                [Classes.DISABLED]: this.state.isFetching\n                                            })}\n                                            intent={Intent.PRIMARY}\n                                            onClick={async () => {\n                                                this.setState({ isFetching: true });\n                                                // Generate a random UUID\n                                                const uuid = uuidv4();\n                                                // Generate URL corresponding to the UUID\n                                                const sharedURL = `https://poloclub.github.io/argo-scholar/#${uuid}`;\n\n                                                // Wait for backend response\n                                                const requestSuccess = await this.handleRequest(uuid);\n                                                // Update local state\n                                                if (requestSuccess) {\n                                                    this.setState({ isFetching: false, isShared: true, sharedURL });\n                                                    appState.logger.addLog({eventName: `ShareSnapshot`, elementName: uuid})\n                                                } else {\n                                                    // request fails, toast fires\n                                                    this.setState({ isFetching: false, isShared: false });\n                                                    toaster.show({\n                                                        message: 'Failed to publish to sharing server. Please try again later.',\n                                                        intent: Intent.DANGER,\n                                                        timeout: -1,\n                                                        iconName: \"warning-sign\"\n                                                    });\n                                                }\n                                                this.setState({\n                                                    ...this.state,\n                                                    selectedContinue: true,\n                                                });\n                                            }}\n                                            text=\"Continue\"\n                                        />\n                                    )\n                                }\n                                <hr />\n                                {/**pt-callout pt-intent-primary .modifier */}\n                                <div className=\"pt-callout pt-intent-warning\" style={{ marginBottom: \"20px\", }}>\n                                    <p className=\"pt-callout-title\">This snapshot is “static”, like taking a photo of your visualization. This means that if your graph is changed in any ways (e.g., move nodes around) after creating a URL and you want to re-share those updates, you will need to create a new URL by selecting <b>Share Again to a new URL</b> in the next window.</p>\n                                </div>\n                                <div className=\"pt-callout pt-intent-danger\">\n                                    <p className=\"pt-callout-title \"><b>IMPORTANT!</b> This will make your graph snapshot public. If you are working with sensitive data (with custom access control), or large data ({\">\"}400MB), please follow our guide on Github to easily deploy your own sharing server.</p>\n                                </div>\n                            </div>\n                        )\n                    }\n                    {\n                        this.state.isFetching && (\n                            <p style={{ marginTop: \"10px\" }}><b>Sharing in progress. Please wait...</b></p>\n                        )\n                    }\n                    {\n                        this.state.selectedContinue && (\n                            <div>\n                                {/** graph URL */}\n                                Your current snapshot has been shared to\n                                <br />\n                                <input\n                                    id=\"snapshot-textarea\"\n                                    type=\"textarea\"\n                                    value={this.state.sharedURL}\n                                    readOnly\n                                    style={{\n                                        width: '400px',\n                                        marginTop: \"5px\"\n                                    }}\n                                />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('snapshot-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                >\n                                    Copy to Clipboard\n                                </button>\n                                <br />\n                                <hr />\n\n                                {/** Embedding as HTML iframe */}\n                                Embed as an <b>HTML iframe</b>:\n                                <br />\n                                <input\n                                    id=\"iframe-html-textarea\"\n                                    type=\"textarea\"\n                                    value={`<iframe src=\"${this.state.sharedURL}\" width=\"850\" height=\"500\"></iframe>`}\n                                    style={{\n                                        width: '400px',\n                                        marginTop: \"5px\"\n                                    }}\n                                    readOnly\n                                />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('iframe-html-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                >\n                                    Copy to Clipboard\n                                </button>\n                                <br />\n                                <hr />\n\n                                {/** Embedding as Jupyter Notebook IFrame */}\n                                Embed as a <b>Jupyter Notebook IFrame</b>:\n                                <br />\n                                <textarea\n                                    id=\"iframe-jupyter-textarea\"\n                                    rows=\"2\"\n                                    cols=\"60\"\n                                    style={{\n                                        overflow: \"hidden\",\n                                        marginTop: \"5px\",\n                                        width: \"400px\",\n                                        resize: \"none\"\n                                    }}\n                                    readonly=\"true\"\n                                    value={`from IPython.display import IFrame` + \"\\n\" + `IFrame(\"${this.state.sharedURL}\", width=700, height=350)`} />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('iframe-jupyter-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                    style={{\n                                        position: \"absolute\",\n                                        marginTop: \"20px\",\n                                    }}\n                                >\n                                    Copy to Clipboard\n                                </button>\n                            </div>\n                        )\n                    }\n                </div>\n\n                <div className={Classes.DIALOG_FOOTER}>\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                        {\n                            this.state.selectedContinue && (\n\n\n                                <Button\n                                    className={classnames({\n                                        [Classes.DISABLED]: this.state.isFetching\n                                    })}\n                                    intent={Intent.PRIMARY}\n                                    onClick={async () => {\n                                        this.setState({ isFetching: true, isShared: false });\n                                        // Generate a random UUID\n                                        const uuid = uuidv4();\n                                        // Generate URL corresponding to the UUID\n                                        const sharedURL = `https://poloclub.github.io/argo-scholar/#${uuid}`;\n\n                                        // Wait for backend response\n                                        const requestSuccess = await this.handleRequest(uuid);\n                                        // Update local state\n                                        if (requestSuccess) {\n                                            this.setState({ isFetching: false, isShared: true, sharedURL });\n                                            appState.logger.addLog({eventName: `ShareSnapshot`, elementName: uuid})\n                                        } else {\n                                            // request fails, toast fires\n                                            this.setState({ isFetching: false, isShared: false });\n                                            toaster.show({\n                                                message: 'Failed to publish to sharing server. Please try again later.',\n                                                intent: Intent.DANGER,\n                                                timeout: -1,\n                                                iconName: \"warning-sign\"\n                                            });\n                                        }\n\n                                    }}\n                                    text=\"Share Snapshot as New URL\"\n                                />\n                            )\n                        }\n\n                    </div>\n                </div>\n\n\n                <style dangerouslySetInnerHTML={{\n                    __html:\n                        `\n                    .copy-to-clipboard{\n                        margin-top: 5px;\n                        margin-left: 5px;\n                        border-style: solid;\n                    }\n                    \n            `}} />\n            </Dialog>\n        );\n    }\n}\n\nexport default ShareDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass StatisticsDialog extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.preferences.statisticsDialogOpen}\n          onClose={() => {\n            appState.preferences.statisticsDialogOpen = false;\n          }}\n          title={`Statistics`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <table className={Classes.TABLE} style={{width: '100%'}}>\n                <thead>\n                    <tr>\n                        <th>Statistics</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td># Nodes</td>\n                        <td>{appState.graph.metadata.fullNodes}</td>\n                    </tr>\n                    <tr>\n                        <td># Edges</td>\n                        <td>{appState.graph.metadata.fullEdges}</td>\n                    </tr>\n                    <tr>\n                        <td>Average Degree</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.degree : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Graph Density</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.density : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Graph Diameter</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.diameter : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Clustering Coefficient</td>\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.averageClustering : 'loading graph'}</td>\n                    </tr>\n                    <tr>\n                        <td>Connected Component</td>\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.components : 'loading graph'}</td>\n\n                    </tr>\n                </tbody>\n            </table>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.statisticsDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default StatisticsDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass HelpDialog extends React.Component {\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"help\"\n          isOpen={appState.preferences.helpDialogOpen}\n          onClose={() => {\n            appState.preferences.helpDialogOpen = false;\n          }}\n          title={`Help`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            Argo supports both mouse/trackpad and touchscreen.\n            <div className=\"argo-table-container\">\n              <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\n                <thead>\n                  <tr>\n                    <th>Basic Operation</th>\n                    <th>Mouse</th>\n                    <th>Touchscreen</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Zoom</td>\n                    <td>Mouse wheel</td>\n                    <td>2 finger zoom gesture</td>\n                  </tr>\n                  <tr>\n                    <td>Pan</td>\n                    <td>Drag with right mouse button down OR Move mouse with space key pressed</td>\n                    <td>Drag with 3 finger</td>\n                  </tr>\n                  <tr>\n                    <td>Select single node (view details)</td>\n                    <td>Single Click</td>\n                    <td>Tap with 1 finger</td>\n                  </tr>\n                  <tr>\n                    <td>Select multiple nodes</td>\n                    <td>Drag left mouse button from empty area</td>\n                    <td>Drag 1 finger from empty area</td>\n                  </tr>\n                  <tr>\n                    <td>Drag nodes</td>\n                    <td>Drag with left mouse button down</td>\n                    <td>Drag with 1 finger</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            \n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.helpDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default HelpDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Switch,\n  ButtonGroup\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass NodeTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortBy: 'pagerank',\n            sortOrder: 'descending', // or 'ascending'\n        };\n    }\n\n  render() {\n    let filteredNodes = this.props.nodes;\n    \n    filteredNodes.sort((n1, n2) => {\n        const n1val = n1[this.state.sortBy];\n        const n2val = n2[this.state.sortBy];\n        if (n1val && n2val) {\n            // Check if these are numerical fields, if so sort by number.\n            const n1valAsNum = Number(n1val);\n            const n2valAsNum = Number(n2val);\n            if (!Number.isNaN(n1valAsNum) && !Number.isNaN(n2valAsNum)) {\n                // both values are numeric, compare by their value.\n                if (this.state.sortOrder === 'descending') {\n                    return n2valAsNum - n1valAsNum;\n                }\n                return n1valAsNum - n2valAsNum;\n            } else {\n                // not all values are numeric, sort by string order.\n                const n1valAsString = n1val.toString();\n                const n2valAsString = n2val.toString();\n                return (this.state.sortOrder === 'descending' ? -1 : 1) * n1valAsString.localeCompare(n2valAsString);\n            }\n        }\n        return 0;\n    });\n\n    const nodeAttributesOrig = appState.graph.allPropertiesKeyList.filter((k) => k !== 'pagerank' && k !== 'degree');\n    \n    return (\n            <div className=\"argo-table-container\">\n                Sort By {' '}\n                <SimpleSelect\n                    items={['pagerank', 'degree', ...nodeAttributesOrig]}\n                    value={this.state.sortBy}\n                    onSelect={(selected) => {\n                        this.setState({sortBy: selected});\n                    }}\n                />\n                <SimpleSelect\n                    items={['descending', 'ascending']}\n                    value={this.state.sortOrder}\n                    onSelect={(selected) => {\n                        this.setState({sortOrder: selected});\n                    }}\n                />\n                <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\n                    <thead>\n                        <tr>\n                            <th><b>Show</b></th>\n                            <th><b>Node ID</b></th>\n                            {\n                                appState.graph.allPropertiesKeyList.map((it, i) => {\n                                    if (it !== 'id') {\n                                        return <th key={`${it}-${i}`}>{it}</th>;\n                                    }\n                                    return null;\n                                })\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            filteredNodes.map((node) => (\n                                <tr key={node.id}>\n                                    <td>\n                                        <Switch\n                                            checked={!node.isHidden}\n                                            onChange={() => {\n                                                if (node.isHidden) {\n                                                    appState.graph.showNodes([node.id]);\n                                                } else {\n                                                    appState.graph.hideNodes([node.id]);\n                                                }\n                                            }}\n                                        />\n                                    </td>\n                                    <td>{node.id}</td>\n                                    {\n                                        appState.graph.allPropertiesKeyList.map((it, i) => {\n                                            if (it !== 'id') {\n                                                return <td key={`${it}-${i}`}>{node[it]}</td>\n                                            }\n                                        })\n                                    }\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n    );\n  }\n}\n\nexport default NodeTable;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  ButtonGroup,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport NodeTable from './NodeTable';\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass NeighborDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMoreBy: 'pagerank',\n      showMoreNum: 5,\n    };\n  }\n\n  render() {\n    // Compare function for nodes used for sorting descendingly.\n    const compareByPageRank = (n1, n2) => {\n        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n            return n2[\"pagerank\"] - n1[\"pagerank\"];\n        }\n        return 0;\n    };\n\n    let filteredNodes = [];\n    // When only one node is selected, show the neighbors of this selected node.\n    if (appState.graph.lastSelectedSingleNode) {\n        const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\n        filteredNodes = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId);\n\n        // Sort by pagerank if available.\n        filteredNodes.sort(compareByPageRank);\n    }\n\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\n      hiddenNodes.sort((n1, n2) => {\n        if (n1[attributeName] && n2[attributeName]) {\n            return n2[attributeName] - n1[attributeName];\n        }\n        return 0;\n      });\n      const ids = [];\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\n          ids.push(hiddenNodes[i].id);\n      }\n      appState.graph.showNodes(ids);\n    };\n    \n    return (\n        <Dialog\n          iconName=\"graph\"\n          isOpen={appState.preferences.neighborDialogOpen}\n          onClose={() => {\n            appState.preferences.neighborDialogOpen = false;\n          }}\n          title='Neighbors'\n          style={{minWidth: '80vw'}}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n\n            <ButtonGroup>\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\n            </ButtonGroup>\n\n            <hr />\n\n            <div>\n              <Button\n              style={{display: 'inline'}}\n              intent={Intent.PRIMARY}\n              text='Show'\n              onClick={() => {\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\n            </div>\n\n            <hr />\n\n            <NodeTable nodes={filteredNodes} />\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.neighborDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default NeighborDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  ButtonGroup,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport NodeTable from './NodeTable';\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n\n@observer\nclass DataSheetDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMoreBy: 'pagerank',\n      showMoreNum: 5,\n    };\n  }\n\n  render() {\n    let filteredNodes = [...appState.graph.rawGraph.nodes];\n\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\n      hiddenNodes.sort((n1, n2) => {\n        if (n1[attributeName] && n2[attributeName]) {\n            return n2[attributeName] - n1[attributeName];\n        }\n        return 0;\n      });\n      const ids = [];\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\n          ids.push(hiddenNodes[i].id);\n      }\n      appState.graph.showNodes(ids);\n    };\n    \n    return (\n        <Dialog\n          iconName=\"database\"\n          isOpen={appState.preferences.dataSheetDialogOpen}\n          onClose={() => {\n            appState.preferences.dataSheetDialogOpen = false;\n          }}\n          title='Data Sheet'\n          style={{minWidth: '80vw'}}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n\n            <ButtonGroup>\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\n            </ButtonGroup>\n\n            <hr />\n\n            <div>\n              <Button\n              style={{display: 'inline'}}\n              intent={Intent.PRIMARY}\n              text='Show'\n              onClick={() => {\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\n            </div>\n\n            <hr />\n\n            <NodeTable nodes={filteredNodes} />\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.dataSheetDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default DataSheetDialog;","import React from \"react\";\nimport appState from \"../stores/index\";\nimport classnames from \"classnames\";\nimport {\n  requestCreateEmptyPaperGraph,\n  requestCreateNewProject\n} from \"../ipc/client\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\n\n@observer\nclass NewNetworkDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  createEmptyGraph(event) {\n    appState.graph.runActiveLayout();\n    requestCreateNewProject({\n      name: appState.project.newProjectName,\n      createdDate: new Date().toLocaleString(),\n    });\n    requestCreateEmptyPaperGraph(\n      appState.project.newProjectName\n    );\n\n    // Importing a graph means no label would be shown by default,\n    // thus turn off label CSSRenderer for better performance.\n    appState.graph.frame.turnOffLabelCSSRenderer();\n    event.preventDefault();\n    appState.graph.selectedNodes.length = 0;\n    appState.graph.currentlyHovered = null;\n    appState.logger.addLog({eventName: `CreateNewGraph`, elementName: `New...`})\n  }\n\n  render() {\n    return (\n      <Dialog\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        iconName=\"map-create\"\n        isOpen={appState.project.isNewNetworkDialogOpen}\n        onClose={() => {\n          appState.project.isNewNetworkDialogOpen = false;\n        }}\n        title={'Create New Graph'}\n      >\n        <div className={classnames(Classes.DIALOG_BODY)}>\n          <div className=\"pt-callout pt-icon-issue\">\n            <p>Creating a new graph will remove all your current papers. This process cannot be undone. Are you sure?</p>\n          </div>\n        </div>\n\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button\n              // className={classnames({\n              //   [Classes.DISABLED]: !this.state.name\n              // })}\n              intent={Intent.PRIMARY}\n              onClick={() => appState.project.isNewNetworkDialogOpen = false}\n              text=\"Cancel\"\n            />\n\n            <Button\n              // className={classnames({\n              //   [Classes.DISABLED]: !this.state.name\n              // })}\n              intent={Intent.NONE}\n              onClick={(event) => {\n                this.createEmptyGraph(event);\n                appState.project.isNewNetworkDialogOpen = false;\n              }}\n              text=\"Create\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default NewNetworkDialog;","import React from \"react\";\nimport PreferencesDialog from \"./PreferencesDialog\";\nimport ImportDialog from \"./ImportDialog\";\nimport GEXFImportDialog from \"./GEXFImportDialog\"\nimport OpenDialog from \"./OpenDialog\";\nimport NewProjectDialog from \"./NewProjectDialog\";\nimport ProjectDetailDialog from \"./ProjectDetailDialog\";\nimport SaveSnapshotDialog from \"./SaveSnapshotDialog\";\nimport RenameSnapshotDialog from \"./RenameSnapshotDialog\";\nimport OpenSnapshotDialog from \"./OpenSnapshotDialog\";\nimport ShareDialog from './ShareDialog';\nimport StatisticsDialog from './StatisticsDialog';\nimport HelpDialog from './HelpDialog';\nimport NeighborDialog from './NeighborDialog';\nimport DataSheetDialog from './DataSheetDialog';\nimport AddPapersDialog from \"./AddPapersDialog\";\nimport NewNetworkDialog from \"./NewNetworkDialog\";\n\nexport default class Dialogs extends React.Component {\n  render() {\n    return (\n      <div style={{ display: \"none\" }}>\n        <PreferencesDialog />\n        {/* <ImportDialog />\n        <GEXFImportDialog />\n        <OpenDialog /> */}\n        <OpenSnapshotDialog />\n        {/* <NewProjectDialog /> */}\n        <ProjectDetailDialog />\n        <SaveSnapshotDialog />\n        <RenameSnapshotDialog />\n        <ShareDialog />\n        <StatisticsDialog />\n        <HelpDialog />\n        <NeighborDialog />\n        <DataSheetDialog />\n        {/* <AddPapersDialog /> */}\n        <NewNetworkDialog />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner,\n  Tooltip,\n  Position,\n  AnchorButton\n} from \"@blueprintjs/core\";\nimport { observer, propTypes } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../../stores/index\";\nimport { timeThursdays } from \"d3\";\nimport { toJS } from \"mobx\";\n// import { data } from \"jquery\";\n\nconst nodePrefix = \"https://api.semanticscholar.org/graph/v1/paper/\";\nconst nodeFields = \"?fields=abstract,authors,citationCount,paperId,references,title,url,venue,year,citations\";\n\n@observer\nclass AddNodesRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        paper: this.props.paper,\n        currentIncrement: -1,\n    }\n  }\n\n  isNodeHidden(nodeid) {\n    // console.log(nodeid)\n    for (let n of appState.graph.rawGraph.nodes) {\n      // console.log(n)\n      if (n.id == nodeid) {\n        if (n.isHidden) {\n          console.log(\"returning true\")\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n    return false;\n  }\n\n  handleClick(paperId) {\n    if (paperId in appState.graph.preprocessedRawGraph.nodesPanelData) {\n        appState.graph.showNodes(paperId);\n    } else {\n        let citationAPI = nodePrefix + paperId + nodeFields;\n        console.log(\"Adding selected paper: \" + paperId);\n        fetch(citationAPI)\n        .then((res) => {\n            if (res.ok) {\n            return res.json();\n            } else {\n            throw \"error\";\n            }\n        })\n        .then((response) => {\n            appState.graph.addNodetoGraph(response, \"null\", 0);\n            appState.logger.addLog({eventName: `AddPaper`, elementName: response.paperId, valueName: `Label`, newValue: response.title});\n            // console.log(\"add node curcount: \", offset);\n            let paperNode = appState.graph.process.graph.getNode(response.paperId);\n            paperNode.renderData.textHolder.children[0].element.override = true;\n            paperNode.pinnedx = true;\n            paperNode.pinnedy = true;\n            paperNode.x = appState.controls.camera.position.x;\n            paperNode.y = appState.controls.camera.position.y - this.state.currentIncrement * 10;\n            paperNode.pinnedx = true;\n            paperNode.pinnedy = true;\n            appState.graph.frame.updateNodesShowingLabels();\n            appState.graph.selectedNodes = [];\n            appState.graph.frame.selection = [];\n        });\n    }\n  }\n\n  render() {\n    let nodeHidden = this.isNodeHidden(this.state.paper.paperId);\n    let buttonDisabled = this.state.paper.paperId in appState.graph.preprocessedRawGraph.nodesPanelData && !nodeHidden\n    // let cards = [];\n    // this.state.data.forEach(paper=> {\n    //   // console.log(\"paper: \" + {paper});\n    //   // cards.push(<p>{paper}</p>);\n    //   cards.push(<tr class=\"search-row\">\n    //       <td class=\"search-result\">{paper.title}</td>\n    //       <td class=\"search-add\">\n    //         <button type=\"button\" class=\"pt-button pt-small\" className={this.state.hidden}\n    //           // disabled={this.isNodeHidden(paper.paperId)} \n    //           // // disabled={paper.paperId in appState.graph.preprocessedRawGraph.nodesPanelData}\n    //           disabled={(paper.paperId in appState.graph.preprocessedRawGraph.nodesPanelData && !appState.graph.isNodeHidden(paper.paperId))} \n    //           onClick={() => this.handleClick(paper.paperId)}>Add\n    //         </button>\n    //       </td>\n    //       </tr>)\n    // })\n    return (\n        <tr class=\"search-row\">\n          <td class=\"search-result\">\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.paper.url}>{this.state.paper.title}</a>\n          </td>\n          <td class=\"search-add\">\n            <Tooltip\n              content={nodeHidden ? \"Unhide\" : buttonDisabled ? \"Added\" : \"Add to visualization\"}\n              popoverClassName={\"pt-popover-content-sizing\"}\n              position={Position.BOTTOM}\n            >\n              <AnchorButton\n                className={\"pt-button pt-small pt-minimal\"}\n                disabled={buttonDisabled} \n                onClick={() => {\n                  appState.graph.numberAddedPerSearch = appState.graph.numberAddedPerSearch + 1;\n                  this.state.currentIncrement = appState.graph.numberAddedPerSearch;\n                  this.handleClick(this.state.paper.paperId);\n                }}\n                iconName={nodeHidden ? \"eye-on\" : buttonDisabled ? \"tick-circle\" : \"add\"}\n              />\n            </Tooltip>\n            \n          </td>\n        </tr>\n    );\n  }\n}\n\nexport default AddNodesRow;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer, propTypes } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../../stores/index\";\nimport { timeThursdays } from \"d3\";\nimport { toJS } from \"mobx\";\n\nimport AddNodesRow from \"./AddNodesRow\";\n// import { data } from \"jquery\";\n\n@observer\nclass PaperResultsSubPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        data: this.props.papers,\n        query: this.props.query,\n    }\n  }\n\n  render() {    \n    let cards = [];\n    this.state.data.forEach(paper => {\n      cards.push(<AddNodesRow paper={paper}/>)\n    })\n    return (\n        <div>\n          <table class=\"search-paper-table\">\n            <tbody>\n              {cards}\n            </tbody>\n          </table> \n        </div>\n    );\n  }\n}\n\nexport default PaperResultsSubPanel;","import React from \"react\";\nimport classnames from \"classnames\";\nimport uniq from \"lodash/uniq\";\nimport { Classes } from \"@blueprintjs/core\";\nimport appState from \"../../stores\";\nimport { observer } from \"mobx-react/index\";\n\nimport PaperResultsSubPanel from \"./PaperResultsSubPanel\";\n\n@observer\nclass AddNodes extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false; \n    this.state = {\n        papers: this.props.papers,\n        query: this.props.query,\n    };\n  }\n  render() {\n    // If input is number,\n    // currently format number between 0-1 (eg. pagerank)\n    // to show no more than 3 significant digits.\n    return (\n      <div\n        style={{\n          width: \"520px\",\n        }}\n      >\n        <div style={{pointerEvents: \"all\"}} className={\"paper-popover\"}>\n          <PaperResultsSubPanel papers={this.props.papers} query={this.state.query}/>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default AddNodes;","import React from \"react\";\nimport appState from \"../stores/index\";\nimport classnames from \"classnames\";\nimport {\n  requestCreateEmptyPaperGraph,\n  requestCreateNewProject,\n} from \"../ipc/client\";\nimport {\n  Button,\n  Classes,\n  InputGroup,\n  Intent,\n  Position,\n  Tooltip,\n  Popover,\n  Menu,\n  MenuItem,\n  MenuDivider,\n  Toaster,\n  IToastProps,\n} from \"@blueprintjs/core\";\nimport { tree } from \"d3\";\nimport { toaster } from \"../notifications/client\";\n\nimport AddNodes from \"./panels/AddNodesPanel\";\n\nconst corpusIDregex = /^[0-9]+$/;\nconst apiCorpusPrefix = \"https://api.semanticscholar.org/v1/paper/CorpusID:\";\nconst apiKeywordPrefix =\n  \"https://api.semanticscholar.org/graph/v1/paper/search?query=\";\nconst nodeFields = \"&limit=50&fields=title,url\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      searchResults: [],\n      query: \"\",\n      display: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleEnter = this.handleEnter.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleChange(event) {\n    this._isMounted && this.setState({ query: event.target.value });\n  }\n\n  handleClick(event) {\n    this.setState({ display: true });\n    // event.preventDefault();\n  }\n\n  handleEnter(event) {\n    if (event.which === 13) {\n      this.handleSubmit(event);\n    }\n  }\n\n  handleSubmit(event) {\n    this.setState({ display: false });\n    if (this.state.query == \"\") {\n      return;\n    }\n    // appState.project.currentQuery = this.state.query;\n    appState.graph.numberAddedPerSearch = 0;\n    \n    // Replace hyphens with spaces to get the correct query for Semantic Scholar API\n    this.state.query = this.state.query.replace(\"-\", \" \");\n    console.log(this.state.query);\n\n    if (corpusIDregex.test(this.state.query)) {\n      // CorpusID submitted\n\n      let apiurl = apiCorpusPrefix + this.state.query;\n\n      fetch(apiurl)\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw \"error\";\n          }\n        })\n        .then((response) => {\n          var searches = [];\n          searches.push(response);\n          // for (var i = 0; i < response.data.length; i++) {\n          //   searches.push(response.data[i]);\n          // }\n          this.setState({ searchResults: searches });\n          this.setState({ display: true });\n          // appState.project.isAddPapersDialogOpen = true;\n        })\n        .catch((error) => {\n          this.addToast(\n            \"Error occurred when fetching search results. This may be due to API issues or the CorpusID not being associated with a valid paper.\"\n          );\n          // alert(\"Issue occurred when fetching search results. This may be due to API issues or the CorpusID not being associated with a valid paper.\");\n        });\n    } else {\n      // Keyword query\n\n      var keywordQuery = this.state.query;\n      keywordQuery = keywordQuery\n        .trim()\n        .replace(/  +/g, \" \")\n        .replace(/ /g, \"+\");\n\n      let apiurl = apiKeywordPrefix + keywordQuery + nodeFields;\n\n      fetch(apiurl)\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw \"error\";\n          }\n        })\n        .then((response) => {\n          if (response.data.length < 1) {\n            this.addToast(`No results found for \"${this.state.query}\".`);\n            return;\n          }\n          var searches = [];\n          for (var i = 0; i < response.data.length; i++) {\n            searches.push(response.data[i]);\n          }\n          this.setState({ searchResults: searches });\n          // appState.project.isAddPapersDialogOpen = true;\n          this.setState({ display: true });\n        })\n        .catch((error) => {\n          this.addToast(\n            \"Error occurred when fetching search results. This may be due to API issues.\"\n          );\n        });\n    }\n    event.preventDefault();\n  }\n\n  addToast(message) {\n    toaster.show({\n      message: message,\n      intent: Intent.DANGER,\n      iconName: \"warning-sign\",\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <InputGroup\n          className={\"search-bar-width\"}\n          leftIconName={\"search\"}\n          rightElement={\n            <Popover\n              content={\n                <AddNodes\n                  papers={this.state.searchResults}\n                  query={this.state.query}\n                />\n              }\n              target={\n                <button\n                  onClick={this.handleSubmit}\n                  className=\"pt-button pt-minimal pt-intent-primary pt-icon-arrow-right\"\n                ></button>\n              }\n              position={Position.BOTTOM}\n              isOpen={this.state.display && this.state.searchResults.length > 0}\n              onClose={() => {\n                this.setState({ display: false });\n              }}\n              autoFocus={false}\n              enforceFocus={false}\n            />\n          }\n          onChange={this.handleChange}\n          placeholder={\"Search\"}\n          onKeyPress={(e) => this.handleEnter(e)}\n          onClick={this.handleClick}\n        />\n        {/* <Popover\n          content={\n            <Menu>\n              <MenuItem\n                text=\"Add Papers\"\n                iconName=\"pt-icon-new-object\"\n                onClick={() => { appState.project.isAddPapersDialogOpen = true; }}\n              />\n              {/* <MenuItem\n                text=\"Clear all papers\"\n                iconName=\"pt-icon-graph-remove\"\n                onClick={this.createEmptyGraph}\n              /> \n            </Menu>\n          }\n          position={Position.BOTTOM}\n        >\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"pt-icon-manual\"\n          >\n            Papers\n            </Button>\n        </Popover> */}\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  InputGroup,\n  Intent,\n  Position,\n  Tooltip,\n  Popover,\n  Menu,\n  MenuItem,\n  MenuDivider\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\n\nimport appState from \"../stores/index\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport argologo_dark from '../images/argoscholar_logo_dark.svg';\nimport argologo_light from '../images/argoscholar_logo_light.svg';\nimport { toaster } from '../notifications/client';\nimport { LOGO_URL, GITHUB_URL, SAMPLE_GRAPH_SNAPSHOTS } from '../constants';\nimport SearchBar from \"./SearchBar\";\n\n@observer\nclass RegularNavbar extends React.Component {\n  render() {\n    return (\n      <nav className={classnames([Classes.NAVBAR])}>\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\n          <a href={LOGO_URL} target=\"_blank\">\n            <img title=\"Argo Scholar\" id=\"Argo logo\"\n              src={appState.preferences.darkMode ? argologo_dark : argologo_light}\n              height=\"28\"></img>\n          </a>\n          <div className={classnames([Classes.NAVBAR_HEADING])}></div>\n          {/* <a\n            href=\"https://poloclub.github.io/argo-graph/\"\n            target='_blank'\n            style={{\n              padding: '6px 10px 6px 10px',\n              backgroundColor: 'pink',\n              color: 'white',\n              borderRadius: '4px',\n              textDecoration: 'none'\n            }}\n          >\n            Learn more about Argo\n          </a> */}\n          <Popover\n            content={\n              <Menu>\n                {/* Disabled in Argo Scholar */}\n                {/* <MenuItem\n                  iconName=\"import\"\n                  text=\"Import from CSV...\"\n                  onClick={() => (appState.import.dialogOpen = true)}\n                />\n                <MenuItem\n                  iconName=\"import\"\n                  text=\"Import from GEXF...\"\n                  onClick={() => (appState.import.gexfDialogOpen = true)}\n                /> */}\n                <MenuItem\n                  iconName=\"pt-icon-map-create\"\n                  text=\"New...\"\n                  onClick={() => { appState.project.isNewNetworkDialogOpen = true }}\n                />\n                <MenuItem\n                  iconName=\"pt-icon-document-open\"\n                  text=\"Open Snapshot\"\n                  onClick={() => { appState.preferences.openSnapshotDialogOpen = true }}\n                />\n                <MenuDivider />\n                <MenuItem text=\"Load Sample\" iconName=\"graph\">\n                  {\n                    SAMPLE_GRAPH_SNAPSHOTS.map((sample) => {\n                      const sampleSnapshotTitle = sample[0];\n                      const sampleSnapshotStrapiUuid = sample[1];\n\n                      return (\n                        <MenuItem\n                          key={sampleSnapshotTitle}\n                          iconName=\"graph\"\n                          text={sampleSnapshotTitle}\n                          onClick={() => {\n                            window.loadAndDisplaySnapshotFromStrapi(sampleSnapshotStrapiUuid);\n                            appState.logger.addLog({eventName: `LoadSample`, elementName: sampleSnapshotTitle})\n                          }}\n                        />\n                      );\n                    })\n                  }\n\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem\n                  iconName=\"download\"\n                  text=\"Save Snapshot\"\n                  onClick={() => {\n                    appState.project.stringCopyOfSnapshot = appState.graph.saveImmediateStates();\n                    appState.project.isSaveSnapshotDialogOpen = true;\n                    appState.logger.addLog({eventName: `SaveSnapshot`, elementName: appState.graph.metadata.snapshotId});\n                  }}\n                />\n                <MenuItem\n                  iconName=\"pt-icon-document-share\"\n                  text=\"Publish and Share Snapshot\"\n                  onClick={() => { appState.preferences.shareDialogOpen = true }}\n                />\n              </Menu>\n            }\n            position={Position.BOTTOM}\n          >\n            <Button\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n              iconName=\"document\"\n            >\n              Graph\n            </Button>\n          </Popover>\n          <Popover\n            content={\n              <Menu>\n                <MenuItem\n                  text=\"Data Sheet\"\n                  iconName=\"pt-icon-database\"\n                  onClick={() => {\n                    appState.graph.frame.pauseLayout();\n                    appState.preferences.dataSheetDialogOpen = true;\n                    this.forceUpdate();\n                    appState.logger.addLog({eventName: `DataSheet`, elementName: `DataSheet`})\n                  }}\n                />\n                <MenuItem\n                  text=\"Statistics\"\n                  iconName=\"pt-icon-timeline-bar-chart\"\n                  onClick={() => { \n                    appState.preferences.statisticsDialogOpen = true;\n                    appState.logger.addLog({eventName: `Statistics`, elementName: `Statistics`})\n                  }}\n                />\n                <MenuItem text=\"Filters\" iconName=\"graph\">\n                  <MenuItem\n                    text=\"Show All Nodes\"\n                    onClick={() => {\n                      appState.graph.showNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Show only nodes with top 5 PageRank\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\n                      sortedNodeList.sort((n1, n2) => {\n                        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n                          return n2[\"pagerank\"] - n1[\"pagerank\"];\n                        }\n                        return 0;\n                      });\n                      const ids = [];\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\n                        ids.push(sortedNodeList[i].id);\n                      }\n                      appState.graph.showNodes(ids);\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Show only nodes with top 5 Degree\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\n                      sortedNodeList.sort((n1, n2) => {\n                        if (n1[\"degree\"] && n2[\"degree\"]) {\n                          return n2[\"degree\"] - n1[\"degree\"];\n                        }\n                        return 0;\n                      });\n                      const ids = [];\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\n                        ids.push(sortedNodeList[i].id);\n                      }\n                      appState.graph.showNodes(ids);\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Hide All Nodes\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                    }}\n                  />\n                </MenuItem>\n              </Menu>\n            }\n            position={Position.BOTTOM}\n          >\n            <Button\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n              iconName=\"pt-icon-wrench\"\n            >\n              Tools\n            </Button>\n          </Popover>\n        </div>\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\n          <span className={Classes.NAVBAR_DIVIDER} />\n          {appState.graph.hasGraph && appState.graph.frame && (\n            <div style={{ display: \"inline\" }}>\n\n              {/** Smart Pause functionality: pauses graph when no interaction */}\n              {(() => {\n                let self = this;\n                setInterval(function () {\n                  let timeNow = Date.now();\n                  /**stops initial default active layout*/\n                  if (appState.graph.smartPause.defaultActive.isActive) {\n                    if (timeNow - appState.graph.smartPause.defaultActive.startTime > appState.graph.smartPause.defaultActive.duration\n                      || appState.graph.smartPause.interactingWithGraph) {\n                      appState.graph.smartPause.defaultActive.isActive = false;\n                    }\n                  } else {\n                    /**smart pausing*/\n                    if (!appState.graph.frame.paused &&\n                      !appState.graph.smartPause.interactingWithGraph) {\n                      appState.graph.frame.pauseLayout();\n                      appState.graph.frame.paused = true;\n                      appState.graph.smartPause.smartPaused = true;\n                      self.forceUpdate();\n                    }\n                    /**old code using lastUnpaused:*/\n                    /**\n                     * if(!appState.graph.frame.paused && \n                      appState.graph.smartPause.lastUnpaused && \n                      !appState.graph.smartPause.interactingWithGraph && timeNow - appState.graph.smartPause.lastUnpaused > 300){\n                        appState.graph.frame.pauseLayout();\n                        appState.graph.frame.paused = true;\n                        appState.graph.smartPause.smartPaused = true;\n                        self.forceUpdate();\n                    }\n                     */\n\n                    /**un-smart pausing*/\n                    if (appState.graph.smartPause.smartPaused && appState.graph.smartPause.interactingWithGraph) {\n                      appState.graph.frame.resumeLayout();\n                      appState.graph.frame.paused = false;\n                      appState.graph.smartPause.smartPaused = false;\n                      self.forceUpdate();\n                    }\n                  }\n                }, 10)\n              })()}\n\n              {<Tooltip\n                content={(appState.graph.frame.paused) ? \"Resume Layout Algorithm\" : \"Pause Layout Algorithm\"}\n                position={Position.BOTTOM}\n              >\n                <Button\n                  className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n                  iconName={(!appState.graph.smartPause.smartPaused && appState.graph.frame.paused) ? \"play\" : \"pause\"}\n                  text={(!appState.graph.smartPause.smartPaused && appState.graph.frame.paused) ? \"Resume Layout\" : \"Pause Layout\"}\n                  onClick={() => {\n                    if (appState.graph.frame.paused && !appState.graph.smartPause.smartPaused) {\n                      /**graph is going from \"pause layout\" mode to \"resume layout\"*/\n\n                      /** graph runs for default duration when unpaused */\n                      appState.graph.runActiveLayout();\n\n                      appState.graph.frame.resumeLayout();\n                      this.forceUpdate();\n                      /**appState.graph.smartPause.lastUnpaused = Date.now(); //old code using lastUnpaused*/\n                    } else if (appState.graph.smartPause.smartPaused) {\n                      /**graph is going from smart paused \"resume layout\" mode to \"pause layout\" mode*/\n                      appState.graph.frame.paused = true;\n                      appState.graph.smartPause.smartPaused = false;\n                    } else {\n                      /**graph is going from in \"resume layout\" mode to \"pause layout\" mode*/\n                      appState.graph.frame.pauseLayout();\n                      this.forceUpdate();\n                    }\n                  }}\n                />\n              </Tooltip>\n              }\n            </div>\n          )}\n        </div>\n        <div\n          className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_RIGHT])}\n        >\n          <SearchBar />\n\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"graph\"\n            onClick={() => {\n              appState.project.isRenameSnapshotDialogOpen = true;\n            }}\n          >\n            {appState.graph.metadata.snapshotName || \"Untitled Graph\"}\n          </Button>\n          <span className={Classes.NAVBAR_DIVIDER} />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"cog\"\n            onClick={() => {\n              appState.preferences.dialogOpen = true;\n            }}\n          />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"help\"\n            onClick={() => {\n              appState.preferences.helpDialogOpen = true;\n            }}\n          />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"minimize\"\n            onClick={() => {\n              appState.preferences.turnOnMinimalMode()\n            }}\n          />\n          <span className={Classes.NAVBAR_DIVIDER} />\n          <a\n            href={GITHUB_URL}\n            target='_blank'\n            style={{\n              color: appState.preferences.darkMode ? 'white' : 'black',\n              fontSize: '120%',\n              textDecoration: 'none'\n            }}\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n        </div>\n      </nav>\n    );\n  }\n}\n\n@observer\nclass MinimalNavbar extends React.Component {\n  render() {\n    return appState.graph.frame && (\n      <div>\n        <div\n          className={classnames(\"minimal-navbar-left\")}\n          style={{\n            backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n          }}\n        >\n          <div className=\"pt-button-group\">\n            <a\n              className={classnames(\"pt-button pt-icon-maximize\", appState.graph.frame.paused ? \"pt-icon-play\" : \"pt-icon-pause\")}\n              role=\"button\"\n              onClick={() => {\n                if (appState.graph.frame.paused) {\n                  appState.graph.frame.resumeLayout();\n                  this.forceUpdate();\n                } else {\n                  appState.graph.frame.pauseLayout();\n                  this.forceUpdate();\n                }\n              }}\n            />\n          </div>\n        </div>\n        <div\n          className={classnames(\"minimal-navbar-right\")}\n          style={{\n            backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n          }}\n        >\n          <div className=\"pt-button-group\">\n            <a className=\"pt-button pt-icon-maximize\" role=\"button\" onClick={() => appState.preferences.turnOffMinimalMode()}></a>\n            <a className=\"pt-button pt-icon-help\" role=\"button\" onClick={() => appState.preferences.helpDialogOpen = true}></a>\n            <a className=\"pt-button pt-icon-document-open\" role=\"button\" href={window.location} target=\"_blank\"></a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass Navbar extends React.Component {\n  render() {\n    return appState.preferences.isNavbarInMinimalMode ? <MinimalNavbar /> : <RegularNavbar />;\n  }\n}\n\nexport default Navbar;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Icon,\n  Card,\n  Classes,\n  Spinner,\n  NonIdealState,\n  FocusStyleManager\n} from \"@blueprintjs/core\";\nimport appState from \"../stores/index\";\nimport { requestOpenWorkspaceFolder } from \"../ipc/client\";\n\n// Argo-lite: In lite, home screen is replaced by a loading screen\n// since there will always be a default graph showing.\n@observer\nclass WorkspaceView extends React.Component {\n  render() {\n    return (\n      <div className=\"workspace\">\n        {/* <Card\n          interactive={true}\n          elevation={Card.ELEVATION_TWO}\n          onClick={() => {\n            appState.project.isNewProjectDialogOpen = true;\n          }}\n        >\n          <Icon iconName=\"plus\" /> Create New Project\n        </Card>\n        <Card\n          interactive={true}\n          elevation={Card.ELEVATION_TWO}\n          onClick={() => {\n            requestOpenWorkspaceFolder();\n          }}\n        >\n          <Icon iconName=\"cog\" /> Manage Workspace\n        </Card>\n        <hr />\n        <div className=\"argo-menu-list-header\">My Projects</div>\n        <div style={{ paddingBottom: '100px' }}>\n          {appState.project.isFetching ? (\n            <div style={{ textAlign: \"center\" }}>\n              <Spinner />\n            </div>\n          ) : appState.project.projects.length > 0 ? (\n            appState.project.projects.map(project => {\n              return (\n                <div key={project.name}>\n                  <Card\n                    interactive={true}\n                    elevation={Card.ELEVATION_TWO}\n                    onClick={() => {\n                      appState.project.currentProject = project;\n                      appState.project.isProjectDetailDialogOpen = true;\n                    }}\n                  >\n                    <h5>{project.name}</h5>\n                    <p>Created: {project.createdDate || 'Unknown'}</p>\n                  </Card>\n                </div>\n              );\n            })\n          ) : (\n            <div style={{ textAlign: \"center\" }}>\n              Workspace is empty. Start by creating a new project.\n            </div>\n          )}\n        </div> */}\n        <div style={{ textAlign: \"center\", height: \"100vh\" }}>\n          <Spinner />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorkspaceView;","import React from \"react\";\nimport appState from \"../stores\";\n\nexport default class ThreeJSVis extends React.Component {\n  componentDidMount() {\n    appState.graph.setUpFrame();\n  }\n\n  render() {\n    return (\n      <div\n        id=\"graph-container\"\n        style={{\n          width: \"100vw\",\n          height: \"90vh\",\n          flex: \"1\",\n          position: \"absolute\"\n        }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport { scales } from \"../../constants/index\";\nimport Collapsable from \"../utils/Collapsable\";\nimport SimpleSelect from \"../utils/SimpleSelect\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass GlobalPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeOutRef: null,\n      sizeOptionOpen: false,\n      colorOptionOpen: false,\n      shapeOptionOpen: false,\n      visibilityOptionOpen: false,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Collapsable Option: Color */}\n        <Collapsable\n          name=\"Color\"\n          isOpen={this.state.colorOptionOpen}\n          onToggle={() => {\n              this.setState({\n                colorOptionOpen: !this.state.colorOptionOpen\n              });\n              appState.logger.addLog({eventName: `NodeColor`, elementName: `Global Color`});\n            }\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div> \n                <p style={{display: \"inline\"}}>Color By: </p>\n                <span style={{float:\"right\"}}>\n                  <SimpleSelect  \n                    items={appState.graph.allPropertiesKeyList}\n                    onSelect={it => (appState.graph.nodes.colorBy = it)}\n                    value={appState.graph.nodes.colorBy}\n                  />\n                </span>\n              </div>\n            \n              <div style={{marginTop:\"10px\"}}> \n                <p style={{display: \"inline\"}}>Scale Type: </p>\n                <span style={{float:\"right\"}}>\n                  <SimpleSelect\n                    items={Object.keys(scales)}\n                    onSelect={it => (appState.graph.nodes.color.scale = it)}\n                    value={appState.graph.nodes.color.scale}\n                  />\n                </span>\n              </div>\n          \n            <div>\n              <div style={{marginTop:\"10px\"}}> \n                <p style={{display: \"inline\"}}>Gradient: &nbsp;</p>\n                <span style={{float:\"right\"}}>\n                    <Popover2\n                        placement=\"bottom\"\n                        modifiers={{\n                            preventOverflow: {\n                              enabled: false,\n                            },\n                          }}\n                    >\n                      <Button                  \n                        text=\"  \"\n                        style={{\n                          backgroundImage: \"inherit\",\n                          backgroundColor: appState.graph.nodes.color.from\n                        }}\n                      />\n                      <SketchPicker\n                        color={appState.graph.nodes.color.from}\n                        onChange={it => (appState.graph.nodes.color.from = it.hex)}\n                      />\n                    </Popover2>\n                    &nbsp; &#8594; &nbsp;\n                    <Popover2 \n                    placement=\"bottom\"\n                                modifiers={{\n                                    preventOverflow: {\n                                      enabled: false,\n                                    },\n                                  }}\n                                  >\n                    <Button\n                      text=\"  \"\n                      style={{\n                        backgroundImage: \"inherit\",\n                        backgroundColor: appState.graph.nodes.color.to\n                      }}\n                    />\n                    <SketchPicker\n                      color={appState.graph.nodes.color.to}\n                      onChange={it => (appState.graph.nodes.color.to = it.hex)}\n                    />\n                  </Popover2>\n                </span>\n              </div>\n            </div>\n            <div style={{marginTop:\"-1em\"}}>\n              <svg width=\"100%\" height=\"10\" className=\"gradient-preview\">\n              <defs>\n                <linearGradient\n                  x1=\"0%\"\n                  y1=\"50%\"\n                  x2=\"100%\"\n                  y2=\"50%\"\n                  id=\"theGradient\"\n                >\n                  <stop\n                    stopColor={appState.graph.nodes.color.from}\n                    stopOpacity=\"1\"\n                    offset=\"0%\"\n                  />\n                  <stop\n                    stopColor={appState.graph.nodes.color.to}\n                    stopOpacity=\"1\"\n                    offset=\"100%\"\n                  />\n                </linearGradient>\n              </defs>\n              <rect\n                x=\"0\"\n                y=\"0\"\n                width=\"100%\"\n                height=\"50\"\n                fill=\"url(#theGradient)\"\n              />\n            </svg>\n            </div>\n          </div>\n        </Collapsable>\n        \n        {/* Collapsable Option: Size */}\n        <Collapsable\n          name=\"Size\"\n          isOpen={this.state.sizeOptionOpen}\n          onToggle={() => {\n              this.setState({\n                sizeOptionOpen: !this.state.sizeOptionOpen\n              });\n              appState.logger.addLog({eventName: `NodeSize`, elementName: `Global Size`});\n            }\n          }\n        >\n         \n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div> \n                <p style={{display: \"inline\"}}>Scale By:</p>\n                <span style={{float:\"right\"}}>\n                  <Select\n                    items={appState.graph.allPropertiesKeyList}\n                    itemRenderer={CommonItemRenderer}\n                    filterable={false}\n                    onItemSelect={it => (appState.graph.nodes.sizeBy = it)}\n                  >\n                    <Button text={appState.graph.nodes.sizeBy} />\n                  </Select>\n                </span>\n              \n            </div>\n            <div style={{marginTop:\"10px\"}}> \n                <p style={{display: \"inline\"}}>Scale Type:</p>\n                <span style={{float:\"right\"}}>\n                  <Select\n                  items={Object.keys(scales)}\n                  itemRenderer={CommonItemRenderer}\n                  filterable={false}\n                  onItemSelect={it => (appState.graph.nodes.size.scale = it)}\n                  >\n                    <Button text={appState.graph.nodes.size.scale} />\n                  </Select>\n                </span>\n            </div>\n         \n            <div style={{marginTop:\"10px\"}}> \n              <p style={{display: \"inline\"}}>Size Range:</p>\n            <br />\n            <RangeSlider\n              min={1}\n              max={20}\n              stepSize={0.1}\n              labelStepSize={5}\n              onChange={([a, b]) => {\n                runInAction(\"update scale\", () => {\n                  appState.graph.nodes.size.min = a;\n                  appState.graph.nodes.size.max = b;\n                });\n              }}\n              value={[\n                appState.graph.nodes.size.min,\n                appState.graph.nodes.size.max\n              ]}\n            />\n            </div>\n          </div>\n        </Collapsable>\n        \n        {/* Collapsable Option: Shape */}\n        <Collapsable\n          name=\"Shape\"\n          isOpen={this.state.shapeOptionOpen}\n          onToggle={() => {\n              this.setState({\n                shapeOptionOpen: !this.state.shapeOptionOpen\n              });\n              appState.logger.addLog({eventName: `NodeShape`, elementName: `Global Shape`});\n            }\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n          <div>\n          <p style={{display: \"inline\"}}>Node Shape:</p>\n          <span style={{float:\"right\"}}>\n            <Select\n                items={[\n                  \"circle\",\n                  \"square\",\n                  \"triangle\",\n                  \"pentagon\",\n                  \"hexagon\",\n                  \"octagon\"\n                ]}\n                itemRenderer={CommonItemRenderer}\n                filterable={false}\n                onItemSelect={it => (appState.graph.nodes.shape = it)}\n              >\n                <Button  text={appState.graph.nodes.shape} />\n              </Select>\n              </span>\n            </div>        \n          </div>\n        </Collapsable>\n\n        {/* Collapsable Option: Shape */}\n        <Collapsable\n          name=\"Visibility\"\n          isOpen={this.state.visibilityOptionOpen}\n          onToggle={() =>\n            this.setState({\n              visibilityOptionOpen: !this.state.visibilityOptionOpen,\n            })\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n          <div> \n            <p style={{display: \"inline\"}}>Show All Nodes: </p>\n            <span style={{float:\"right\"}}>\n              <Button \n                onClick={it => {\n                  appState.graph.showNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                }}\n                iconName={\"eye-on\"}\n              />\n            </span>\n            </div>       \n          </div>\n        </Collapsable>\n\n        <br/>\n        <small>\n          \n          {pluralize(\"node\", appState.graph.overrides.size, true)}<span> </span>\n          have override styles.  &nbsp;  \n          <Button className={\"pt-small\"} text=\"Clear\" onClick={() => (appState.graph.overrides = new Map())} />\n        </small>\n      </div>\n    );\n  }\n}\n\nexport default GlobalPanel;","import React from \"react\";\nimport { Classes, Collapse, Switch } from \"@blueprintjs/core\";\n\nexport default ({ name, isOpen, onToggle, children }) => (\n  <div>\n    <Switch\n      label={name}\n      checked={isOpen}\n      onChange={onToggle}\n      className={Classes.ALIGN_RIGHT}\n    />\n    <Collapse isOpen={isOpen}>{children}</Collapse>\n  </div>\n);\n","import React from \"react\";\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport SwitchCollapsable from \"../utils/SwitchCollapsable\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass SelectionPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shapeOptionOpen: false,\n      sizeOptionOpen: false,\n      colorOptionOpen: false,\n      labelOptionOpen: false\n    };\n  }\n\n  twoLayerUpdate = (nodeId, key, value) => {\n    if (!appState.graph.overrides.has(nodeId)) {\n      appState.graph.overrides.set(nodeId, new Map());\n    }\n    const nodeAttrs = appState.graph.overrides.get(nodeId);\n    if (value !== null) {\n      nodeAttrs.set(key, value);\n    } else {\n      nodeAttrs.delete(key);\n      if (nodeAttrs.size === 0) {\n        appState.graph.overrides.delete(nodeId);\n      }\n    }\n  };\n\n  batchTwoLayerUpdate = (nodes, key, value) => {\n    runInAction(\"update entire selection\", () => {\n      nodes.forEach(n => this.twoLayerUpdate(n.data.ref.id, key, value));\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Size\"\n          isOpen={this.state.sizeOptionOpen}\n          onToggle={() => {\n            if (this.state.sizeOptionOpen) {\n              this.setState(\n                {\n                  sizeOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"size\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  sizeOptionOpen: true\n                },\n                () => {\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"size\",\n                    appState.graph.overrideConfig.size\n                  );\n                  appState.logger.addLog({eventName: `NodeSize`, elementName: `Selected Size`});\n                }\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <Slider\n              min={1}\n              max={20}\n              stepSize={0.1}\n              labelStepSize={5}\n              onChange={it => {\n                appState.graph.overrideConfig.size = it;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"size\",\n                  it\n                );\n              }}\n              value={appState.graph.overrideConfig.size}\n            />\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Color\"\n          isOpen={this.state.colorOptionOpen}\n          onToggle={() => {\n            if (this.state.colorOptionOpen) {\n              this.setState(\n                {\n                  colorOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  colorOptionOpen: true\n                },\n                () => {\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    appState.graph.overrideConfig.color\n                  );\n                  appState.logger.addLog({eventName: `NodeColor`, elementName: `Selected Color`});\n                }\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div>\n              <p style={{display: \"inline\"}}>Choose Color:</p>\n              <span style={{float:\"right\"}}>\n            <Popover2\n              placement=\"bottom\"\n              modifiers={{\n                preventOverflow: {\n                  enabled: false,\n                },\n              }}>\n              <Button\n                text=\"  \"\n                style={{\n                  backgroundImage: \"inherit\",\n                  backgroundColor: appState.graph.overrideConfig.color\n                }}\n              />\n              <SketchPicker\n                color={appState.graph.overrideConfig.color}\n                onChange={it => {\n                  appState.graph.overrideConfig.color = it.hex;\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    it.hex\n                  );\n                }}\n              />\n            </Popover2>\n            </span>\n            </div>\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Label\"\n          isOpen={this.state.labelOptionOpen}\n          onToggle={() => {\n            if (this.state.labelOptionOpen) {\n              this.setState(\n                {\n                  labelOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"label\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  labelOptionOpen: true\n                },\n                () => {\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"label\",\n                    appState.graph.overrideConfig.label\n                  );\n                  appState.logger.addLog({eventName: `NodeLabel`, elementName: `Selected Label`});\n                }\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <p style={{display: \"inline\"}}>Custom Label:</p>\n            <input\n              value={appState.graph.overrideConfig.label}\n              onChange={it => {\n                appState.graph.overrideConfig.label = it.target.value;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"label\",\n                  it.target.value\n                );\n              }}\n            />\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Shape\"\n          isOpen={this.state.shapeOptionOpen}\n          onToggle={() => {\n            if (this.state.shapeOptionOpen) {\n              this.setState(\n                {\n                  shapeOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  shapeOptionOpen: true\n                },\n                () => {\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    appState.graph.overrideConfig.shape\n                  );\n                  appState.logger.addLog({eventName: `NodeShape`, elementName: `Selected Shape`});\n                }\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div> \n              <p style={{display: \"inline\"}}>Node Shape:</p>\n              <span style={{float:\"right\"}}>\n                <Select\n                items={[\n                  \"circle\",\n                  \"square\",\n                  \"triangle\",\n                  \"pentagon\",\n                  \"hexagon\",\n                  \"octagon\"\n                ]}\n                itemRenderer={CommonItemRenderer}\n                filterable={false}\n                onItemSelect={it => {\n                  appState.graph.overrideConfig.shape = it;\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    it\n                  );\n                }}\n              >\n                <Button text={appState.graph.overrideConfig.shape} />\n              </Select>\n              </span>        \n            </div>\n          </div>\n        </SwitchCollapsable>\n      </div>\n    );\n  }\n}\n\nexport default SelectionPanel;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport GlobalPanel from \"./GlobalPanel\";\nimport SelectionPanel from \"./SelectionPanel\";\n\n@observer\nclass NodesPanel extends React.Component {\n  getRenderedNodes = () => {\n    if (appState.graph.selectedNodes.length === 0) {\n      return (\n        <div>\n          <p>Modifying All Nodes</p>\n        </div>\n      );\n    }\n    return (\n      <p>{`Modifying ${pluralize(\n        \"Node\",\n        appState.graph.selectedNodes.length,\n        true\n      )}`}</p>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.getRenderedNodes()}\n        {appState.graph.selectedNodes.length === 0 ? (\n          <GlobalPanel />\n        ) : (\n          <SelectionPanel />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default NodesPanel;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport { Button, Checkbox, Classes, RangeSlider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport Collapsable from \"../utils/Collapsable\";\nimport SimpleSelect from \"../utils/SimpleSelect\";\nimport mouse from \"../../graph-frontend/src/select\";\n\n@observer\nclass EdgesPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          timeOutRef: null,\n        //   sizeOptionOpen: false,\n          colorOptionOpen:false,\n          directionOptionOpen:false,\n        //   colorOptionOpen:false,\n        //   thicknessOptionOpen: false,\n        };\n      }\n\n    render() {\n        let graph = appState.graph.graph;\n        return (\n            <div>\n                <p>{`Modifying All Edges`}</p>\n\n\n                {/* Collapsable Option: Color */}\n                <Collapsable\n                    name=\"Color\"\n                    isOpen={this.state.colorOptionOpen}\n                    onToggle={() => {\n                            this.setState({\n                            colorOptionOpen: !this.state.colorOptionOpen\n                            });\n                            appState.logger.addLog({eventName: `EdgeColor`, elementName: `Global Color`});\n                        }\n                    }\n                    >\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\n                        <div> \n                            <p style={{display: \"inline\"}}>Select Edge Color: </p>\n                            <span style={{float:\"right\"}}>\n                                <Popover2 \n                                placement=\"bottom\"\n                                modifiers={{\n                                    preventOverflow: {\n                                      enabled: false,\n                                    },\n                                  }}>\n                                    <Button\n                                    text=\"  \"\n                                    style={{\n                                        backgroundImage: \"inherit\",\n                                        backgroundColor: appState.graph.edges.color\n                                    }}\n                                    />\n                                    <SketchPicker\n                                    color={appState.graph.edges.color}\n                                    onChange={(it) => {\n                                        appState.graph.process.graph.forEachNode(n => {\n                                             \n                                             let red = new THREE.Color(appState.graph.edges.color).r;\n                                             let blue = new THREE.Color(appState.graph.edges.color).g;\n                                             let green = new THREE.Color(appState.graph.edges.color).b;\n                                             n.renderData.linecolor.r = red;\n                                             n.renderData.linecolor.g = blue;\n                                             n.renderData.linecolor.b = green;\n                                           });\n                                        (appState.graph.edges.color = it.hex);\n                                        /**update edge color in real time*/\n                                        appState.graph.process.onHover(); \n                                    }}\n                                    />\n                                </Popover2>\n                            </span>\n                            </div>\n                        \n                    </div>\n                </Collapsable>\n            \n                <Collapsable\n                    name=\"Direction\"\n                    isOpen={this.state.directionOptionOpen}\n                    onToggle={() => {\n                            this.setState({\n                            directionOptionOpen: !this.state.directionOptionOpen\n                            });      \n                        }\n                    }\n                    >\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\n                        <div> \n                            <p style={{display: \"inline\"}}>Show Edge Direction: </p>\n                            <span style={{float:\"right\"}}>\n                            <label className=\".pt-large\">\n                            <input \n                                 type=\"checkbox\"\n                                 onChange={it => {\n                                    appState.logger.addLog({eventName: `EdgeDirection`, elementName: `Global Direction`});\n                                     appState.graph.directedOrNot = !appState.graph.directedOrNot;\n                                 }\n                                 }\n                               />\n                            </label>\n                            </span>\n                            </div>\n                        \n                    </div>\n                </Collapsable>\n{/* \n                <div>\n                     <section style = {{marginTop: \"15px\"}}>\n                         <p style={{display: \"inline\"}}>Show Edge Direction: </p>\n                         <div style={{display: \"inline\", float: \"right\"}}>\n                               <input \n                                 type=\"checkbox\"\n                                 onChange={it => {\n                                     appState.graph.directedOrNot = !appState.graph.directedOrNot;\n                                 }\n                                 }\n                               />\n                         </div>\n                     </section>\n                 </div> */}\n\n                {/* Collapsable Option: Thickness */}\n                {/* <Collapsable\n                    name=\"Thickness\"\n                    isOpen={this.state.thicknessOptionOpen}\n                    onToggle={() =>\n                        this.setState({\n                            thicknessOptionOpen: !this.state.thicknessOptionOpen\n                        })\n                    }\n                    >\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\n                        <section>\n                            <p>Select Edge Thickness: </p>\n                            <div style={{display: \"inline\", float: \"right\"}}>\n                               \n                            </div>\n                        </section>\n                    </div>\n                </Collapsable> */}\n            </div>\n        );\n    }\n}\n\nexport default EdgesPanel;","import React from \"react\";\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/labs\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass LabelsPanel extends React.Component {\n  render() {\n    return (\n      <div>\n        <span style={{display: \"inline-block\"}}>\n        <Button\n          style={{width:\"100px\"}}\n          id=\"hideAll\"\n          iconName=\"eye-off\"\n          className={Classes.FILL}\n          onClick={() => {\n              appState.graph.frame.hideAllLabels();\n            }\n          }\n        >\n          Hide All\n        </Button>\n        <Button\n          style={{width:\"100px\",display:\"none\"}}\n          id=\"showAll\"\n          iconName=\"eye-on\"\n          className={Classes.FILL}\n          onClick={() => {\n              appState.graph.frame.showAllLabels();\n            }\n          }\n        >\n          Show All\n        </Button>\n        <Button\n          style={{width:\"140px\",marginLeft:\"10px\"}}\n          id=\"hideSelected\"\n          iconName=\"eye-off\"\n          className={Classes.FILL}\n          onClick={() => {\n              appState.graph.frame.hideSelectedLabels();\n            }\n          }\n        >\n          Hide Selected\n        </Button>\n        <Button\n          style={{width:\"140px\",marginLeft:\"10px\",display:\"none\"}}\n          id=\"showSelected\"\n          iconName=\"eye-on\"\n          className={Classes.FILL}\n          onClick={() => {\n              appState.graph.frame.showSelectedLabels();\n            }\n          }\n        >\n          Show Selected\n        </Button>\n        </span>\n        <div style={{height: '20px'}} />\n        <h6>Label Size</h6>\n        <Slider\n          min={0.5}\n          max={3}\n          stepSize={0.1}\n          onChange={value => {\n            appState.graph.nodes.labelSize = value;\n          }}\n          value={appState.graph.nodes.labelSize}\n        />\n        <div style={{height: '20px'}} />\n        <h6>Label Length</h6>\n        <Slider\n          min={1}\n          max={32}\n          stepSize={0.1}\n          labelStepSize={5}\n          onChange={value => {\n            appState.graph.nodes.labelLength = value;\n          }}\n          value={appState.graph.nodes.labelLength}\n        />\n        <div style={{height: '20px'}} />\n        <h6>Label By</h6> \n        <Select\n          items={appState.graph.allPropertiesKeyList}\n          itemRenderer={CommonItemRenderer}\n          filterable={false}\n          onItemSelect={it => (appState.graph.nodes.labelBy = it)}\n        >\n          <Button text={appState.graph.nodes.labelBy} />\n        </Select>\n      </div>\n    );\n  }\n}\n\nexport default LabelsPanel;","import React from \"react\";\nimport classnames from \"classnames\";\nimport uniq from \"lodash/uniq\";\nimport { Classes, MenuDivider } from \"@blueprintjs/core\";\nimport appState from \"../../stores\";\nimport { observer } from \"mobx-react/index\";\n\n@observer\nclass NodeDetail extends React.Component {\n  render() {\n    // If input is number,\n    // currently format number between 0-1 (eg. pagerank)\n    // to show no more than 3 significant digits.\n    const formatLongFloat = (nodeAttributeValue) => {\n      const num = Number(nodeAttributeValue);\n      if (Number.isNaN(num) || num > 1 || num < 0) {\n        // Do not format just return original\n        return nodeAttributeValue;\n      }\n      // Format to no more than 3 significant digit.\n      return Number.parseFloat(num).toPrecision(3);\n    };\n\n    return (\n      <div\n        className={classnames(\n          // 'overlay-card',\n          \"right-overlay-card\",\n          \"transparent-frame\"\n        )}\n      >\n        <div\n          className={classnames(\n            Classes.CARD,\n            \"node-details-table\",\n            \"pt-elevation-2\"\n          )}\n        >\n          {/* Old table style (deprecated) */}\n          {/* <table\n            className={classnames(Classes.TABLE, Classes.TABLE_STRIPED)}\n            style={{\n              width: \"100%\",\n              padding: \"0\",\n            }}\n          >\n            <thead>\n              <tr>\n                <th>Property</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {appState.graph.allPropertiesKeyList.map((it, i) => (\n                <tr key={`${it}-${i}`}>\n                  <td style={{ padding: \"5px 10px\" }}>{it}</td>\n                  <td style={{ padding: \"5px 10px\", whiteSpace: \"normal\" }}>\n                    {it == \"url\" ? (\n                      <a href={this.props.node[it]} target={\"_blank\"}>\n                        Link to Paper\n                      </a>\n                    ) : (\n                      formatLongFloat(this.props.node[it])\n                    )}\n                  </td>\n                </tr>\n              ))}\n              {appState.graph.allPropertiesKeyList.map((element, index) =>\n                console.log(this.props.node[element], index)\n              )}\n            </tbody>\n          </table> */}\n\n          <div>\n            {/* Title */}\n            <h5 style={{ lineHeight: \"1.2em\" }}>\n              {\n                <a href={this.props.node[\"url\"]} target={\"_blank\"}>\n                  {this.props.node[\"paperName\"]}\n                </a>\n              }\n            </h5>\n\n            {/* Authors */}\n            <MenuDivider />\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              <div>\n                <b>{this.props.node[\"authors\"]}</b>\n              </div>\n            </div>\n\n            {/* Publication Details */}\n            <MenuDivider />\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              <div>\n                <b>Venue: </b>\n                {this.props.node[\"venue\"]}\n                <br />\n                <b>Year: </b>\n                {this.props.node[\"year\"]}\n                <br />\n                <b>Citation Count: </b>\n                {this.props.node[\"citationCount\"]}\n              </div>\n            </div>\n\n            {/* Stats */}\n            <MenuDivider />\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              <div>\n                <b>Degree: </b>\n                <span\n                  style={{\n                    color: appState.preferences.darkMode\n                      ? \"#BFCCD6\"\n                      : \"#5C7080\",\n                  }}\n                  className=\"node-details-table-numerals\"\n                >\n                  {this.props.node[\"degree\"]}\n                </span>\n                <br />\n                <b>Page Rank: </b>\n                <span\n                  style={{\n                    color: appState.preferences.darkMode\n                      ? \"#BFCCD6\"\n                      : \"#5C7080\",\n                  }}\n                  className=\"node-details-table-numerals\"\n                >\n                  {this.props.node[\"pagerank\"]}\n                </span>\n                <br />\n                <b>Node ID: </b>\n                <span\n                  style={{\n                    color: appState.preferences.darkMode\n                      ? \"#BFCCD6\"\n                      : \"#5C7080\",\n                  }}\n                  className=\"node-details-table-numerals\"\n                >\n                  {this.props.node[\"node_id\"]}\n                </span>\n              </div>\n            </div>\n\n            {/* Abstract */}\n            <MenuDivider />\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n              <div>\n                <b>Abstract: </b>\n                <br />\n                {this.props.node[\"paperAbstract\"]}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NodeDetail;\n","import React from \"react\";\n\nimport { format } from \"d3-format\";\nimport { LegendLinear, LegendSize } from \"@vx/vx\";\nimport appState from \"../stores\";\nimport { observer } from \"mobx-react\";\n\nfunction Legends() {\n  return (\n    <div className=\"legends\" style={{visibility: (!appState.preferences.currentEmptyGraphDoNotDisplayLegend && appState.preferences.isLegendShowing) ? 'visible' : 'hidden'}}>\n      <LegendSize\n        className=\"scale-legend\"\n        direction=\"row\"\n        itemDirection=\"column\"\n        itemMargin=\"0\"\n        shapeMargin=\"5px 0\"\n        labelFormat={format(\".4f\")}\n        scale={appState.graph.nodeSizeScale}\n        shape={props => {\n          const { size } = props;\n          return (\n            <svg width={size} height={size}>\n              <circle {...props} r={size / 2} cx={size / 2} cy={size / 2} />\n            </svg>\n          );\n        }}\n      />\n      <LegendLinear\n        direction=\"row\"\n        itemDirection=\"column\"\n        shape=\"circle\"\n        scale={appState.graph.nodeColorScale}\n        labelFormat={format(\".4f\")}\n      />\n    </div>\n  );\n}\n\nexport default observer(Legends);","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores\";\n\n@observer\nclass StatusBar extends React.Component {\n    render() {\n        return (\n            <div\n                className={classnames(\"bottom-status-bar\")}\n                style={{\n                    backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n                    visibility: appState.preferences.isStatusBarShowing? \"visible\" : \"hidden\"\n                }}\n            >\n                <div className={classnames(\"bottom-status-bar__left\")}>Total Nodes: {appState.graph.metadata.fullNodes}, Total Edges: {appState.graph.metadata.fullEdges}, Hidden Nodes: {appState.graph.numHiddenNodes}</div>\n                <div className={classnames(\"bottom-status-bar__right\")}>Color by: {appState.graph.nodes.colorBy} ({appState.graph.nodes.color.scale}), Size by: {appState.graph.nodes.sizeBy} ({appState.graph.nodes.size.scale})</div>\n            </div>\n        );\n    }\n}\n\nexport default StatusBar;","import React from \"react\";\nimport { Button, Classes, Tooltip, Intent, Position } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\n\n@observer\nclass SelectionActionPanel extends React.Component {\n  render() {\n      // Only relevant when there's exact 1 node selected.\n      // To display number of hidden nodes if exists\n      let numHiddenNeighbor = 0;\n      if (appState.graph.selectedNodes.length === 1) {\n        if (appState.graph.lastSelectedSingleNode) {\n            const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\n            numHiddenNeighbor = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId).filter(n => n.isHidden).length;\n        }\n      }\n\n      return (\n        <div\n            className=\"argo-selection-action-panel\"\n            style={{\n                backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n            }}\n        >\n            <Tooltip\n                content=\"Pin Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"pin\"\n                    text=\"Pin\"\n                    intent={Intent.PRIMARY}\n                    onClick={() => {\n                    appState.graph.frame.pinSelectedNodes();\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            <Tooltip\n                content=\"Unpin Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"unpin\"\n                    text=\"Unpin\"\n                    intent={Intent.WARNING}\n                    onClick={() => {\n                    appState.graph.frame.unpinSelectedNodes();\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            <Tooltip\n                content=\"Hide Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"delete\"\n                    text=\"Hide\"\n                    intent={Intent.DANGER}\n                    onClick={() => {\n                    appState.graph.hideNodes(\n                        appState.graph.frame.getSelectedIds()\n                    );\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            {// This menu only shows when there's exactly 1 node selected\n              appState.graph.selectedNodes.length === 1 && (\n                <div style={{ display: \"inline\" }}>\n                  <Tooltip\n                    content=\"Open Neighbor Dialog\"\n                    position={Position.BOTTOM}\n                  >\n                    <Button\n                      className={classnames([\n                        Classes.BUTTON,\n                        Classes.MINIMAL\n                      ])}\n                      iconName=\"graph\"\n                      text={`Neighbors (${numHiddenNeighbor} hidden)`}\n                      intent={Intent.PRIMARY}\n                      onClick={() => {\n                        appState.graph.frame.pauseLayout();\n                        appState.preferences.neighborDialogOpen = true;\n                        this.forceUpdate();\n                      }}\n                    />\n                  </Tooltip>\n                </div>\n            )}\n        </div>\n      );\n  }\n}\n\nexport default SelectionActionPanel;","import React from \"react\";\nimport anime from \"animejs\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  InputGroup,\n  Intent,\n  Position,\n  Tooltip,\n  Popover,\n  Menu,\n  MenuItem,\n  MenuDivider\n} from \"@blueprintjs/core\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport GlobalPanel from \"./GlobalPanel\";\nimport SelectionPanel from \"./SelectionPanel\";\nimport uniq from \"lodash/uniq\";\nimport { averageClusteringCoefficient } from \"../../services/AlgorithmUtils\";\n\n\n@observer\nclass ZoomPanel extends React.Component {\n  render() {\n    return (\n      <div className={classnames(\n        \"zoom-buttons\"\n      )}>\n          <Button\n            style={{marginBottom: \"5px\"}}\n            className={classnames([Classes.BUTTON])} \n            iconName=\"plus\"\n            onClick={() => {\n              anime({\n                targets: appState.controls.zoom,\n                percent: appState.controls.zoom.nextZoomInPercent\n              });\n              // appState.logger.addLog({eventName: `ZoomingIn`, elementName: `PlusButton`})\n            }}\n            ></Button>\n            \n            \n            <br></br>\n            \n            \n            <Button \n            style={{marginBottom: \"5px\"}}\n            className={classnames([Classes.BUTTON])} \n            iconName=\"minus\"\n            onClick={() => {\n              anime({\n                targets: appState.controls.zoom,\n                percent: appState.controls.zoom.nextZoomOutPercent\n              });\n              // appState.logger.addLog({eventName: `ZoomingOut`, elementName: `MinusButton`})\n            }}></Button>\n\n\n            <br></br>\n            \n            \n            <Button\n            style={{marginBottom: \"5px\"}} \n            className={classnames([Classes.BUTTON])} \n            iconName=\"home\"\n            onClick={() => {\n              appState.controls.reset();\n              // appState.logger.addLog({eventName: `Reset Viewport`, elementName: `HomeButton`})\n            }}></Button>\n      </div>\n    );\n  }\n}\n\nexport default ZoomPanel;","import React from \"react\";\nimport { Classes, Tab2, Tabs2 } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../stores\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { addNode } from \"../ipc/client\";\nimport NodesPanel from \"./panels/NodesPanel\";\nimport EdgesPanel from \"./panels/EdgesPanel\";\nimport LabelsPanel from \"./panels/LabelsPanel\";\nimport NodeDetail from \"./panels/NodeDetailPanel\";\nimport Legends from \"./Legends\";\nimport StatusBar from \"./StatusBar\";\nimport SelectionActionPanel from \"./panels/SelectionActionPanel\";\nimport ZoomPanel from \"./panels/ZoomPanel\";\n\n// TODO: migrate to simple select\n\n@observer\nclass RenderOptionsCard extends React.Component {\n  render() {\n    return (\n      <div>\n        {/* <h4>Graph Options</h4> */}\n        <Tabs2 animate id=\"graph-options\">\n          <Tab2 id=\"nodes\" title=\"Nodes\" panel={<NodesPanel />} />\n          <Tab2 id=\"edges\" title=\"Edges\" panel={<EdgesPanel />} />\n          <Tab2 id=\"labels\" title=\"Labels\" panel={<LabelsPanel />} />\n          {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\n          <Tabs2.Expander />\n        </Tabs2>\n      </div>\n    );\n  }\n}\n\n//\n\n@observer\nclass FloatingCards extends React.Component {\n  optionsVisible = {\n    left: \"0em\",\n  };\n  optionsInvisible = {\n    left: \"-22em\",\n  };\n  // Differentiate the side button colors based on the color mode\n  sideButtonVisDark = {\n    marginLeft: \"50px\",\n    color: \"#5C7080\",\n  };\n  sideButtonVisWhite = {\n    marginLeft: \"50px\",\n    color: \"#CED9E0\",\n  };\n  sideButtonInv = {\n    marginLeft: \"-15px\",\n  };\n  toggleOptions = () => {\n    appState.preferences.isRenderOptionsCardHidden =\n      !appState.preferences.isRenderOptionsCardHidden;\n  };\n  render() {\n    return (\n      <div className=\"floating-overlay\">\n        <div className=\"left-cards\">\n          {appState.search.panelOpen && (\n            <div\n              className={classnames(\n                Classes.CARD,\n                Classes.ELEVATION_2,\n                \"overlay-card\",\n                \"left-overlay-card\"\n              )}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"left\",\n                  alignItems: \"left\",\n                }}\n              >\n                <h4 style={{ width: 140 }}>\n                  {appState.search.numCandidates} results\n                </h4>\n                <div style={{ width: 20 }} />\n                <h4>Order</h4>\n                <div style={{ width: 5 }} />\n                <SimpleSelect\n                  style={{ \"margin-bottom\": 10 }}\n                  items={[...appState.graph.metadata.nodeComputed, \"node_id\"]}\n                  onSelect={(it) => (appState.graph.searchOrder = it)}\n                  value={appState.graph.searchOrder}\n                />\n              </div>\n              <table\n                className={classnames(\n                  Classes.TABLE,\n                  Classes.TABLE_STRIPED,\n                  Classes.INTERACTIVE\n                )}\n                style={{\n                  width: \"100%\",\n                  userSelect: \"none\",\n                }}\n              >\n                <tbody>\n                  {appState.search.candidates.map((node, i) => (\n                    <tr\n                      key={i}\n                      onMouseOver={() =>\n                        appState.graph.frame.highlightNodeIds(\n                          [node.node_id],\n                          true\n                        )\n                      }\n                      onMouseDown={() => addNode(node.node_id)}\n                      onMouseLeave={() =>\n                        appState.graph.frame.highlightNodeIds(\n                          [node.node_id],\n                          false\n                        )\n                      }\n                    >\n                      <td>{node[appState.graph.nodes.labelBy]}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <center>\n                <a\n                  onMouseDown={() => {\n                    if (appState.search.pageNum > 0) {\n                      appState.search.pageNum -= 1;\n                      appState.search.candidates =\n                        appState.search.allCands.slice(\n                          appState.search.pageNum * appState.search.nPerPage,\n                          (appState.search.pageNum + 1) *\n                            appState.search.nPerPage\n                        );\n                    }\n                  }}\n                >\n                  Prev&nbsp;\n                </a>\n                &nbsp;\n                {appState.search.pageNum !== 0 ? (\n                  <a\n                    onMouseDown={() => {\n                      appState.search.pageNum = 0;\n                      appState.search.candidates =\n                        appState.search.allCands.slice(\n                          appState.search.pageNum * appState.search.nPerPage,\n                          (appState.search.pageNum + 1) *\n                            appState.search.nPerPage\n                        );\n                    }}\n                  >\n                    1&nbsp;\n                  </a>\n                ) : (\n                  <a\n                    style={{\n                      color: \"#111111\",\n                      pointerEvents: \"none\",\n                      cursor: \"default\",\n                    }}\n                  >\n                    {appState.search.pageNum + 1}&nbsp;\n                  </a>\n                )}\n                ...<b>&nbsp;</b>\n                {appState.search.pages.map((i) => {\n                  if (\n                    i != 0 &&\n                    i != appState.search.maxPage &&\n                    i == appState.search.pageNum\n                  ) {\n                    return (\n                      <a\n                        key={i}\n                        style={{\n                          color: \"#111111\",\n                          pointerEvents: \"none\",\n                          cursor: \"default\",\n                        }}\n                      >\n                        {appState.search.pageNum + 1}&nbsp;\n                      </a>\n                    );\n                  } else if (\n                    i != 0 &&\n                    i != appState.search.maxPage &&\n                    ((i > appState.search.pageNum - 4 &&\n                      i < appState.search.pageNum + 4) ||\n                      (appState.search.pageNum < 4 && i < 8) ||\n                      (appState.search.pageNum > appState.search.maxPage - 4 &&\n                        i > appState.search.maxPage - 8))\n                  ) {\n                    return (\n                      <a\n                        key={i}\n                        onMouseDown={() => {\n                          appState.search.pageNum = i;\n                          appState.search.candidates =\n                            appState.search.allCands.slice(\n                              appState.search.pageNum *\n                                appState.search.nPerPage,\n                              (appState.search.pageNum + 1) *\n                                appState.search.nPerPage\n                            );\n                        }}\n                      >\n                        {i + 1}&nbsp;\n                      </a>\n                    );\n                  }\n                })}\n                ...&nbsp;\n                {appState.search.pageNum !== appState.search.maxPage ? (\n                  <a\n                    onMouseDown={() => {\n                      appState.search.pageNum = appState.search.maxPage;\n                      appState.search.candidates =\n                        appState.search.allCands.slice(\n                          appState.search.pageNum * appState.search.nPerPage,\n                          (appState.search.pageNum + 1) *\n                            appState.search.nPerPage\n                        );\n                    }}\n                  >\n                    {appState.search.maxPage + 1}&nbsp;\n                  </a>\n                ) : (\n                  <a\n                    style={{\n                      color: \"#111111\",\n                      pointerEvents: \"none\",\n                      cursor: \"default\",\n                    }}\n                  >\n                    {appState.search.pageNum + 1}\n                  </a>\n                )}\n                &nbsp;\n                <a\n                  onMouseDown={() => {\n                    if (appState.search.pageNum < appState.search.maxPage) {\n                      appState.search.pageNum += 1;\n                      appState.search.candidates =\n                        appState.search.allCands.slice(\n                          appState.search.pageNum * appState.search.nPerPage,\n                          (appState.search.pageNum + 1) *\n                            appState.search.nPerPage\n                        );\n                    }\n                  }}\n                >\n                  Next\n                </a>\n                <br />\n                <br />\n                <h5>Page {appState.search.pageNum + 1}</h5>\n              </center>\n            </div>\n          )}\n          <div\n            className={classnames(\n              Classes.CARD,\n              Classes.ELEVATION_2,\n              \"overlay-card\",\n              \"left-overlay-card\",\n              \"transparent-frame\",\n              \"left-cards\"\n            )}\n            style={\n              appState.preferences.isRenderOptionsCardHidden\n                ? this.optionsInvisible\n                : this.optionsVisible\n            }\n          >\n            <button className=\"minimizeCardButton\" onClick={this.toggleOptions}>\n              {\" \"}\n              &#8249;\n            </button>\n            <br />\n            <RenderOptionsCard />\n          </div>\n          <div\n            className={classnames(\n              Classes.CARD,\n              Classes.ELEVATION_4,\n              \"overlay-card\",\n              \"transparent-frame\"\n            )}\n            style={{\n              width: \"1em\",\n              paddingTop: \"1em\",\n              paddingRight: \"0.7em\",\n              paddingBottom: \"0.5em\",\n              marginLeft: \"-5.4em\",\n            }}\n          >\n            <button\n              className={classnames(\n                Classes.BUTTON,\n                \"expandCardButton\",\n                \"pt-elevation-1\"\n              )}\n              onClick={this.toggleOptions}\n              style={\n                //Nested ternary to check the two conditions\n                !appState.preferences.isRenderOptionsCardHidden\n                  ? this.sideButtonInv\n                  : appState.preferences.darkMode\n                  ? this.sideButtonVisWhite\n                  : this.sideButtonVisDark\n              }\n            >\n              &#9776;\n            </button>\n          </div>\n        </div>\n        {appState.graph.selectedNodes.length === 1 && (\n          <NodeDetail node={appState.graph.selectedNodes[0].data.ref} />\n        )}\n\n        {appState.graph.selectedNodes.length !== 1 &&\n          appState.graph.currentlyHovered && (\n            <NodeDetail node={appState.graph.currentlyHovered.data.ref} />\n          )}\n\n        <Legends />\n        <StatusBar />\n        {\n          // This menu only shows when there are nodes selected\n          appState.graph.selectedNodes.length > 0 &&\n            !appState.preferences.isNavbarInMinimalMode && (\n              <SelectionActionPanel />\n            )\n        }\n\n        <ZoomPanel />\n      </div>\n    );\n  }\n}\n\nexport default FloatingCards;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  FocusStyleManager,\n  NonIdealState\n} from \"@blueprintjs/core\";\nimport Dialogs from \"./components/Dialogs\";\nimport Navbar from \"./components/Navbar\";\nimport WorkspaceView from \"./components/WorkspaceView\";\nimport appState from \"./stores/index\";\nimport ThreeJSVis from \"./visualizers/ThreeJSVis\";\nimport FloatingCards from \"./components/FloatingCards\";\nimport registerIPC from \"./ipc/client\";\nimport { fetchWorkspaceProjects } from \"./ipc/client\";\nimport { MOBILE_WIDTH_CUTOFF, MOBILE_HEIGHT_CUTOFF } from \"./constants\";\n\nimport keydown, { Keys } from \"react-keydown\";\n\nregisterIPC();\nFocusStyleManager.onlyShowFocusOnTabs();\n\nfetchWorkspaceProjects();\n\nappState.preferences.loadUserConfig();\n\nconst { DELETE, BACKSPACE, P, U } = Keys;\n\n// Respond to window resize, also triggered after frame is loaded.\nfunction respondToResize() {\n  if (!appState.graph.frame) {\n    window.setTimeout(respondToResize, 1000);\n    return;\n  }\n  if (window.innerWidth < MOBILE_WIDTH_CUTOFF || window.innerHeight < MOBILE_HEIGHT_CUTOFF) {\n    appState.preferences.turnOnMinimalMode();\n  }\n}\n\nrespondToResize();\n\nwindow.addEventListener('resize', respondToResize);\n\n@keydown\n@observer\nclass App extends React.Component {\n  componentWillReceiveProps({ keydown }) {\n    if (keydown.event) {\n      if (keydown.event.which === DELETE || keydown.event.which === BACKSPACE) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.hideNodes(appState.graph.frame.getSelectedIds());\n          this.forceUpdate();\n        }\n      } else if (keydown.event.which === P) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.frame.pinSelectedNodes();\n        }\n      } else if (keydown.event.which === U) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.frame.unpinSelectedNodes();\n        }\n      }\n    }\n  }\n  render() {\n    return (\n      <div\n        className={classnames({\n          \"app-wrapper\": true,\n          [Classes.DARK]: appState.preferences.darkMode\n        })}>\n        <Navbar />\n        <main className=\"main\">\n          {appState.graph.hasGraph ? (\n            <ThreeJSVis />\n          ) : (\n              <WorkspaceView />\n            )}\n        </main>\n        {appState.graph.hasGraph && <FloatingCards />}\n        <Dialogs />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/dist/blueprint.css';\nimport '@blueprintjs/table/dist/table.css';\nimport './styles/index.css';\n\nconst render = () => {\n    ReactDOM.render(<App/>, document.getElementById('root'));\n};\n\nrender();","const jsnx = require('jsnetworkx');\nconst jsgraphs = require('js-graph-algorithms');\n\n/**\n * Convert Argo-lite snapshot for use in the JSNetworkX library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJsnx(snapshot) {\n    const jsnxGraph = new jsnx.Graph();\n    jsnxGraph.addNodesFrom(snapshot.rawGraph.nodes.map(n => [n.id, n]));\n    jsnxGraph.addEdgesFrom(snapshot.rawGraph.edges.map(e => [e.source_id, e.target_id]));\n    return jsnxGraph;\n}\n\n/**\n * Convert Argo-lite snapshot for use in the ngraph library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToNGraph(snapshot) {\n    return null;\n}\n\n/**\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJSGraph(snapshot) {\n    var idDict = {};\n    var i;\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\n    }\n    var g = new jsgraphs.Graph(snapshot.rawGraph.nodes.length);\n    snapshot.rawGraph.edges.forEach(e => {\n        g.addEdge(idDict[e.source_id], idDict[e.target_id]);\n    });\n    return [g, idDict];\n}\n\n/**\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library (Weighted).\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJSGraphWeightedDi(snapshot) {\n    var idDict = {};\n    var i;\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\n    }\n    var g = new jsgraphs.WeightedDiGraph(snapshot.rawGraph.nodes.length);\n    snapshot.rawGraph.edges.forEach(e => {\n        g.addEdge(new jsgraphs.Edge(idDict[e.source_id], idDict[e.target_id], 1.0));\n    });\n    return [g, idDict];\n}\n\n/**\n * Convert Argo-lite snapshot to the GEXF format.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToGexf(snapshot) {\n    return null;\n}\n\n/**\n * Calculate the average clustering coefficient of the (undirected unweighted) graph.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function averageClusteringCoefficient(snapshot) {\n    const jsnxGraph = convertToJsnx(snapshot);\n    const result = jsnx.averageClustering(jsnxGraph);\n    console.log('Computing Clustering Coefficient');\n    return result;\n}\n\n/**\n * Calculate the number of connected components in a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function connectedComponents(snapshot) {\n    var cc = new jsgraphs.ConnectedComponents(convertToJSGraph(snapshot)[0]);\n    return cc.componentCount();\n}\n\n/**\n * Calculate the density of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function graphDensity(snapshot) {\n    const nodeCount = snapshot.rawGraph.nodes.length;\n    const edgeCount = snapshot.rawGraph.edges.length / 2;\n    return (2 * edgeCount) / ((nodeCount) * (nodeCount - 1));\n}\n\n/**\n * Calculate the average degree of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function averageDegree(snapshot) {\n    let sum = 0;\n    snapshot.rawGraph.nodes.forEach(e => {\n            sum += e.degree;\n        }\n    )\n    return sum / snapshot.rawGraph.nodes.length;\n}\n\n/**\n * Calculate the diameter of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function exactGraphDiameter(snapshot) {\n    let temp = convertToJSGraphWeightedDi(snapshot);\n    let jsg = temp[0];\n    let idDict = temp[1]\n    let dia = -1;\n    snapshot.rawGraph.nodes.forEach(e => {\n        let dijkstra = new jsgraphs.Dijkstra(jsg, idDict[e.id]);\n        snapshot.rawGraph.nodes.forEach(f => {\n            if(dijkstra.hasPathTo(idDict[f.id])){\n                let pathLength = dijkstra.pathTo(idDict[f.id]).length;\n                dia = Math.max(dia, pathLength);\n            }\n        })\n    });\n    return dia;\n}\n ","import * as scale from \"d3-scale\";\n\n// Argo-lite Iframe widget mode\n// Build the app separately and host it on a different URL\n// If set to true, the app will begin in widget mode\n// hiding certain panels, logo, and minimap\n// and show a minimalist Navbar.\nexport const IS_IFRAME_WIDGET = window.location !== window.parent.location;\n\nexport const FRONTEND_URL = \"https://poloclub.github.io/argo-scholar\";\nexport const LOGO_URL = \"https://poloclub.github.io/argo-scholar\";\nexport const GITHUB_URL = \"https://github.com/poloclub/argo-scholar\";\n// Argo-lite Graph Sharing backend Strapi Server:\nexport const BACKEND_URL = \"https://argo-share.herokuapp.com\"; // for production\n// export const BACKEND_URL = \"https://sleepy-brushlands-57948.herokuapp.com\"; // for free heroku\n// export const BACKEND_URL = \"http://localhost:1337\"; // for local strapi development\nexport const SAMPLE_GRAPH_SNAPSHOTS = [\n  [\"Deep Learning\", \"ad6fd65d-9aab-431f-b10d-3f70fe8f576f\"],\n  [\"Apolo Sample\", \"0859c585-e1ff-4bf6-a1f2-0e6aec5de62f\"],\n  // [\"CORD-19 Citation Graph 06-02\", \"4bf882d3-8966-4f41-a590-acafeb998d2a\"]\n];\n\n// When resizing window or running on mobile,\n// used to determine whether screen\n// is considered small.\nexport const MOBILE_WIDTH_CUTOFF = 800;\nexport const MOBILE_HEIGHT_CUTOFF = 480;\n\nexport const SCALE_LINEAR = \"Linear Scale\";\nexport const SCALE_LOG = \"Log Scale\";\n\nexport const scales = {\n  [SCALE_LINEAR]: scale.scaleLinear,\n  [SCALE_LOG]: scale.scaleLog\n};\n\nexport const LOAD_USER_CONFIG = \"load-user-config\";\nexport const LOADED_USER_CONFIG = \"loaded-user-config\";\nexport const SAVE_USER_CONFIG = \"save-user-config\";\nexport const SAVED_USER_CONFIG = \"saved-user-config\";\n\nexport const FETCH_WORKSPACE_PROJECTS = \"fetch-workspace-projects\";\nexport const FETCHED_WORKSPACE_PROJECTS = \"fetched-workspace-projects\";\nexport const MENU_NEW_PROJECT = \"menu-new-project\";\nexport const CREATE_NEW_PROJECT = \"create-new-project\";\nexport const CREATED_NEW_PROJECT = \"created-new-project\";\n\nexport const DELETE_FILE = \"delete-file\";\nexport const RENAME_FILE = \"rename-file\";\n\nexport const LOAD_GRAPH_JSON = \"load-graph-json\";\nexport const LOAD_GRAPH_SQLITE = \"load-graph-sqlite\";\nexport const LOADED_GRAPH_JSON = \"loaded-graph-json\";\nexport const LOAD_TOAST_KEY = \"load-toast-key\";\n\nexport const SAVE_GRAPH_JSON = \"save-graph-json\";\nexport const SAVE_GRAPH_SQLITE = \"save-graph-sqlite\";\nexport const SAVED_GRAPH_JSON = \"saved-graph-json\";\nexport const SAVE_TOAST_KEY = \"save-const-key\";\n\nexport const MENU_LOAD = \"menu-load\";\nexport const MENU_IMPORT_CSV = \"menu-import-csv\";\nexport const MENU_SAVE_GRAPH_STATE = \"menu-save-graph-state\";\nexport const MENU_SAVE_GRAPH_STATE_TO_PROJECT =\n  \"menu-save-graph-state-to-project\";\nexport const MENU_SAVE_GRAPH_SQLITE = \"menu-save-graph-sqlite\";\nexport const SAVE_GRAPH_STATE = \"save-graph-state\";\nexport const SAVED_GRAPH_STATE = \"saved-graph-state\";\nexport const SAVE_GRAPH_STATE_TO_PROJECT = \"save-graph-state-to-project\";\nexport const SAVED_GRAPH_STATE_TO_PROJECT = \"saved-graph-state-to-project\";\nexport const LOAD_GRAPH_STATE = \"load-graph-state\";\nexport const LOADED_GRAPH_STATE = \"loaded-graph-state\";\n\nexport const SHOW_ITEM_IN_FOLDER = \"show-item-in-folder\";\nexport const SHOW_WORKSPACE_FOLDER = 'show-workspace-folder';\nexport const CHANGE_WORKSPACE_FOLDER = 'change-workspace-folder';\nexport const CHANGED_WORKSPACE_FOLDER = 'changed-workspace-folder';\n\nexport const CHOOSE_EDGE_FILE = \"choose-edge-file\";\nexport const CHOSEN_EDGE_FILE = \"chosen-edge-file\";\nexport const CHOOSE_NODE_FILE = \"choose-node-file\";\nexport const PEAKED_NODE_FILE = \"peaked-node-file\";\nexport const CHOSEN_NODE_FILE = \"chosen-node-file\";\n\nexport const CHOOSE_GRAPH_FILE = \"choose-graph-file\";\nexport const CHOSEN_GRAPH_FILE = \"chosen-graph-file\";\nexport const CHOOSE_STATE_FILE = \"choose-state-file\";\nexport const CHOSEN_STATE_FILE = \"chosen-state-file\";\n\nexport const NODE_AND_EDGE_FILE = \"both nodes and edges file\";\nexport const ONLY_EDGE_FILE = \"only edges file\";\n\nexport const GRAPH_AND_STATE_FILE = \"both graph and snapshot file\";\nexport const ONLY_GRAPH_FILE = \"only graph file\";\nexport const IMPORT_GRAPH = \"import-graph\";\nexport const IMPORTED_GRAPH = \"imported-graph\";\nexport const OPEN_GRAPH = \"open-graph\";\nexport const OPENED_GRAPH = \"opened-graph\";\n\nexport const SEARCH_REQUEST = \"search-request\";\nexport const SEARCH_RESPONSE = \"search-response\";\n\nexport const ADD_NODES = \"add-nodes\";\nexport const ADD_SELECT_NODE = \"add-select-node\";\nexport const ADD_NODE = \"add-node\";\nexport const GET_NEIGHBORS = \"get-neighbors\";\n","import { runInAction, toJS } from 'mobx';\nimport { Intent } from '@blueprintjs/core';\nimport { demapify } from 'es6-mapify';\n\nimport appState from '../stores/index';\nimport {\n  ADD_NODE,\n  ADD_NODES,\n  ADD_SELECT_NODE,\n  CHOOSE_EDGE_FILE,\n  CHOOSE_GRAPH_FILE,\n  CHOOSE_NODE_FILE,\n  CHOOSE_STATE_FILE,\n  CHOSEN_EDGE_FILE,\n  CHOSEN_GRAPH_FILE,\n  CHOSEN_NODE_FILE,\n  CHOSEN_STATE_FILE,\n  GET_NEIGHBORS,\n  IMPORT_GRAPH,\n  IMPORTED_GRAPH,\n  LOAD_GRAPH_SQLITE,\n  LOADED_GRAPH_SQLITE,\n  LOADED_GRAPH_STATE,\n  MENU_IMPORT_CSV,\n  MENU_LOAD,\n  MENU_NEW_PROJECT,\n  MENU_SAVE_GRAPH_SQLITE,\n  MENU_SAVE_GRAPH_STATE,\n  CREATE_NEW_PROJECT,\n  CREATED_NEW_PROJECT,\n  OPEN_GRAPH,\n  OPENED_GRAPH,\n  FETCH_WORKSPACE_PROJECTS,\n  FETCHED_WORKSPACE_PROJECTS,\n  SAVE_GRAPH_SQLITE,\n  SAVE_GRAPH_STATE,\n  SAVED_GRAPH_JSON,\n  SAVED_GRAPH_STATE,\n  SEARCH_REQUEST,\n  SEARCH_RESPONSE,\n  SHOW_ITEM_IN_FOLDER,\n  SAVED_GRAPH_STATE_TO_PROJECT,\n  MENU_SAVE_GRAPH_STATE_TO_PROJECT,\n  SAVE_GRAPH_STATE_TO_PROJECT,\n  DELETE_FILE,\n  RENAME_FILE,\n  SHOW_WORKSPACE_FOLDER,\n  LOAD_USER_CONFIG,\n  LOADED_USER_CONFIG,\n  SAVED_USER_CONFIG,\n  SAVE_USER_CONFIG,\n  CHANGE_WORKSPACE_FOLDER,\n  CHANGED_WORKSPACE_FOLDER,\n} from '../constants/index';\nimport { toaster } from '../notifications/client';\n\nimport createGraph from 'ngraph.graph';\nimport pageRank from 'ngraph.pagerank';\nimport parse from \"csv-parse/lib/sync\";\n// import worker from './worker';\n\n// TODO: Register web worker used by Argo-lite.\n\n// Argo-lite replacement for electron ipc.\nconst ipcRenderer = {\n  send: (eventString) => {\n    console.log(`ipcRenderer.send(${eventString}, ...)`);\n  }\n}\n\nexport default function registerIPC() {\n  // ipcRenderer.on(LOADED_USER_CONFIG, (event, loadedObject) => {\n  //   // Overwrite PreferenceStore values according to user config values,\n  //   // if present.\n  //   if (loadedObject.darkMode) {\n  //     appState.preferences.darkMode = true;\n  //   }\n  //   if (loadedObject.workspace && loadedObject.workspace != '') {\n  //     appState.preferences.workspacePath = loadedObject.workspace;\n  //   }\n  // });\n\n  // ipcRenderer.on(SAVED_USER_CONFIG, (event) => {\n  //   toaster.show({\n  //     message: \"User configuration saved\",\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //   });\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_SQLITE, (event, loadedObject) => {\n  //   runInAction('load saved graph', () => {\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\n  //     appState.graph.metadata = loadedObject.metadata;\n  //   });\n  // });\n\n  // ipcRenderer.on(OPENED_GRAPH, (event, loadedObject) => {\n  //   runInAction('load saved graph and state', () => {\n  //     console.log(loadedObject);\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\n  //     appState.graph.metadata = loadedObject.metadata;\n  //     if (loadedObject.state) {\n  //       appState.graph.loadImmediateStates(loadedObject.state);\n  //     }\n  //   });\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, loadedObject) => {\n  //   appState.graph.loadImmediateStates(loadedObject);\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_STATE, (event, savedFilePath) => {\n  //   toaster.show({\n  //     message: `Saved graph snapshot file to ${savedFilePath}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //     action: {\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\n  //       text: 'Show in Folder',\n  //     },\n  //   });\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_STATE_TO_PROJECT, (event, snapshotName) => {\n  //   toaster.show({\n  //     message: `Saved to snapshot ${snapshotName}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //   });\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_JSON, (event, savedFilePath) => {\n  //   toaster.show({\n  //     message: `Saved graph file to ${savedFilePath}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //     action: {\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\n  //       text: 'Show in Folder',\n  //     },\n  //   });\n  // });\n\n  // ipcRenderer.on(CHOSEN_NODE_FILE, (event, path) => {\n  //   appState.import.importConfig.nodeFile.path = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_EDGE_FILE, (event, path) => {\n  //   appState.import.importConfig.edgeFile.path = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_GRAPH_FILE, (event, path) => {\n  //   appState.import.graphFile = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_STATE_FILE, (event, path) => {\n  //   appState.import.stateFile = path;\n  // });\n\n  // ipcRenderer.on(IMPORTED_GRAPH, (event) => {\n  //   appState.import.loading = false;\n  //   appState.import.dialogOpen = false;\n  //   appState.project.isFetching = true;\n  //   fetchWorkspaceProjects();\n  // });\n\n  // ipcRenderer.on(ADD_NODES, (event, toAdd) => {\n  //   runInAction('add nodes and edges to graph', () => {\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\n  //       toAdd.nodes,\n  //     );\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\n  //       toAdd.edges,\n  //     );\n  //   });\n  // });\n\n  // ipcRenderer.on(ADD_SELECT_NODE, (event, toAdd) => {\n  //   runInAction('add nodes and edges to graph', () => {\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\n  //       toAdd.nodes,\n  //     );\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\n  //       toAdd.edges,\n  //     );\n  //   });\n\n  //   appState.graph.frame.setLastNode(toAdd.nodes[0].node_id);\n  //   appState.graph.frame.dragLastNode();\n  // });\n\n  // ipcRenderer.on(SEARCH_RESPONSE, (event, candidates) => {\n  //   var cands = JSON.parse(candidates);\n  //   var ckeys = cands.map(x => x.node_id);\n  //   appState.search.allCands = Object.values(cands);\n  //   appState.search.pageNum = 0;\n  //   appState.search.nPerPage = 10;\n  //   appState.search.numCandidates = appState.search.allCands.length;\n  //   appState.search.maxPage = parseInt(\n  //     appState.search.allCands.length / appState.search.nPerPage,\n  //   );\n  //   appState.search.pages = [...Array(appState.search.maxPage).keys()];\n  //   appState.search.candidates = appState.search.allCands.slice(0, 10);\n  //   appState.search.panelOpen = true;\n  //   if (appState.graph.frame) {\n  //     appState.graph.frame.highlightNodeIds(ckeys, true);\n  //   }\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, stateStr) => {\n  //   appState.graph.loadImmediateStates(stateStr);\n  // });\n\n  // ipcRenderer.on(CREATED_NEW_PROJECT, () => {\n  //   fetchWorkspaceProjects();\n  // });\n\n  // ipcRenderer.on(FETCHED_WORKSPACE_PROJECTS, (event, projects) => {\n  //   appState.project.isFetching = false;\n  //   appState.project.projects = projects;\n  //   // Update mobx state on projects, useful for updating the components after deleting/renaming etc.\n  //   if (appState.project.currentProject !== null) {\n  //     // There is a project currently selected (showing in a ProjectDetailDialog etc.)\n  //     // This fetch needs to update the dialog also\n  //     const temp = appState.project.projects.filter((project) => {\n  //       return project.projectPath === appState.project.currentProject.projectPath;\n  //     });\n  //     if (temp.length === 1) {\n  //       appState.project.currentProject = temp[0];\n  //     } else {\n  //       appState.project.currentProject = null;\n  //     }\n      \n  //   }\n  // });\n\n  // ipcRenderer.on(CHANGED_WORKSPACE_FOLDER, (events, newWorkspaceDirectory) => {\n  //   appState.preferences.workspacePath = newWorkspaceDirectory;\n  //   appState.preferences.saveUserConfig();\n  // });\n\n  // ipcRenderer.on(MENU_NEW_PROJECT, () => {\n  //   appState.project.isNewProjectDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_LOAD, () => {\n  //   appState.preferences.openDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_IMPORT_CSV, () => {\n  //   appState.import.dialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE, () => {\n  //   // Original implementation for opening a traditional system-level save file dialog\n  //   // ipcRenderer.send(SAVE_GRAPH_STATE, appState.graph.saveImmediateStates());\n    \n  //   // New implementation opening a dialog that saves snapshot to project\n  //   appState.project.isSaveSnapshotDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE_TO_PROJECT, () => {\n  //   requestSaveSnapshot();\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_SQLITE, requestSaveSQLite);\n}\n\nexport function requestLoadSQLite() {\n  ipcRenderer.send(LOAD_GRAPH_SQLITE);\n}\n\nexport function addNode(node_id) {\n  ipcRenderer.send(ADD_NODE, node_id);\n}\n\nexport function requestNeighbors(\n  node_id,\n  attr = 'degree',\n  num = '10',\n  order = 'desc',\n) {\n  ipcRenderer.send(GET_NEIGHBORS, node_id, attr, num, order);\n}\n\nfunction requestSaveSQLite() {\n  ipcRenderer.send(\n    SAVE_GRAPH_SQLITE,\n    JSON.stringify({\n      graph: toJS(appState.graph.rawGraph),\n      metadata: toJS(appState.graph.metadata),\n      nodes: toJS(appState.graph.nodes),\n      overrides: toJS(demapify(appState.graph.overrides)),\n      nodePositions: appState.graph.frame.getPositions(),\n    }),\n  );\n}\n\nexport function requestChooseNodeFile(hasHeader) {\n  ipcRenderer.send(CHOOSE_NODE_FILE, hasHeader);\n}\n\nexport function requestChooseEdgeFile(hasHeader) {\n  ipcRenderer.send(CHOOSE_EDGE_FILE, hasHeader);\n}\n\nexport function requestChooseGraphFile() {\n  ipcRenderer.send(CHOOSE_GRAPH_FILE);\n}\n\nexport function requestChooseStateFile() {\n  ipcRenderer.send(CHOOSE_STATE_FILE);\n}\n\nexport function requestOpen() {\n  ipcRenderer.send(\n    OPEN_GRAPH,\n    appState.import.graphFile,\n    appState.import.stateFile,\n  );\n}\n\n// Request to delete a file specified at filePath\nexport function requestDelete(filePath) {\n  ipcRenderer.send(DELETE_FILE, filePath);\n}\n\n/**\n * Request to rename a file specified at filePath\n * @param filePath where the file to be renamed is located\n * @param newName new file name with extension\n */\nexport function requestRename(filePath, newName) {\n  ipcRenderer.send(RENAME_FILE, filePath, newName);\n}\n\nexport function requestSaveSnapshot(snapshotName) {\n  if (!snapshotName) {\n    // Default: Use the currently opened snapshot name (if no snapshot opened, the default name in the ProjectStore will be used)\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, appState.project.currentSnapshotName);\n  } else {\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, snapshotName);\n  }\n}\n\nexport function requestImportGraphFromCSV(hasNodeFile, delimiter, newProjectName) {\n  if (!newProjectName) {\n    newProjectName = 'Test Project';\n  }\n  appState.import.loading = true;\n  const importConfig = {\n    hasNodeFile,\n    nodes: {\n      path: appState.import.importConfig.nodeFile.path,\n      hasColumns: appState.import.importConfig.nodeFile.hasColumns,\n      columns: toJS(appState.import.importConfig.nodeFile.columns),\n      mapping: toJS(appState.import.importConfig.nodeFile.mapping),\n    },\n    edges: {\n      path: appState.import.importConfig.edgeFile.path,\n      hasColumns: appState.import.importConfig.edgeFile.hasColumns,\n      columns: toJS(appState.import.importConfig.edgeFile.columns),\n      mapping: toJS(appState.import.importConfig.edgeFile.mapping),\n      createMissing: appState.import.importConfig.edgeFile.createMissing,\n    },\n    delimiter,\n    newProjectName\n  };\n  // console.log(importConfig);\n  ipcRenderer.send(IMPORT_GRAPH, importConfig);\n\n  // TODO: Potentially separate this out to web worker.\n  importGraphFromCSV(importConfig).then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.dialogOpen = false;\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n}\n\nexport function requestCreateEmptyPaperGraph(newProjectName) {\n  if (!newProjectName) {\n    newProjectName = 'Test Project';\n  }\n  appState.import.loading = true;\n\n  // TODO: Potentially separate this out to web worker.\n  createEmptyPaperGraph().then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      // appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    \n    // appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.dialogOpen = false;\n\n    appState.preferences.currentEmptyGraphDoNotDisplayLegend = true;\n    appState.graph.nodesShowingLabels = [];\n\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    // appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n\n}\n\nasync function createEmptyPaperGraph() {\n  // Since the CSV lib we use uses int index when there's not header/column names specified\n  // but the frontend selector always convert int to string values, we need to\n  // manually convert the user-selected fromId and toId values back to int.\n  // Note that this should only be done when there's no header provided on the CSV (hasColumns == false).\n  // const fromId = config.nodes.hasColumns ? config.edges.mapping.fromId : parseInt(config.edges.mapping.fromId);\n  // const toId = config.nodes.hasColumns ? config.edges.mapping.toId : parseInt(config.edges.mapping.toId);\n\n  // Create temporary data structures.\n  let nodesArr = [];\n  let graph = createGraph();\n  let degreeDict = {};\n\n  let edgesArr = [];\n  \n  let rank = pageRank(graph);\n  let nodesData = {}; \n\n  appState.graph.preprocessedRawGraph = {graph: graph, degreeDict: degreeDict, nodesPanelData: nodesData};\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id], paperName: n.paperName, paperAbstract: n.paperAbstract, \n    authors: n.authors, citationCount: n.citationCount, url: n.url}));\n\n\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: 0,\n      fullEdges: 0, //Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: [\"id\", \"degree\", \"pagerank\", \"paperName\", \"paperAbstract\", \"authors\", \"citationCount\", \"venue\", \"year\", \"url\", \"node_id\"],\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n      snapshotId: `f${Math.round(Math.random() * 10000000, 0)}`\n    },\n  }\n}\n\nexport function requestImportGraphFromGexf() {\n  importGraphFromGexf().then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.gexfDialogOpen = false;\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n}\n\nasync function readCSV(fileObject, hasHeader, delimiter) {\n  const file = fileObject;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  return new Promise((resolve, reject) => {\n    reader.onload = () => {\n      const content = reader.result;\n      try {\n        if (hasHeader) {\n          resolve(parse(content, {\n            comment: \"#\",\n            trim: true,\n            auto_parse: true,\n            skip_empty_lines: true,\n            columns: hasHeader,\n            delimiter\n          }));\n        }\n        resolve(parse(content, {\n          comment: \"#\",\n          trim: true,\n          auto_parse: true,\n          skip_empty_lines: true,\n          columns: undefined,\n          delimiter\n        }));\n      } catch(err) {\n        let msg =  err.message\n        let mismatch = msg.indexOf(\"Invalid Record Length:\") == 0\n        if (mismatch) {\n          msg = msg.replace(\"is\", \"set to\")\n          msg = msg.replace(\"got\", \"but detected\")\n        } \n        toaster.show({\n          message: \"Error: \" + msg,\n          intent: Intent.DANGER,\n          timeout: -1\n      });\n        appState.import.loading = false;\n      }\n    }\n  });\n}\n\nasync function parseGEXF(content) {\n  const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(content,\"text/xml\");\n      const xmlEdges = xmlDoc.getElementsByTagName('edge');\n      const xmlNodes = xmlDoc.getElementsByTagName('node');\n      const xmlAttri = xmlDoc.getElementsByTagName('attributes')\n      \n      let nodeAttri = [];\n      let edgeAttri = [];\n      const edgesArr = [];\n      const nodesArr = [];\n      const nodeAttriOrdered = {};\n      \n      for (let i = 0, l = xmlAttri.length; i < l; i++) {\n        const curr = xmlAttri[i];\n        if (curr.getAttribute('class') === 'node') {\n          nodeAttri = curr.getElementsByTagName('attribute');\n        }\n        else if (curr.getAttribute('class') === 'edge') {\n          edgeAttri = curr.getElementsByTagName('attribute');\n        }\n      }\n      \n      for (let i = 0, l = nodeAttri.length; i < l; i++) {\n        const curr = nodeAttri[i];\n        nodeAttriOrdered[curr.getAttribute(\"id\")] = curr.getAttribute(\"title\");\n      }\n\n      for (let i = 0, l = xmlEdges.length; i < l; i++) {\n        const currEdge = xmlEdges[i];\n        const s = currEdge.getAttribute('source').toString();\n        const t = currEdge.getAttribute('target').toString();\n        edgesArr.push({\n          source_id: s,\n          target_id: t,\n        });\n      }\n      for (let i = 0, l = xmlNodes.length; i < l; i++) {\n        const currNode = xmlNodes[i];\n        const id = currNode.getAttribute('id').toString();\n        const nodeAttvalues = currNode.getElementsByTagName(\"attvalues\");\n        const nodeAttvalue = [];\n        if (nodeAttvalues.length != 0) {\n          nodeAttvalue = nodeAttvalues[0].getElementsByTagName(\"attvalue\");\n        }\n        let node = { id: id, degree: 0, pagerank: 0, node_id: id};\n        for (let j = 0; j < nodeAttvalue.length; j++){\n          const value = nodeAttvalue[j].attributes[\"value\"].value;\n          const attributeIdElementAttribute = nodeAttvalue[j].attributes[\"for\"] || nodeAttvalue[j].attributes[\"id\"];\n          const attributeId = attributeIdElementAttribute.value;\n          node[nodeAttriOrdered[attributeId]] = value;\n        }\n        for (let j = 0; j < currNode.attributes.length; j++) {\n          const currAttri = currNode.attributes[j];\n            node[currAttri.name] = currAttri.value;\n        }\n        node[\"id\"] = id;\n        node[\"node_id\"] = id;\n        nodesArr.push(node);\n      }\n      return [nodesArr, edgesArr];\n}\n\nasync function readGEXF(fileObject) {\n  const file = fileObject;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  \n  return new Promise((resolve, reject) => {\n      reader.onload = () => {\n      const content = reader.result;\n      resolve(parseGEXF(content));\n    }\n  });\n}\n\nasync function importGraphFromCSV(config) {\n  // Since the CSV lib we use uses int index when there's not header/column names specified\n  // but the frontend selector always convert int to string values, we need to\n  // manually convert the user-selected fromId and toId values back to int.\n  // Note that this should only be done when there's no header provided on the CSV (hasColumns == false).\n  const fromId = config.nodes.hasColumns ? config.edges.mapping.fromId : parseInt(config.edges.mapping.fromId);\n  const toId = config.nodes.hasColumns ? config.edges.mapping.toId : parseInt(config.edges.mapping.toId);\n\n  // Create temporary data structures.\n  let nodesArr = [];\n  const graph = createGraph();\n  const degreeDict = {};\n  if (config.hasNodeFile) {\n    nodesArr = await readCSV(appState.import.selectedNodeFileFromInput, config.nodes.hasColumns, config.delimiter);\n    nodesArr.forEach(node => graph.addNode(node[config.nodes.mapping.id].toString(),\n      { id: node[config.nodes.mapping.id].toString(), degree: 0, ...node }));\n    nodesArr =\n      nodesArr.map(\n        n => ({ ...n, id: n[config.nodes.mapping.id].toString(), degree: 0, pagerank: 0 }));\n    nodesArr.forEach(n => degreeDict[n.id] = 0);\n  }\n  const edges = await readCSV(appState.import.selectedEdgeFileFromInput, config.edges.hasColumns, config.delimiter);\n  if (config.edges.createMissing) {\n    edges.forEach((it) => {\n      const from = it[fromId].toString();\n      const to = it[toId].toString();\n      if (!graph.hasNode(from)) {\n        graph.addNode(from, { id: from, degree: 0 });\n        nodesArr.push({ id: from, degree: 0, pagerank: 0 });\n        degreeDict[from] = 0;\n      }\n      if (!graph.hasNode(to)) {\n        graph.addNode(to, { id: to, degree: 0 });\n        nodesArr.push({ id: to, degree: 0, pagerank: 0 });\n        degreeDict[to] = 0;\n      }\n    });\n  }\n\n  const edgesSet = new Set();\n  \n  const edgesArr = [];\n\n  const addEdge = (from, to) => {\n    const edgeKey = `${from}👉${to}`;\n    if (edgesSet.has(edgeKey)) {\n      return;\n    }\n    edgesSet.add(edgeKey);\n    graph.addLink(from, to);\n    degreeDict[from] += 1;\n    degreeDict[to] += 1;\n    edgesArr.push({\n      source_id: from,\n      target_id: to,\n    });\n  };\n  \n  edges.forEach(it => {\n    const from = it[fromId].toString();\n    const to = it[toId].toString();\n    // Argo currently works with undirected graph\n    addEdge(from, to);\n    // addEdge(to, from);\n  });\n\n  const rank = pageRank(graph);\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: nodesArr.length,\n      fullEdges: edgesArr.length, //Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: Object.keys(nodesArr[0]),\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n    },\n  }\n}\n\nexport async function importGraphFromGexf() {\n  const gexfParsed = await readGEXF(appState.import.selectedGexfFileFromInput);\n  let nodesArr = gexfParsed[0];\n  const edges = gexfParsed[1];\n  const graph = createGraph();\n  const degreeDict = {};\n\n  nodesArr.forEach((it) => {\n    const currNode = it[\"id\"].toString();\n    if (!graph.hasNode(currNode)) {\n      graph.addNode(currNode, it);\n      degreeDict[currNode] = 0;\n    }\n  });\n\n  const edgesSet = new Set();\n  \n  const edgesArr = [];\n\n  const addEdge = (from, to) => {\n    const edgeKey = `${from}👉${to}`;\n    if (edgesSet.has(edgeKey)) {\n      return;\n    }\n    edgesSet.add(edgeKey);\n    graph.addLink(from, to);\n    degreeDict[from] += 1;\n    degreeDict[to] += 1;\n    edgesArr.push({\n      source_id: from,\n      target_id: to,\n    });\n  };\n  \n  edges.forEach(it => {\n    const from = it[\"source_id\"].toString();\n    const to = it[\"target_id\"].toString();\n\n    // Argo currently works with undirected graph\n    addEdge(from, to);\n    // addEdge(to, from);\n  });\n\n  const rank = pageRank(graph);\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: nodesArr.length,\n      fullEdges: edgesArr.length, //Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: Object.keys(nodesArr[0]),\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n    },\n  }\n}\n\nexport function runSearch(searchStr) {\n  ipcRenderer.send(SEARCH_REQUEST, searchStr, appState.graph.searchOrder);\n}\n\nexport function fetchWorkspaceProjects() {\n  ipcRenderer.send(FETCH_WORKSPACE_PROJECTS);\n}\n\nexport function requestCreateNewProject(projectMetadata) {\n  ipcRenderer.send(CREATE_NEW_PROJECT, projectMetadata);\n}\n\nexport function requestOpenWorkspaceFolder() {\n  ipcRenderer.send(SHOW_WORKSPACE_FOLDER);\n}\n\nexport function requestLoadUserConfig() {\n  ipcRenderer.send(LOAD_USER_CONFIG);\n}\n\nexport function requestSaveUserConfig(userConfig) {\n  ipcRenderer.send(SAVE_USER_CONFIG, userConfig);\n}\n\nexport function requestChangeWorkspace() {\n  ipcRenderer.send(CHANGE_WORKSPACE_FOLDER);\n}","import { Position, Toaster } from \"@blueprintjs/core\";\n\nexport const toaster = Toaster.create({\n  position: Position.BOTTOM\n});\n\nexport default toaster;\n","var $ = require(\"jquery\");\nfunction Edge(source, target) {\n  this.source = source;\n  this.target = target;\n  this.renderData = {};\n}\n\nfunction Node(id, size = 0.5) {\n  this.id = id;\n  this.index = id;\n  this.in = [];\n  this.out = [];\n  this.size = size;\n  this.renderData = {};\n  this.domainData = {};\n  this.x = 1;\n  this.y = 1;\n  this.vx = 1;\n  this.vy = 1;\n\n  /**\n   * Tells if a node is connected to a node of a certain id\n   */\n  this.connectedTo = function(id) {\n    outNodeIds = this.out.map(function(outNode) {\n      return outNode.id;\n    });\n    return $.inArray(id, outNodeIds) >= 0;\n  };\n}\n\nNode.prototype.connectNode = function(node) {\n  if (!this.connectedTo(node.id)) {\n    this.out.push(node);\n    return true;\n  }\n  return false;\n};\n\nexports.Edge = Edge;\nexports.Node = Node;\n","var THREE = require(\"three\");\n\nTHREE.MeshLine = function() {\n  this.positions = [];\n\n  this.previous = [];\n  this.next = [];\n  this.side = [];\n  this.width = [];\n  this.indices_array = [];\n  this.uvs = [];\n  this.counters = [];\n  this.geometry = new THREE.BufferGeometry();\n\n  this.widthCallback = null;\n};\n\nTHREE.MeshLine.prototype.setGeometry = function(g, c) {\n  this.widthCallback = c;\n\n  this.positions = [];\n  this.counters = [];\n\n  if (g instanceof THREE.Geometry) {\n    for (var j = 0; j < g.vertices.length; j++) {\n      var v = g.vertices[j];\n      var c = j / g.vertices.length;\n      this.positions.push(v.x, v.y, v.z);\n      this.positions.push(v.x, v.y, v.z);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n  }\n\n  if (g instanceof THREE.BufferGeometry) {\n    // read attribute positions ?\n  }\n\n  if (g instanceof Float32Array || g instanceof Array) {\n    for (var j = 0; j < g.length; j += 3) {\n      var c = j / g.length;\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n  }\n\n  this.process();\n};\n\nTHREE.MeshLine.prototype.compareV3 = function(a, b) {\n  var aa = a * 6;\n  var ab = b * 6;\n  return (\n    this.positions[aa] === this.positions[ab] &&\n    this.positions[aa + 1] === this.positions[ab + 1] &&\n    this.positions[aa + 2] === this.positions[ab + 2]\n  );\n};\n\nTHREE.MeshLine.prototype.copyV3 = function(a) {\n  var aa = a * 6;\n  return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\n};\n\nTHREE.MeshLine.prototype.process = function() {\n  var l = this.positions.length / 6;\n\n  this.previous = [];\n  this.next = [];\n  this.side = [];\n  this.width = [];\n  this.indices_array = [];\n  this.uvs = [];\n\n  for (var j = 0; j < l; j++) {\n    this.side.push(1);\n    this.side.push(-1);\n  }\n\n  var w;\n  for (var j = 0; j < l; j++) {\n    if (this.widthCallback) w = this.widthCallback(j / (l - 1));\n    else w = 1;\n    this.width.push(w);\n    this.width.push(w);\n  }\n\n  for (var j = 0; j < l; j++) {\n    this.uvs.push(j / (l - 1), 0);\n    this.uvs.push(j / (l - 1), 1);\n  }\n\n  var v;\n\n  if (this.compareV3(0, l - 1)) {\n    v = this.copyV3(l - 2);\n  } else {\n    v = this.copyV3(0);\n  }\n  this.previous.push(v[0], v[1], v[2]);\n  this.previous.push(v[0], v[1], v[2]);\n  for (var j = 0; j < l - 1; j++) {\n    v = this.copyV3(j);\n    this.previous.push(v[0], v[1], v[2]);\n    this.previous.push(v[0], v[1], v[2]);\n  }\n\n  for (var j = 1; j < l; j++) {\n    v = this.copyV3(j);\n    this.next.push(v[0], v[1], v[2]);\n    this.next.push(v[0], v[1], v[2]);\n  }\n\n  if (this.compareV3(l - 1, 0)) {\n    v = this.copyV3(1);\n  } else {\n    v = this.copyV3(l - 1);\n  }\n  this.next.push(v[0], v[1], v[2]);\n  this.next.push(v[0], v[1], v[2]);\n\n  for (var j = 0; j < l - 1; j++) {\n    var n = j * 2;\n    this.indices_array.push(n, n + 1, n + 2);\n    this.indices_array.push(n + 2, n + 1, n + 3);\n  }\n\n  if (!this.attributes) {\n    this.attributes = {\n      position: new THREE.BufferAttribute(new Float32Array(this.positions), 3),\n      previous: new THREE.BufferAttribute(new Float32Array(this.previous), 3),\n      next: new THREE.BufferAttribute(new Float32Array(this.next), 3),\n      side: new THREE.BufferAttribute(new Float32Array(this.side), 1),\n      width: new THREE.BufferAttribute(new Float32Array(this.width), 1),\n      uv: new THREE.BufferAttribute(new Float32Array(this.uvs), 2),\n      index: new THREE.BufferAttribute(new Uint16Array(this.indices_array), 1),\n      counters: new THREE.BufferAttribute(new Float32Array(this.counters), 1)\n    };\n  } else {\n    this.attributes.position.copyArray(new Float32Array(this.positions));\n    this.attributes.position.needsUpdate = true;\n    this.attributes.previous.copyArray(new Float32Array(this.previous));\n    this.attributes.previous.needsUpdate = true;\n    this.attributes.next.copyArray(new Float32Array(this.next));\n    this.attributes.next.needsUpdate = true;\n    this.attributes.side.copyArray(new Float32Array(this.side));\n    this.attributes.side.needsUpdate = true;\n    this.attributes.width.copyArray(new Float32Array(this.width));\n    this.attributes.width.needsUpdate = true;\n    this.attributes.uv.copyArray(new Float32Array(this.uvs));\n    this.attributes.uv.needsUpdate = true;\n    this.attributes.index.copyArray(new Uint16Array(this.indices_array));\n    this.attributes.index.needsUpdate = true;\n  }\n\n  this.geometry.addAttribute(\"position\", this.attributes.position);\n  this.geometry.addAttribute(\"previous\", this.attributes.previous);\n  this.geometry.addAttribute(\"next\", this.attributes.next);\n  this.geometry.addAttribute(\"side\", this.attributes.side);\n  this.geometry.addAttribute(\"width\", this.attributes.width);\n  this.geometry.addAttribute(\"uv\", this.attributes.uv);\n  this.geometry.addAttribute(\"counters\", this.attributes.counters);\n\n  this.geometry.setIndex(this.attributes.index);\n};\n\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\n  var i;\n\n  src = src.subarray || src.slice ? src : src.buffer;\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\n\n  src = srcOffset\n    ? src.subarray\n      ? src.subarray(srcOffset, length && srcOffset + length)\n      : src.slice(srcOffset, length && srcOffset + length)\n    : src;\n\n  if (dst.set) {\n    dst.set(src, dstOffset);\n  } else {\n    for (i = 0; i < src.length; i++) {\n      dst[i + dstOffset] = src[i];\n    }\n  }\n\n  return dst;\n}\n\n/**\n * Fast method to advance the line by one position.  The oldest position is removed.\n * @param position\n */\nTHREE.MeshLine.prototype.advance = function(position) {\n  var positions = this.attributes.position.array;\n  var previous = this.attributes.previous.array;\n  var next = this.attributes.next.array;\n  var l = positions.length;\n\n  // PREVIOUS\n  memcpy(positions, 0, previous, 0, l);\n\n  // POSITIONS\n  memcpy(positions, 6, positions, 0, l - 6);\n\n  positions[l - 6] = position.x;\n  positions[l - 5] = position.y;\n  positions[l - 4] = position.z;\n  positions[l - 3] = position.x;\n  positions[l - 2] = position.y;\n  positions[l - 1] = position.z;\n\n  // NEXT\n  memcpy(positions, 6, next, 0, l - 6);\n\n  next[l - 6] = position.x;\n  next[l - 5] = position.y;\n  next[l - 4] = position.z;\n  next[l - 3] = position.x;\n  next[l - 2] = position.y;\n  next[l - 1] = position.z;\n\n  this.attributes.position.needsUpdate = true;\n  this.attributes.previous.needsUpdate = true;\n  this.attributes.next.needsUpdate = true;\n};\n\nTHREE.MeshLineMaterial = function(parameters) {\n  var vertexShaderSource = [\n    \"precision highp float;\",\n    \"\",\n    \"attribute vec3 position;\",\n    \"attribute vec3 previous;\",\n    \"attribute vec3 next;\",\n    \"attribute float side;\",\n    \"attribute float width;\",\n    \"attribute vec2 uv;\",\n    \"attribute float counters;\",\n    \"\",\n    \"uniform mat4 projectionMatrix;\",\n    \"uniform mat4 modelViewMatrix;\",\n    \"uniform vec2 resolution;\",\n    \"uniform float lineWidth;\",\n    \"uniform vec3 color;\",\n    \"uniform float opacity;\",\n    \"uniform float near;\",\n    \"uniform float far;\",\n    \"uniform float sizeAttenuation;\",\n    \"\",\n    \"varying vec2 vUV;\",\n    \"varying vec4 vColor;\",\n    \"varying vec3 vPosition;\",\n    \"varying float vCounters;\",\n    \"\",\n    \"vec2 fix( vec4 i, float aspect ) {\",\n    \"\",\n    \"    vec2 res = i.xy / i.w;\",\n    \"    res.x *= aspect;\",\n    \"\t vCounters = counters;\",\n    \"    return res;\",\n    \"\",\n    \"}\",\n    \"\",\n    \"void main() {\",\n    \"\",\n    \"    float aspect = resolution.x / resolution.y;\",\n    \"\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);\",\n    \"\",\n    \"    vColor = vec4( color, opacity );\",\n    \"    vUV = uv;\",\n    \"\",\n    \"    mat4 m = projectionMatrix * modelViewMatrix;\",\n    \"    vec4 finalPosition = m * vec4( position, 1.0 );\",\n    \"    vec4 prevPos = m * vec4( previous, 1.0 );\",\n    \"    vec4 nextPos = m * vec4( next, 1.0 );\",\n    \"\",\n    \"    vec2 currentP = fix( finalPosition, aspect );\",\n    \"    vec2 prevP = fix( prevPos, aspect );\",\n    \"    vec2 nextP = fix( nextPos, aspect );\",\n    \"\",\n    \"\t float pixelWidth = finalPosition.w * pixelWidthRatio;\",\n    \"    float w = 1.8 * pixelWidth * lineWidth * width;\",\n    \"\",\n    \"    if( sizeAttenuation == 1. ) {\",\n    \"        w = 1.8 * lineWidth * width;\",\n    \"    }\",\n    \"\",\n    \"    vec2 dir;\",\n    \"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\n    \"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\n    \"    else {\",\n    \"        vec2 dir1 = normalize( currentP - prevP );\",\n    \"        vec2 dir2 = normalize( nextP - currentP );\",\n    \"        dir = normalize( dir1 + dir2 );\",\n    \"\",\n    \"        vec2 perp = vec2( -dir1.y, dir1.x );\",\n    \"        vec2 miter = vec2( -dir.y, dir.x );\",\n    \"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\n    \"\",\n    \"    }\",\n    \"\",\n    \"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\n    \"    vec2 normal = vec2( -dir.y, dir.x );\",\n    \"    normal.x /= aspect;\",\n    \"    normal *= .5 * w;\",\n    \"\",\n    \"    vec4 offset = vec4( normal * side, 0.0, 1.0 );\",\n    \"    finalPosition.xy += offset.xy;\",\n    \"\",\n    \"\t vPosition = ( modelViewMatrix * vec4( position, 1. ) ).xyz;\",\n    \"    gl_Position = finalPosition;\",\n    \"\",\n    \"}\"\n  ];\n\n  var fragmentShaderSource = [\n    \"#extension GL_OES_standard_derivatives : enable\",\n    \"precision mediump float;\",\n    \"\",\n    \"uniform sampler2D map;\",\n    \"uniform float useMap;\",\n    \"uniform float useDash;\",\n    \"uniform vec2 dashArray;\",\n    \"uniform float visibility;\",\n    \"uniform float alphaTest;\",\n    \"\",\n    \"varying vec2 vUV;\",\n    \"varying vec4 vColor;\",\n    \"varying vec3 vPosition;\",\n    \"varying float vCounters;\",\n    \"\",\n    \"void main() {\",\n    \"\",\n    \"    vec4 c = vColor;\",\n    \"\t if( c.a < alphaTest ) discard;\",\n    \"    if( useMap == 1. ) c *= texture2D( map, vUV );\",\n    \"\t if( useDash == 1. ){\",\n    \"\t \t \",\n    \"\t }\",\n    \"    gl_FragColor = c;\",\n    \"\t gl_FragColor.a *= step(vCounters,visibility);\",\n    \"}\"\n  ];\n\n  function check(v, d) {\n    if (v === undefined) return d;\n    return v;\n  }\n\n  THREE.Material.call(this);\n\n  parameters = parameters || {};\n\n  this.lineWidth = check(parameters.lineWidth, 1);\n  this.map = check(parameters.map, null);\n  this.useMap = check(parameters.useMap, 0);\n  this.color = check(parameters.color, new THREE.Color(0xffffff));\n  this.opacity = check(parameters.opacity, 1);\n  this.resolution = check(parameters.resolution, new THREE.Vector2(1, 1));\n  this.sizeAttenuation = check(parameters.sizeAttenuation, 1);\n  this.near = check(parameters.near, 1);\n  this.far = check(parameters.far, 1);\n  this.dashArray = check(parameters.dashArray, []);\n  this.useDash = this.dashArray !== [] ? 1 : 0;\n  this.visibility = check(parameters.visibility, 1);\n  this.alphaTest = check(parameters.alphaTest, 0);\n\n  var material = new THREE.RawShaderMaterial({\n    uniforms: {\n      lineWidth: { type: \"f\", value: this.lineWidth },\n      map: { type: \"t\", value: this.map },\n      useMap: { type: \"f\", value: this.useMap },\n      color: { type: \"c\", value: this.color },\n      opacity: { type: \"f\", value: this.opacity },\n      resolution: { type: \"v2\", value: this.resolution },\n      sizeAttenuation: { type: \"f\", value: this.sizeAttenuation },\n      near: { type: \"f\", value: this.near },\n      far: { type: \"f\", value: this.far },\n      dashArray: {\n        type: \"v2\",\n        value: new THREE.Vector2(this.dashArray[0], this.dashArray[1])\n      },\n      useDash: { type: \"f\", value: this.useDash },\n      visibility: { type: \"f\", value: this.visibility },\n      alphaTest: { type: \"f\", value: this.alphaTest }\n    },\n    vertexShader: vertexShaderSource.join(\"\\r\\n\"),\n    fragmentShader: fragmentShaderSource.join(\"\\r\\n\")\n  });\n\n  delete parameters.lineWidth;\n  delete parameters.map;\n  delete parameters.useMap;\n  delete parameters.color;\n  delete parameters.opacity;\n  delete parameters.resolution;\n  delete parameters.sizeAttenuation;\n  delete parameters.near;\n  delete parameters.far;\n  delete parameters.dashArray;\n  delete parameters.visibility;\n  delete parameters.alphaTest;\n\n  material.type = \"MeshLineMaterial\";\n\n  material.setValues(parameters);\n\n  return material;\n};\n\nTHREE.MeshLineMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLineMaterial.prototype.constructor = THREE.MeshLineMaterial;\n\nTHREE.MeshLineMaterial.prototype.copy = function(source) {\n  THREE.Material.prototype.copy.call(this, source);\n\n  this.lineWidth = source.lineWidth;\n  this.map = source.map;\n  this.useMap = source.useMap;\n  this.color.copy(source.color);\n  this.opacity = source.opacity;\n  this.resolution.copy(source.resolution);\n  this.sizeAttenuation = source.sizeAttenuation;\n  this.near = source.near;\n  this.far = source.far;\n\n  return this;\n};\n\nexports.MeshLine = THREE.MeshLine;\nexports.MeshLineMaterial = THREE.MeshLineMaterial;\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  self.selectNode = function(node) {\n    self.dragging = node;\n    self.selection = [node];\n    node.renderData.isSelected = true;\n    self.updateSelection(self.mouseX, self.mouseY);\n  };\n\n  /**\n   * Deselect nodes in selection list\n   */\n  self.clearSelection = function() {\n    for (var i = 0; i < self.selection.length; i++) {\n      self.selection[i].renderData.isSelected = false;\n      if (!def.NODE_NO_HIGHLIGHT) {\n        self.selection[i].renderData.draw_object.children[0].visible = false;\n      } else {\n        self.selection[i].renderData.draw_object.material.color.set(\n          new THREE.Color(self.selection[i].renderData.color)\n        );\n      }\n      self.selection[i].renderData.textHolder.children[0].element.hideme = true;\n    }\n    self.selection = [];\n  };\n\n  /**\n   *  Update positions of all objects in self.selection\n   *  based on diff between mouse position and self.dragging position\n   */\n  self.updateSelection = function(mouseX, mouseY, selection) {\n    if (self.dragging) {\n      var diffx = mouseX - self.dragging.x;\n      var diffy = mouseY - self.dragging.y;\n    }\n\n    //'selection' only passed if a single node is double clicked\n    let clickedNode = selection;\n    //if not already pinned, then pin the node upon double-click\n    if(clickedNode && !clickedNode.pinnedx) {\n      clickedNode.pinnedx = true;\n      clickedNode.pinnedy = true;\n    } else if (clickedNode && clickedNode.pinnedx) {\n      //if already pinned, then unpin upon double-click\n      clickedNode.pinnedx = false;\n      clickedNode.pinnedy = false;\n    }\n    \n    for (var i = 0; i < self.selection.length; i++) {\n      if (self.dragging) {\n        self.selection[i].x += diffx;\n        self.selection[i].y += diffy;\n        self.selection[i].fx = self.selection[i].x;\n        self.selection[i].fy = self.selection[i].y;\n        //pins multiple nodes when dragging\n        if(!clickedNode) {\n          self.selection[i].pinnedx = true;\n          self.selection[i].pinnedy = true;\n        }\n      }\n      if (!def.NODE_NO_HIGHLIGHT) {\n        self.selection[i].renderData.draw_object.children[0].visible = true;\n      } else {\n        self.selection[i].renderData.draw_object.material.color.set(\n          new THREE.Color(self.selection[i].renderData.hcolor)\n        );\n      }\n      self.selection[\n        i\n      ].renderData.textHolder.children[0].element.hideme = false;\n    }\n  };\n\n  /**\n   *  Find any objects within the current box selection and add it to self.selection\n   */\n  self.checkSelection = function(mouseX, mouseY) {\n    if (!self.dragging) {\n      self.mouseEnd = new THREE.Vector3(mouseX, mouseY, 0);\n      if (self.mouseStart.x < self.mouseEnd.x) {\n        var left = self.mouseStart;\n        var right = self.mouseEnd;\n      } else {\n        var left = self.mouseEnd;\n        var right = self.mouseStart;\n      }\n\n      self.graph.forEachNode(function(node) {\n        let npos;\n        if (self.options.layout == \"ngraph\") {\n          npos = self.force.getNodePosition(node.id);\n        } else if (self.options.layout == \"d3\") {\n          npos = node;\n        }\n        if (self.insideBox(left, right, npos.x, npos.y)) {\n          self.selection.push(node);\n          //indicates nodes were in selection box \n          //when mouse is lifted\n          //self.multNodesHighlighted = true;\n        }\n      });\n    }\n  };\n\n  /**\n   *  returns true if pos is in box with top left l and bottom right r\n   */\n  self.insideBox = function(l, r, posx, posy) {\n    return (\n      posx < r.x &&\n      posx > l.x &&\n      ((posy > r.y && posy < l.y) || (posy < r.y && posy > l.y))\n    );\n  };\n};","var Frame = require(\"./src/process\").Frame;\n\nexports.Frame = Frame;\n\nvar graph = require(\"ngraph.generators\").balancedBinTree(5);\n\nexports.graph = graph;\n\nif (window) {\n  window.Argo = exports;\n}\n","module.exports = __webpack_public_path__ + \"static/media/argoscholar_logo_dark.4d2f6cdc.svg\";","module.exports = __webpack_public_path__ + \"static/media/argoscholar_logo_light.a7447f19.svg\";","var THREE = require(\"three\");\nvar STATS = require(\"stats.js\");\nwindow.THREE = THREE;\nrequire(\"../include/QuickHull\");\nrequire(\"../include/ConvexGeometry\");\nrequire(\"../include/CSS3DRenderer\");\nvar Edge = require(\"./structure/node\").Edge;\nvar Node = require(\"./structure/node\").Node;\nvar OrbitControls = require(\"../include/OrbitControls\")(THREE); //'three-orbit-controls')(THREE);\nTHREE.MeshLine = require(\"../include/THREE.MeshLine\").MeshLine;\nTHREE.MeshLineMaterial = require(\"../include/THREE.MeshLine\").MeshLineMaterial;\nvar d3 = require(\"d3\");\nvar ee = require(\"event-emitter\");\nvar IS_IFRAME_WIDGET = require(\"../../constants\").IS_IFRAME_WIDGET;\n\nexports.default = {\n  THREE: THREE,\n  STATS: STATS, // stats.js panel for showing fps and other stats.\n  STATS_SHOW: false,\n  Edge: Edge,\n  Node: Node,\n  OrbitControls: OrbitControls,\n  d3: d3,\n  ee: ee,\n  NODE_COLOR: 0x0055aa,\n  NODE_HIGHLIGHT: 0x3498db,\n  ADJACENT_HIGHLIGHT: 0x95a5a6,\n  SEARCH_HIGHLIGHT: 0xe67e22,\n  NODE_HTEXTURE: \"http://i.imgur.com/xzkxSIw.png\",\n  NODE_TEXTURE: \"http://i.imgur.com/reTXqiM.png\",\n  NODE_NO_HTEX: true,\n  NODE_NO_TEX: true,\n  NODE_NO_HCOLOR: false,\n  NODE_NO_COLOR: false,\n  NODE_NO_HIGHLIGHT: false,\n  NODE_NEIGHBOR_HIGHLIGHT: true,\n  NODE_SHAPE: \"square\",\n  NODE_HSHAPE: \"square\",\n  NODE_SIZE: 5,\n  HIGHLIGHT_SIZE: 1.0,\n  LAYOUT: \"d3\",\n  LINES: \"notfancy\",\n  MAP: !IS_IFRAME_WIDGET,\n  MAP_RENDER_PER_NUMBER_OF_FRAME: 10,\n  TEXT_SCALE: true,\n  TEXT_SIZE: 0.07,\n  TEXT_X_OFFSET: 0.52,\n  TEXT_Y_OFFSET: 0.35,\n  TEXT_BACK_COLOR: \"rgba(100, 100, 200, 0)\",\n  TEXT_OPACITY: \"1\",\n  TEXT_WIREFRAME: false,\n  PIN_COLOR: 0xffffff\n};\n","var def = require(\"./imports\").default;\nconst spawn = require(\"threads\").spawn;\nvar THREE = def.THREE;\nvar STATS = def.STATS;\nvar STATS_SHOW = def.STATS_SHOW;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nvar Frame = function (graph, options) {\n  // Needed to reference \"this\" in functions\n  var self = this;\n  appState.graph.process = this;\n  // Options\n  this.inGraph = graph;\n  this.options = options || {\n    layout: def.LAYOUT\n  };\n  this.layout_options = this.options.graphLayout || {};\n\n  this.lineObjects = [];\n  this.lineIndices = [];\n  this.MAX_LINES = 100000;\n  this.textureLoader = new THREE.TextureLoader();\n  this.textureLoader.crossOrigin = true;\n  this.oldIntersect = -1;\n  this.selection = [];\n  this.fov = 60;\n  this.near = 1;\n  this.far = 5000;\n  this.mouseStart = new THREE.Vector3(0, 0, 0);\n  this.mouseEnd = new THREE.Vector3(0, 0, 0);\n  this.dragging = null;\n  this.showBox = false;\n  this.renderWidth = 1000;\n  this.renderHeight = 1000;\n  this.maxZoom = 1000;\n  this.paused = false;\n  this.mouseDown = false;\n  this.ee = ee({});\n  this.layoutInit = true;\n  this.labelSize = 6;\n  this.relativeFontSize = 1;\n  this.mapShowing = def.MAP;\n  this.mapRenderPerNumberOfFrame = def.MAP_RENDER_PER_NUMBER_OF_FRAME;\n  this.darkMode = false;\n  this.lastNode = null;\n  this.rightClickedNode = null;\n  this.doHighlightNeighbors = def.NODE_NEIGHBOR_HIGHLIGHT;\n  this.prevHighlights = [];\n  this.hull = null;\n\n  require(\"./utils/utils\")(this);\n  require(\"./setup\")(this);\n  require(\"./addremove\")(this);\n  require(\"./highlighting\")(this);\n  require(\"./select\")(this);\n  require(\"./mouse\")(this);\n  require(\"./modify\")(this);\n  require(\"./draw\")(this);\n  require(\"./api\")(this);\n  require(\"./update\")(this);\n\n  /**\n   *  Starting point, run once to create scene\n   */\n  let stats = new STATS();\n  this.display = function () {\n    if (STATS_SHOW) {\n      stats.showPanel(0); // show fps panel\n      document.body.appendChild(stats.dom);\n    }\n    this.animate();\n  };\n\n  /**\n   *  Creates loop called on every animation frame\n   */\n\n  let fps = 30;\n  // let now;\n  // let then = Date.now();\n  // let interval = 1000 / fps;\n  // let delta;\n  this.animate = function () {\n    if (STATS_SHOW) {\n      stats.begin(); // Begin stats.js panel timing\n    }\n\n    self.controls.update();\n    self.render();\n\n    if (STATS_SHOW) {\n      stats.end(); // End stats.js panel timing\n    }\n\n    // now = Date.now();\n    // delta = now - then;\n    // if (delta > interval) {\n    //   then = now;\n    //   self.controls.update();\n    //   self.render();\n    // }\n    requestAnimationFrame(self.animate);\n  };\n\n  /**\n   *  Set initial properties\n   */\n  this.init = function (aa = true) {\n    self.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: aa,\n      preserveDrawingBuffer: true,\n    });\n    self.minimapRenderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: aa,\n      preserveDrawingBuffer: true,\n    });\n    //self.renderer.setPixelRatio(window.devicePixelRatio);\n    //self.renderer.setPixelRatio(0.1);\n    self.setDisplayParams();\n    self.setRendererParams();\n\n    self.setupCamera();\n    self.setupMinimap();\n    self.setupGeometry();\n    self.setupSelect();\n\n    // Make sure to clear children before setting up new frame.\n    self.element.innerHTML = \"\";\n    self.element.appendChild(self.renderer.domElement);\n    self.element.appendChild(self.cssRenderer.domElement);\n    self.element.appendChild(self.minimapRenderer.domElement);\n\n    self.setupLayout();\n\n    self.setupGraph();\n\n    window.addEventListener(\n      \"resize\",\n      function (e) {\n        e.preventDefault();\n        self.onWindowResize();\n      },\n      false\n    );\n  };\n\n  /**\n   * Change camera on window resize\n   */\n  self.onWindowResize = function () {\n    self.clientRect = self.element.getBoundingClientRect();\n    self.width = self.clientRect.width;\n    self.height = self.clientRect.height;\n    self.minimap.width = 0.2 * self.height;\n    self.minimap.height = 0.2 * self.height;\n    self.aspect = self.width / self.height;\n    self.ccamera.aspect = self.aspect;\n    self.ccamera.updateProjectionMatrix();\n\n    self.renderer.setSize(self.width, self.height);\n    self.cssRenderer.setSize(self.width, self.height);\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\n  };\n\n  /**\n   *  Draws graphics\n   */\n  var stage = 0;\n  var numberOfFrameSinceMiniMapRerender = 1;\n  this.render = function () {\n    if (self.graph.getNodesCount() != 0) {\n      appState.preferences.currentEmptyGraphDoNotDisplayLegend = false;\n    }\n\n    self.updateCamera();\n    self.updateNodes();\n\n    if (stage == 1) {\n      self.updateEdges();\n      self.updateLabels();\n      stage = 0;\n    }\n    stage += 1;\n    numberOfFrameSinceMiniMapRerender += 1;\n    if (self.options.layout == \"d3\") {\n      if (self.layoutInit == true) {\n        var nodes = [];\n        self.graph.forEachNode(function (node) {\n          nodes.push(node);\n        });\n        self.force.nodes(nodes);\n        self.force.force(\"link\", d3.forceLink(self.lineIndices));\n        self.force.restart();\n        self.force.stop();\n        if (self.tickToStatic && !self.paused) {\n          // We don't tick and pause for now\n          for (\n            var i = 0,\n            n = Math.ceil(\n              Math.log(self.force.alphaMin()) /\n              Math.log(1 - self.force.alphaDecay())\n            );\n            i < n;\n            ++i\n          ) {\n            self.force.tick();\n          }\n          //self.pauseLayout();\n        }\n        self.layoutInit = false;\n      }\n    }\n    self.renderer.setViewport(0, 0, self.width, self.height);\n    self.renderer.setScissor(0, 0, self.width, self.height);\n    self.renderer.setScissorTest(true);\n    self.renderer.render(self.scene, self.ccamera);\n    self.cssRenderer.render(self.scene, self.ccamera);\n\n    // Render MiniMap at a lower framerate.\n    if (numberOfFrameSinceMiniMapRerender >= this.mapRenderPerNumberOfFrame) {\n      numberOfFrameSinceMiniMapRerender = 0;\n\n      if (self.mapShowing) {\n        self.minimap.width = 0.2 * self.height;\n        self.minimap.height = 0.2 * self.height;\n        self.minimapRenderer.setViewport(0, 0, self.minimap.width, self.minimap.height);\n        self.minimapRenderer.setScissor(0, 0, self.minimap.width, self.minimap.height);\n        self.minimapRenderer.setScissorTest(true);\n        self.minimapRenderer.render(self.scene, self.minimap.camera);\n      }\n    }\n  };\n};\n\nexports.Frame = Frame;","/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\n *\n */\n\n(function() {\n  var Visible = 0;\n  var Deleted = 1;\n\n  function QuickHull() {\n    this.tolerance = -1;\n\n    this.faces = []; // the generated faces of the convex hull\n    this.newFaces = []; // this array holds the faces that are generated within a single iteration\n\n    // the vertex lists work as follows:\n    //\n    // let 'a' and 'b' be 'Face' instances\n    // let 'v' be points wrapped as instance of 'Vertex'\n    //\n    //     [v, v, ..., v, v, v, ...]\n    //      ^             ^\n    //      |             |\n    //  a.outside     b.outside\n    //\n    this.assigned = new VertexList();\n    this.unassigned = new VertexList();\n\n    this.vertices = []; // vertices of the hull (internal representation of given geometry data)\n  }\n\n  Object.assign(QuickHull.prototype, {\n    setFromPoints: function(points) {\n      if (Array.isArray(points) !== true) {\n        console.error(\"THREE.QuickHull: Points parameter is not an array.\");\n      }\n\n      if (points.length < 4) {\n        console.error(\n          \"THREE.QuickHull: The algorithm needs at least four points.\"\n        );\n      }\n\n      this.makeEmpty();\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        this.vertices.push(new VertexNode(points[i]));\n      }\n\n      this.compute();\n\n      return this;\n    },\n\n    setFromObject: function(object) {\n      var points = [];\n\n      object.updateMatrixWorld(true);\n\n      object.traverse(function(node) {\n        var i, l, point;\n\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.isGeometry) {\n            var vertices = geometry.vertices;\n\n            for (i = 0, l = vertices.length; i < l; i++) {\n              point = vertices[i].clone();\n              point.applyMatrix4(node.matrixWorld);\n\n              points.push(point);\n            }\n          } else if (geometry.isBufferGeometry) {\n            var attribute = geometry.attributes.position;\n\n            if (attribute !== undefined) {\n              for (i = 0, l = attribute.count; i < l; i++) {\n                point = new THREE.Vector3();\n\n                point\n                  .fromBufferAttribute(attribute, i)\n                  .applyMatrix4(node.matrixWorld);\n\n                points.push(point);\n              }\n            }\n          }\n        }\n      });\n\n      return this.setFromPoints(points);\n    },\n\n    makeEmpty: function() {\n      this.faces = [];\n      this.vertices = [];\n\n      return this;\n    },\n\n    // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n\n    addVertexToFace: function(vertex, face) {\n      vertex.face = face;\n\n      if (face.outside === null) {\n        this.assigned.append(vertex);\n      } else {\n        this.assigned.insertBefore(face.outside, vertex);\n      }\n\n      face.outside = vertex;\n\n      return this;\n    },\n\n    // Removes a vertex from the 'assigned' list of vertices and from the given face\n\n    removeVertexFromFace: function(vertex, face) {\n      if (vertex === face.outside) {\n        // fix face.outside link\n\n        if (vertex.next !== null && vertex.next.face === face) {\n          // face has at least 2 outside vertices, move the 'outside' reference\n\n          face.outside = vertex.next;\n        } else {\n          // vertex was the only outside vertex that face had\n\n          face.outside = null;\n        }\n      }\n\n      this.assigned.remove(vertex);\n\n      return this;\n    },\n\n    // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\n\n    removeAllVerticesFromFace: function(face) {\n      if (face.outside !== null) {\n        // reference to the first and last vertex of this face\n\n        var start = face.outside;\n        var end = face.outside;\n\n        while (end.next !== null && end.next.face === face) {\n          end = end.next;\n        }\n\n        this.assigned.removeSubList(start, end);\n\n        // fix references\n\n        start.prev = end.next = null;\n        face.outside = null;\n\n        return start;\n      }\n    },\n\n    // Removes all the visible vertices that 'face' is able to see\n\n    deleteFaceVertices: function(face, absorbingFace) {\n      var faceVertices = this.removeAllVerticesFromFace(face);\n\n      if (faceVertices !== undefined) {\n        if (absorbingFace === undefined) {\n          // mark the vertices to be reassigned to some other face\n\n          this.unassigned.appendChain(faceVertices);\n        } else {\n          // if there's an absorbing face try to assign as many vertices as possible to it\n\n          var vertex = faceVertices;\n\n          do {\n            // we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\n            // will be changed by upcoming method calls\n\n            var nextVertex = vertex.next;\n\n            var distance = absorbingFace.distanceToPoint(vertex.point);\n\n            // check if 'vertex' is able to see 'absorbingFace'\n\n            if (distance > this.tolerance) {\n              this.addVertexToFace(vertex, absorbingFace);\n            } else {\n              this.unassigned.append(vertex);\n            }\n\n            // now assign next vertex\n\n            vertex = nextVertex;\n          } while (vertex !== null);\n        }\n      }\n\n      return this;\n    },\n\n    // Reassigns as many vertices as possible from the unassigned list to the new faces\n\n    resolveUnassignedPoints: function(newFaces) {\n      if (this.unassigned.isEmpty() === false) {\n        var vertex = this.unassigned.first();\n\n        do {\n          // buffer 'next' reference, see .deleteFaceVertices()\n\n          var nextVertex = vertex.next;\n\n          var maxDistance = this.tolerance;\n\n          var maxFace = null;\n\n          for (var i = 0; i < newFaces.length; i++) {\n            var face = newFaces[i];\n\n            if (face.mark === Visible) {\n              var distance = face.distanceToPoint(vertex.point);\n\n              if (distance > maxDistance) {\n                maxDistance = distance;\n                maxFace = face;\n              }\n\n              if (maxDistance > 1000 * this.tolerance) break;\n            }\n          }\n\n          // 'maxFace' can be null e.g. if there are identical vertices\n\n          if (maxFace !== null) {\n            this.addVertexToFace(vertex, maxFace);\n          }\n\n          vertex = nextVertex;\n        } while (vertex !== null);\n      }\n\n      return this;\n    },\n\n    // Computes the extremes of a simplex which will be the initial hull\n\n    computeExtremes: function() {\n      var min = new THREE.Vector3();\n      var max = new THREE.Vector3();\n\n      var minVertices = [];\n      var maxVertices = [];\n\n      var i, l, j;\n\n      // initially assume that the first vertex is the min/max\n\n      for (i = 0; i < 3; i++) {\n        minVertices[i] = maxVertices[i] = this.vertices[0];\n      }\n\n      min.copy(this.vertices[0].point);\n      max.copy(this.vertices[0].point);\n\n      // compute the min/max vertex on all six directions\n\n      for (i = 0, l = this.vertices.length; i < l; i++) {\n        var vertex = this.vertices[i];\n        var point = vertex.point;\n\n        // update the min coordinates\n\n        for (j = 0; j < 3; j++) {\n          if (point.getComponent(j) < min.getComponent(j)) {\n            min.setComponent(j, point.getComponent(j));\n            minVertices[j] = vertex;\n          }\n        }\n\n        // update the max coordinates\n\n        for (j = 0; j < 3; j++) {\n          if (point.getComponent(j) > max.getComponent(j)) {\n            max.setComponent(j, point.getComponent(j));\n            maxVertices[j] = vertex;\n          }\n        }\n      }\n\n      // use min/max vectors to compute an optimal epsilon\n\n      this.tolerance =\n        3 *\n        Number.EPSILON *\n        (Math.max(Math.abs(min.x), Math.abs(max.x)) +\n          Math.max(Math.abs(min.y), Math.abs(max.y)) +\n          Math.max(Math.abs(min.z), Math.abs(max.z)));\n\n      return { min: minVertices, max: maxVertices };\n    },\n\n    // Computes the initial simplex assigning to its faces all the points\n    // that are candidates to form part of the hull\n\n    computeInitialHull: (function() {\n      var line3, plane, closestPoint;\n\n      return function computeInitialHull() {\n        if (line3 === undefined) {\n          line3 = new THREE.Line3();\n          plane = new THREE.Plane();\n          closestPoint = new THREE.Vector3();\n        }\n\n        var vertex,\n          vertices = this.vertices;\n        var extremes = this.computeExtremes();\n        var min = extremes.min;\n        var max = extremes.max;\n\n        var v0, v1, v2, v3;\n        var i, l, j;\n\n        // 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\n        // (max.x - min.x)\n        // (max.y - min.y)\n        // (max.z - min.z)\n\n        var distance,\n          maxDistance = 0;\n        var index = 0;\n\n        for (i = 0; i < 3; i++) {\n          distance =\n            max[i].point.getComponent(i) - min[i].point.getComponent(i);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            index = i;\n          }\n        }\n\n        v0 = min[index];\n        v1 = max[index];\n\n        // 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\n\n        maxDistance = 0;\n        line3.set(v0.point, v1.point);\n\n        for (i = 0, l = this.vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (vertex !== v0 && vertex !== v1) {\n            line3.closestPointToPoint(vertex.point, true, closestPoint);\n\n            distance = closestPoint.distanceToSquared(vertex.point);\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              v2 = vertex;\n            }\n          }\n        }\n\n        // 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\n\n        maxDistance = 0;\n        plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\n\n        for (i = 0, l = this.vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\n            distance = Math.abs(plane.distanceToPoint(vertex.point));\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              v3 = vertex;\n            }\n          }\n        }\n\n        var faces = [];\n\n        if (plane.distanceToPoint(v3.point) < 0) {\n          // the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\n\n          faces.push(\n            Face.create(v0, v1, v2),\n            Face.create(v3, v1, v0),\n            Face.create(v3, v2, v1),\n            Face.create(v3, v0, v2)\n          );\n\n          // set the twin edge\n\n          for (i = 0; i < 3; i++) {\n            j = (i + 1) % 3;\n\n            // join face[ i ] i > 0, with the first face\n\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j));\n\n            // join face[ i ] with face[ i + 1 ], 1 <= i <= 3\n\n            faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\n          }\n        } else {\n          // the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\n\n          faces.push(\n            Face.create(v0, v2, v1),\n            Face.create(v3, v0, v1),\n            Face.create(v3, v1, v2),\n            Face.create(v3, v2, v0)\n          );\n\n          // set the twin edge\n\n          for (i = 0; i < 3; i++) {\n            j = (i + 1) % 3;\n\n            // join face[ i ] i > 0, with the first face\n\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3));\n\n            // join face[ i ] with face[ i + 1 ]\n\n            faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\n          }\n        }\n\n        // the initial hull is the tetrahedron\n\n        for (i = 0; i < 4; i++) {\n          this.faces.push(faces[i]);\n        }\n\n        // initial assignment of vertices to the faces of the tetrahedron\n\n        for (i = 0, l = vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (\n            vertex !== v0 &&\n            vertex !== v1 &&\n            vertex !== v2 &&\n            vertex !== v3\n          ) {\n            maxDistance = this.tolerance;\n            var maxFace = null;\n\n            for (j = 0; j < 4; j++) {\n              distance = this.faces[j].distanceToPoint(vertex.point);\n\n              if (distance > maxDistance) {\n                maxDistance = distance;\n                maxFace = this.faces[j];\n              }\n            }\n\n            if (maxFace !== null) {\n              this.addVertexToFace(vertex, maxFace);\n            }\n          }\n        }\n\n        return this;\n      };\n    })(),\n\n    // Removes inactive faces\n\n    reindexFaces: function() {\n      var activeFaces = [];\n\n      for (var i = 0; i < this.faces.length; i++) {\n        var face = this.faces[i];\n\n        if (face.mark === Visible) {\n          activeFaces.push(face);\n        }\n      }\n\n      this.faces = activeFaces;\n\n      return this;\n    },\n\n    // Finds the next vertex to create faces with the current hull\n\n    nextVertexToAdd: function() {\n      // if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\n\n      if (this.assigned.isEmpty() === false) {\n        var eyeVertex,\n          maxDistance = 0;\n\n        // grap the first available face and start with the first visible vertex of that face\n\n        var eyeFace = this.assigned.first().face;\n        var vertex = eyeFace.outside;\n\n        // now calculate the farthest vertex that face can see\n\n        do {\n          var distance = eyeFace.distanceToPoint(vertex.point);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            eyeVertex = vertex;\n          }\n\n          vertex = vertex.next;\n        } while (vertex !== null && vertex.face === eyeFace);\n\n        return eyeVertex;\n      }\n    },\n\n    // Computes a chain of half edges in CCW order called the 'horizon'.\n    // For an edge to be part of the horizon it must join a face that can see\n    // 'eyePoint' and a face that cannot see 'eyePoint'.\n\n    computeHorizon: function(eyePoint, crossEdge, face, horizon) {\n      // moves face's vertices to the 'unassigned' vertex list\n\n      this.deleteFaceVertices(face);\n\n      face.mark = Deleted;\n\n      var edge;\n\n      if (crossEdge === null) {\n        edge = crossEdge = face.getEdge(0);\n      } else {\n        // start from the next edge since 'crossEdge' was already analyzed\n        // (actually 'crossEdge.twin' was the edge who called this method recursively)\n\n        edge = crossEdge.next;\n      }\n\n      do {\n        var twinEdge = edge.twin;\n        var oppositeFace = twinEdge.face;\n\n        if (oppositeFace.mark === Visible) {\n          if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\n            // the opposite face can see the vertex, so proceed with next edge\n\n            this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\n          } else {\n            // the opposite face can't see the vertex, so this edge is part of the horizon\n\n            horizon.push(edge);\n          }\n        }\n\n        edge = edge.next;\n      } while (edge !== crossEdge);\n\n      return this;\n    },\n\n    // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n\n    addAdjoiningFace: function(eyeVertex, horizonEdge) {\n      // all the half edges are created in ccw order thus the face is always pointing outside the hull\n\n      var face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\n\n      this.faces.push(face);\n\n      // join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\n\n      face.getEdge(-1).setTwin(horizonEdge.twin);\n\n      return face.getEdge(0); // the half edge whose vertex is the eyeVertex\n    },\n\n    //  Adds 'horizon.length' faces to the hull, each face will be linked with the\n    //  horizon opposite face and the face on the left/right\n\n    addNewFaces: function(eyeVertex, horizon) {\n      this.newFaces = [];\n\n      var firstSideEdge = null;\n      var previousSideEdge = null;\n\n      for (var i = 0; i < horizon.length; i++) {\n        var horizonEdge = horizon[i];\n\n        // returns the right side edge\n\n        var sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\n\n        if (firstSideEdge === null) {\n          firstSideEdge = sideEdge;\n        } else {\n          // joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\n\n          sideEdge.next.setTwin(previousSideEdge);\n        }\n\n        this.newFaces.push(sideEdge.face);\n        previousSideEdge = sideEdge;\n      }\n\n      // perform final join of new faces\n\n      firstSideEdge.next.setTwin(previousSideEdge);\n\n      return this;\n    },\n\n    // Adds a vertex to the hull\n\n    addVertexToHull: function(eyeVertex) {\n      var horizon = [];\n      var i, face;\n\n      this.unassigned.clear();\n\n      // remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\n\n      this.removeVertexFromFace(eyeVertex, eyeVertex.face);\n\n      this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\n\n      this.addNewFaces(eyeVertex, horizon);\n\n      // reassign 'unassigned' vertices to the new faces\n\n      this.resolveUnassignedPoints(this.newFaces);\n\n      return this;\n    },\n\n    cleanup: function() {\n      this.assigned.clear();\n      this.unassigned.clear();\n      this.newFaces = [];\n\n      return this;\n    },\n\n    compute: function() {\n      var vertex;\n\n      this.computeInitialHull();\n\n      // add all available vertices gradually to the hull\n\n      while ((vertex = this.nextVertexToAdd()) !== undefined) {\n        this.addVertexToHull(vertex);\n      }\n\n      this.reindexFaces();\n\n      this.cleanup();\n\n      return this;\n    }\n  });\n\n  //\n\n  function Face() {\n    this.normal = new THREE.Vector3();\n    this.midpoint = new THREE.Vector3();\n    this.area = 0;\n\n    this.constant = 0; // signed distance from face to the origin\n    this.outside = null; // reference to a vertex in a vertex list this face can see\n    this.mark = Visible;\n    this.edge = null;\n  }\n\n  Object.assign(Face, {\n    create: function(a, b, c) {\n      var face = new Face();\n\n      var e0 = new HalfEdge(a, face);\n      var e1 = new HalfEdge(b, face);\n      var e2 = new HalfEdge(c, face);\n\n      // join edges\n\n      e0.next = e2.prev = e1;\n      e1.next = e0.prev = e2;\n      e2.next = e1.prev = e0;\n\n      // main half edge reference\n\n      face.edge = e0;\n\n      return face.compute();\n    }\n  });\n\n  Object.assign(Face.prototype, {\n    getEdge: function(i) {\n      var edge = this.edge;\n\n      while (i > 0) {\n        edge = edge.next;\n        i--;\n      }\n\n      while (i < 0) {\n        edge = edge.prev;\n        i++;\n      }\n\n      return edge;\n    },\n\n    compute: (function() {\n      var triangle;\n\n      return function compute() {\n        if (triangle === undefined) triangle = new THREE.Triangle();\n\n        var a = this.edge.tail();\n        var b = this.edge.head();\n        var c = this.edge.next.head();\n\n        triangle.set(a.point, b.point, c.point);\n\n        triangle.normal(this.normal);\n        triangle.midpoint(this.midpoint);\n        this.area = triangle.area();\n\n        this.constant = this.normal.dot(this.midpoint);\n\n        return this;\n      };\n    })(),\n\n    distanceToPoint: function(point) {\n      return this.normal.dot(point) - this.constant;\n    }\n  });\n\n  // Entity for a Doubly-Connected Edge List (DCEL).\n\n  function HalfEdge(vertex, face) {\n    this.vertex = vertex;\n    this.prev = null;\n    this.next = null;\n    this.twin = null;\n    this.face = face;\n  }\n\n  Object.assign(HalfEdge.prototype, {\n    head: function() {\n      return this.vertex;\n    },\n\n    tail: function() {\n      return this.prev ? this.prev.vertex : null;\n    },\n\n    length: function() {\n      var head = this.head();\n      var tail = this.tail();\n\n      if (tail !== null) {\n        return tail.point.distanceTo(head.point);\n      }\n\n      return -1;\n    },\n\n    lengthSquared: function() {\n      var head = this.head();\n      var tail = this.tail();\n\n      if (tail !== null) {\n        return tail.point.distanceToSquared(head.point);\n      }\n\n      return -1;\n    },\n\n    setTwin: function(edge) {\n      this.twin = edge;\n      edge.twin = this;\n\n      return this;\n    }\n  });\n\n  // A vertex as a double linked list node.\n\n  function VertexNode(point) {\n    this.point = point;\n    this.prev = null;\n    this.next = null;\n    this.face = null; // the face that is able to see this vertex\n  }\n\n  // A double linked list that contains vertex nodes.\n\n  function VertexList() {\n    this.head = null;\n    this.tail = null;\n  }\n\n  Object.assign(VertexList.prototype, {\n    first: function() {\n      return this.head;\n    },\n\n    last: function() {\n      return this.tail;\n    },\n\n    clear: function() {\n      this.head = this.tail = null;\n\n      return this;\n    },\n\n    // Inserts a vertex before the target vertex\n\n    insertBefore: function(target, vertex) {\n      vertex.prev = target.prev;\n      vertex.next = target;\n\n      if (vertex.prev === null) {\n        this.head = vertex;\n      } else {\n        vertex.prev.next = vertex;\n      }\n\n      target.prev = vertex;\n\n      return this;\n    },\n\n    // Inserts a vertex after the target vertex\n\n    insertAfter: function(target, vertex) {\n      vertex.prev = target;\n      vertex.next = target.next;\n\n      if (vertex.next === null) {\n        this.tail = vertex;\n      } else {\n        vertex.next.prev = vertex;\n      }\n\n      target.next = vertex;\n\n      return this;\n    },\n\n    // Appends a vertex to the end of the linked list\n\n    append: function(vertex) {\n      if (this.head === null) {\n        this.head = vertex;\n      } else {\n        this.tail.next = vertex;\n      }\n\n      vertex.prev = this.tail;\n      vertex.next = null; // the tail has no subsequent vertex\n\n      this.tail = vertex;\n\n      return this;\n    },\n\n    // Appends a chain of vertices where 'vertex' is the head.\n\n    appendChain: function(vertex) {\n      if (this.head === null) {\n        this.head = vertex;\n      } else {\n        this.tail.next = vertex;\n      }\n\n      vertex.prev = this.tail;\n\n      // ensure that the 'tail' reference points to the last vertex of the chain\n\n      while (vertex.next !== null) {\n        vertex = vertex.next;\n      }\n\n      this.tail = vertex;\n\n      return this;\n    },\n\n    // Removes a vertex from the linked list\n\n    remove: function(vertex) {\n      if (vertex.prev === null) {\n        this.head = vertex.next;\n      } else {\n        vertex.prev.next = vertex.next;\n      }\n\n      if (vertex.next === null) {\n        this.tail = vertex.prev;\n      } else {\n        vertex.next.prev = vertex.prev;\n      }\n\n      return this;\n    },\n\n    // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n\n    removeSubList: function(a, b) {\n      if (a.prev === null) {\n        this.head = b.next;\n      } else {\n        a.prev.next = b.next;\n      }\n\n      if (b.next === null) {\n        this.tail = a.prev;\n      } else {\n        b.next.prev = a.prev;\n      }\n\n      return this;\n    },\n\n    isEmpty: function() {\n      return this.head === null;\n    }\n  });\n\n  // export\n\n  THREE.QuickHull = QuickHull;\n})();\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n(function() {\n  // ConvexGeometry\n\n  function ConvexGeometry(points) {\n    THREE.Geometry.call(this);\n\n    this.type = \"ConvexGeometry\";\n\n    this.fromBufferGeometry(new ConvexBufferGeometry(points));\n    this.mergeVertices();\n  }\n\n  ConvexGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  ConvexGeometry.prototype.constructor = ConvexGeometry;\n\n  // ConvexBufferGeometry\n\n  function ConvexBufferGeometry(points) {\n    THREE.BufferGeometry.call(this);\n\n    this.type = \"ConvexBufferGeometry\";\n\n    // buffers\n\n    var vertices = [];\n    var normals = [];\n\n    // execute QuickHull\n\n    if (THREE.QuickHull === undefined) {\n      console.error(\n        \"THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull\"\n      );\n    }\n\n    var quickHull = new THREE.QuickHull().setFromPoints(points);\n\n    // generate vertices and normals\n\n    var faces = quickHull.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      var edge = face.edge;\n\n      // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n      do {\n        var point = edge.head().point;\n\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n\n        edge = edge.next;\n      } while (edge !== face.edge);\n    }\n\n    // build geometry\n\n    this.addAttribute(\n      \"position\",\n      new THREE.Float32BufferAttribute(vertices, 3)\n    );\n    this.addAttribute(\"normal\", new THREE.Float32BufferAttribute(normals, 3));\n  }\n\n  ConvexBufferGeometry.prototype = Object.create(\n    THREE.BufferGeometry.prototype\n  );\n  ConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\n\n  // export\n\n  THREE.ConvexGeometry = ConvexGeometry;\n  THREE.ConvexBufferGeometry = ConvexBufferGeometry;\n})();\n","/**\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar THREE = require(\"three\");\n\nTHREE.CSS3DObject = function(element) {\n  THREE.Object3D.call(this);\n\n  this.element = element;\n  this.element.style.position = \"absolute\";\n\n  this.addEventListener(\"removed\", function() {\n    if (this.element.parentNode !== null) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  });\n};\n\nTHREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.CSS3DObject.prototype.constructor = THREE.CSS3DObject;\n\nTHREE.CSS3DSprite = function(element) {\n  THREE.CSS3DObject.call(this, element);\n};\n\nTHREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\nTHREE.CSS3DSprite.prototype.constructor = THREE.CSS3DSprite;\n\n//\n\nTHREE.CSS3DRenderer = function() {\n  console.log(\"THREE.CSS3DRenderer\", THREE.REVISION);\n\n  var _width, _height;\n\n  var matrix = new THREE.Matrix4();\n\n  var cache = {\n    camera: { fov: 0, style: \"\" },\n    objects: {}\n  };\n\n  var domElement = document.createElement(\"div\");\n  domElement.style.overflow = \"hidden\";\n\n  domElement.style.WebkitTransformStyle = \"preserve-3d\";\n  domElement.style.MozTransformStyle = \"preserve-3d\";\n  domElement.style.oTransformStyle = \"preserve-3d\";\n  domElement.style.transformStyle = \"preserve-3d\";\n\n  this.domElement = domElement;\n\n  var cameraElement = document.createElement(\"div\");\n\n  cameraElement.style.position = \"absolute\";\n  cameraElement.style.left = \"50%\";\n  cameraElement.style.top = \"50%\";\n\n  cameraElement.style.WebkitTransformStyle = \"preserve-3d\";\n  cameraElement.style.MozTransformStyle = \"preserve-3d\";\n  cameraElement.style.oTransformStyle = \"preserve-3d\";\n  cameraElement.style.transformStyle = \"preserve-3d\";\n\n  domElement.appendChild(cameraElement);\n\n  this.setClearColor = function() {};\n\n  // Added by Argo-lite, for optimization\n  this.isPaused = false;\n\n  this.getSize = function() {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function(width, height) {\n    _width = width;\n    _height = height;\n\n    domElement.style.width = width + \"px\";\n    domElement.style.height = height + \"px\";\n  };\n\n  function epsilon(value) {\n    return Math.abs(value) < Number.EPSILON ? 0 : value;\n  }\n\n  function getCameraCSSMatrix(matrix) {\n    var elements = matrix.elements;\n\n    return (\n      \"matrix3d(\" +\n      epsilon(elements[0]) +\n      \",\" +\n      epsilon(-elements[1]) +\n      \",\" +\n      epsilon(elements[2]) +\n      \",\" +\n      epsilon(elements[3]) +\n      \",\" +\n      epsilon(elements[4]) +\n      \",\" +\n      epsilon(-elements[5]) +\n      \",\" +\n      epsilon(elements[6]) +\n      \",\" +\n      epsilon(elements[7]) +\n      \",\" +\n      epsilon(elements[8]) +\n      \",\" +\n      epsilon(-elements[9]) +\n      \",\" +\n      epsilon(elements[10]) +\n      \",\" +\n      epsilon(elements[11]) +\n      \",\" +\n      epsilon(elements[12]) +\n      \",\" +\n      epsilon(-elements[13]) +\n      \",\" +\n      epsilon(elements[14]) +\n      \",\" +\n      epsilon(elements[15]) +\n      \")\"\n    );\n  }\n\n  function getObjectCSSMatrix(matrix) {\n    var elements = matrix.elements;\n\n    return (\n      \"translate3d(-50%,-50%,0) matrix3d(\" +\n      epsilon(elements[0]) +\n      \",\" +\n      epsilon(elements[1]) +\n      \",\" +\n      epsilon(elements[2]) +\n      \",\" +\n      epsilon(elements[3]) +\n      \",\" +\n      epsilon(-elements[4]) +\n      \",\" +\n      epsilon(-elements[5]) +\n      \",\" +\n      epsilon(-elements[6]) +\n      \",\" +\n      epsilon(-elements[7]) +\n      \",\" +\n      epsilon(elements[8]) +\n      \",\" +\n      epsilon(elements[9]) +\n      \",\" +\n      epsilon(elements[10]) +\n      \",\" +\n      epsilon(elements[11]) +\n      \",\" +\n      epsilon(elements[12]) +\n      \",\" +\n      epsilon(elements[13]) +\n      \",\" +\n      epsilon(elements[14]) +\n      \",\" +\n      epsilon(elements[15]) +\n      \")\"\n    );\n  }\n\n  function renderObject(object, camera) {\n    if (object instanceof THREE.CSS3DObject) {\n      var style;\n\n      if (object instanceof THREE.CSS3DSprite) {\n        // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n        matrix.copy(camera.matrixWorldInverse);\n        matrix.transpose();\n        matrix.copyPosition(object.matrixWorld);\n        matrix.scale(object.scale);\n\n        matrix.elements[3] = 0;\n        matrix.elements[7] = 0;\n        matrix.elements[11] = 0;\n        matrix.elements[15] = 1;\n\n        style = getObjectCSSMatrix(matrix);\n      } else {\n        style = getObjectCSSMatrix(object.matrixWorld);\n      }\n\n      var element = object.element;\n      var cachedStyle = cache.objects[object.id];\n\n      if (cachedStyle === undefined || cachedStyle !== style) {\n        element.style.WebkitTransform = style;\n        element.style.MozTransform = style;\n        element.style.oTransform = style;\n        element.style.transform = style;\n\n        cache.objects[object.id] = style;\n      }\n\n      if (element.parentNode !== cameraElement) {\n        cameraElement.appendChild(element);\n      }\n    }\n\n    for (var i = 0, l = object.children.length; i < l; i++) {\n      renderObject(object.children[i], camera);\n    }\n  }\n\n  this.render = function(scene, camera) {\n    if (this.isPaused) {\n      return;\n    }\n    var fov =\n      (0.5 / Math.tan(THREE.Math.degToRad(camera.getEffectiveFOV() * 0.5))) *\n      _height;\n\n    if (cache.camera.fov !== fov) {\n      domElement.style.WebkitPerspective = fov + \"px\";\n      domElement.style.MozPerspective = fov + \"px\";\n      domElement.style.oPerspective = fov + \"px\";\n      domElement.style.perspective = fov + \"px\";\n\n      cache.camera.fov = fov;\n    }\n\n    scene.updateMatrixWorld();\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    var style =\n      \"translateZ(\" +\n      fov +\n      \"px)\" +\n      getCameraCSSMatrix(camera.matrixWorldInverse);\n\n    if (cache.camera.style !== style) {\n      cameraElement.style.WebkitTransform = style;\n      cameraElement.style.MozTransform = style;\n      cameraElement.style.oTransform = style;\n      cameraElement.style.transform = style;\n\n      cache.camera.style = style;\n    }\n\n    renderObject(scene, camera);\n  };\n};\n","// var $ = require(\"jquery\");\n\nmodule.exports = function(THREE) {\n\n  \n  /**\n   * This set of controls performs orbiting, dollying (zooming), and panning.\n   * Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n   * \n   * Orbit - left mouse / touch: one finger move\n   * Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n   * Pan - right mouse, or arrow keys / touch: three finter swipe\n   * \n   * @param {THREE.PerspectiveCamera} camera \n   * @param {HTMLElement} domElement \n   * @param {AppState} appState \n   */\n  function OrbitControls(camera, domElement, appState) {\n\n    this.appState = appState;\n\n    this.camera = camera;\n\n    this.domElement = domElement !== undefined ? domElement : document;\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new THREE.Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40, SPACE: 32 };\n\n    // Mouse buttons\n    this.mouseButtons = {\n      ORBIT: THREE.MOUSE.LEFT,\n      ZOOM: THREE.MOUSE.MIDDLE,\n      PAN: THREE.MOUSE.RIGHT\n    };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.camera.position.clone();\n    this.zoom0 = this.camera.zoom;\n\n    // for space panning\n    this.spacePan = false;\n    this.bothPan = false;\n\n    /**\n     * Controls how graph visualization is zoomed in and out.\n     * 100% means no zoom. >100% means zoomed in. <100% means zoomed out.\n     * Also defines presets of zoom levels.\n     * \n     * Zoom can be set via an absolute scale. \n     * 1.0 means no zoom. <1.0 means zoomed out. >1.0 means zoomed in.\n     */\n     this.zoom = {\n      originalCameraDistance: camera.position.z,\n      percentPresets: [10, 25, 50, 75, 100, 150, 200, 300, 500],\n      defaultPercent: 100,\n\n      get percent(){\n        return Math.round(100 * this.originalCameraDistance / camera.position.z);\n      },\n\n      set percent(p){\n        camera.position.z = this.originalCameraDistance * 100 / p;\n      },\n\n      /**\n       * Gets the preset zoom % larger than the current zoom % (upper-bounded by largest presets).\n       */\n      get nextZoomInPercent(){\n        for (const p of this.percentPresets) {\n          if (p > this.percent) {\n            return p;\n          }\n        }\n        return this.percentPresets[this.percentPresets.length - 1];\n      },\n\n      /**\n       * Gets the preset zoom % samller than the current zoom % (lower-bounded by smallest preset).\n       */\n      get nextZoomOutPercent(){\n        for (const p of this.percentPresets.slice().reverse()) {\n          if (p < this.percent) {\n            return p;\n          }\n        }\n        return this.percentPresets[0];\n      },\n\n      get scale(){\n        return  this.originalCameraDistance / camera.position.z;\n      },\n      \n      set scale(s){\n        camera.position.z = this.originalCameraDistance * 1.0  / s;\n      }\n    }\n\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function() {\n      return spherical.phi;\n    };\n\n    this.getAzimuthalAngle = function() {\n      return spherical.theta;\n    };\n\n    this.reset = function() {\n      scope.target.copy(scope.target0);\n      scope.camera.position.copy(scope.position0);\n      scope.camera.zoom = scope.zoom0;\n\n      scope.camera.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n\n      scope.update();\n\n      state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function() {\n      var offset = new THREE.Vector3();\n\n      // so camera.up is the orbit axis\n      var quat = new THREE.Quaternion().setFromUnitVectors(\n        camera.up,\n        new THREE.Vector3(0, 1, 0)\n      );\n      var quatInverse = quat.clone().inverse();\n\n      var lastPosition = new THREE.Vector3();\n      var lastQuaternion = new THREE.Quaternion();\n\n      return function update() {\n        var position = scope.camera.position;\n\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n\n        // restrict theta to be between desired limits\n        spherical.theta = Math.max(\n          scope.minAzimuthAngle,\n          Math.min(scope.maxAzimuthAngle, spherical.theta)\n        );\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        );\n\n        spherical.makeSafe();\n\n        spherical.radius *= scale;\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        );\n\n        // move target to panned location\n        scope.target.add(panOffset);\n\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n\n        position.copy(scope.target).add(offset);\n\n        scope.camera.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n        } else {\n          sphericalDelta.set(0, 0, 0);\n        }\n\n        scale = 1;\n        panOffset.set(0, 0, 0);\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.camera.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.camera.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(changeEvent);\n\n          lastPosition.copy(scope.camera.position);\n          lastQuaternion.copy(scope.camera.quaternion);\n          zoomChanged = false;\n\n          return true;\n        }\n\n        return false;\n      };\n    })();\n\n    this.dispose = function() {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\n      scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\n\n      scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\n      scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\n      scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\n\n      document.removeEventListener(\"mousemove\", onMouseMove, false);\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n      window.removeEventListener(\"keydown\", onKeyDown, false);\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    var scope = this;\n    var changeEvent = { type: \"change\" };\n    var startEvent = { type: \"start\" };\n    var endEvent = { type: \"end\" };\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_DOLLY: 4,\n      TOUCH_PAN: 5\n    };\n\n    var state = STATE.NONE;\n\n    var EPS = 0.000001;\n\n    // current position in spherical coordinates\n    var spherical = new THREE.Spherical();\n    var sphericalDelta = new THREE.Spherical();\n\n    var scale = 1;\n    var panOffset = new THREE.Vector3();\n    var zoomChanged = false;\n\n    var rotateStart = new THREE.Vector2();\n    var rotateEnd = new THREE.Vector2();\n    var rotateDelta = new THREE.Vector2();\n\n    var panStart = new THREE.Vector2();\n    var panEnd = new THREE.Vector2();\n    var panDelta = new THREE.Vector2();\n\n    var dollyStart = new THREE.Vector2();\n    var dollyEnd = new THREE.Vector2();\n    var dollyDelta = new THREE.Vector2();\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = (function() {\n      var v = new THREE.Vector3();\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    var panUp = (function() {\n      var v = new THREE.Vector3();\n\n      return function panUp(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n        v.multiplyScalar(distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = (function() {\n      var offset = new THREE.Vector3();\n\n      return function pan(deltaX, deltaY) {\n        var element =\n          scope.domElement === document\n            ? scope.domElement.body\n            : scope.domElement;\n\n\n        // perspective\n        var position = scope.camera.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan(\n          ((scope.camera.fov / 2) * Math.PI) / 180.0\n        );\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        panLeft(\n          (2 * deltaX * targetDistance) / element.clientHeight,\n          scope.camera.matrix\n        );\n        panUp(\n          (2 * deltaY * targetDistance) / element.clientHeight,\n          scope.camera.matrix\n        );\n        \n      };\n    })();\n\n    // Expose panning for external usage\n    this.pan = pan;\n\n\n    function dollyIn(dollyScale, mousePos, event) {\n      scale /= dollyScale;\n    }\n\n    function dollyOut(dollyScale, mousePos) {\n      scale *= dollyScale;\n    }\n\n    //public zoom in function, used when zoom in button clicked\n    this.dollyIn = function(scale) {\n      dollyIn(scale);\n      scope.update()\n    }\n    //public zoom out function, used when zoom out button clicked\n    this.dollyOut = function(scale) {\n      dollyOut(scale);\n      scope.update()\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      //console.log( 'handleMouseDownRotate' );\n\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      //console.log( 'handleMouseDownDolly' );\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      //console.log( 'handleMouseDownPan' );\n\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      //console.log( 'handleMouseMoveRotate' );\n    \n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n          scope.rotateSpeed\n      );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n          scope.rotateSpeed\n      );\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      //console.log( 'handleMouseMoveDolly' );\n      dollyEnd.set(event.clientX, event.clientY);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyIn(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyOut(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      //console.log( 'handleMouseMovePan' );\n\n      panEnd.set(event.clientX, event.clientY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleMouseUp(event) {\n      //console.log( 'handleMouseUp' );\n    }\n\n    function handleMouseWheel(event) {\n      // console.log( \"handleMouseWheel\" )\n      mousePos = {x: event.clientX, y: event.clientY}\n\n      if (event.deltaY < 0) {\n        dollyOut(getZoomScale(), mousePos, event);\n      } else if (event.deltaY > 0) {\n        dollyIn(getZoomScale(), mousePos, event);\n      }\n\n      scope.update();\n    }\n\n    function handleKeyUp(event) {\n      switch (event.keyCode) {\n        case scope.keys.SPACE:\n          if (scope.spacePan == true) {\n            scope.spacePanStart = false;\n            state = STATE.NONE;\n          }\n          break;\n      }\n    }\n\n    function handleKeyDown(event) {\n      //console.log( 'handleKeyDown' );\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.SPACE:\n          if (scope.spacePan == true) {\n            scope.spacePanStart = true;\n            state = STATE.PAN;\n          }\n          break;\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      //console.log( 'handleTouchStartRotate' );\n\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n\n    function handleTouchStartDolly(event) {\n      //console.log( 'handleTouchStartDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartPan(event) {\n      //console.log( 'handleTouchStartPan' );\n\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n\n    function handleTouchMoveRotate(event) {\n      //console.log( 'handleTouchMoveRotate' );\n\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n          scope.rotateSpeed\n      );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n          scope.rotateSpeed\n      );\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleTouchMoveDolly(event) {\n      //console.log( 'handleTouchMoveDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyEnd.set(0, distance);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleTouchMovePan(event) {\n      //console.log( 'handleTouchMovePan' );\n\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleTouchEnd(event) {\n      //console.log( 'handleTouchEnd' );\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onMouseDown(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (event.button === scope.mouseButtons.ORBIT) {\n        if (scope.enableRotate === false) return;\n\n        handleMouseDownRotate(event);\n\n        state = STATE.ROTATE;\n      } else if (event.button === scope.mouseButtons.ZOOM) {\n        if (scope.enableZoom === false) return;\n\n        handleMouseDownDolly(event);\n\n        state = STATE.DOLLY;\n      } else if (event.button === scope.mouseButtons.PAN) {\n        if (scope.enablePan === false) return;\n\n        if (!scope.spacePan || scope.bothPan) {\n          handleMouseDownPan(event);\n\n          state = STATE.PAN;\n        }\n      }\n\n      if (state !== STATE.NONE) {\n        document.addEventListener(\"mousemove\", onMouseMove, false);\n        document.addEventListener(\"mouseup\", onMouseUp, false);\n\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (state === STATE.ROTATE) {\n        if (scope.enableRotate === false) return;\n\n        handleMouseMoveRotate(event);\n      } else if (state === STATE.DOLLY) {\n        if (scope.enableZoom === false) return;\n\n        handleMouseMoveDolly(event);\n      } else if (state === STATE.PAN) {\n        if (scope.enablePan === false) return;\n\n        if (scope.spacePan == true) {\n          if (scope.spacePanStart == true) {\n            handleMouseDownPan(event);\n            scope.spacePanStart = false;\n          }\n        }\n\n        handleMouseMovePan(event);\n      }\n    }\n\n    function onMouseUp(event) {\n      if (scope.enabled === false) return;\n      // console.log( 'handleMouseDownPan' );\n      // appState.logger.addLog({eventName: `ViewportPan`, elementName: `ViewportPan`})\n\n      handleMouseUp(event);\n\n      //document.removeEventListener( 'mousemove', onMouseMove, false );\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      handleMouseWheel(event);\n\n      scope.dispatchEvent(startEvent); // not sure why these are here...\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableKeys === false ||\n        scope.enablePan === false\n      )\n        return;\n\n      document.addEventListener(\"mousemove\", onMouseMove, false);\n\n      handleKeyDown(event);\n    }\n\n    function onKeyUp(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableKeys === false ||\n        scope.enablePan === false\n      )\n        return;\n      // appState.logger.addLog({eventName: `ViewportPan`, elementName: `ViewportPan`})\n      handleKeyUp(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.touches.length) {\n        case 1: // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n\n          handleTouchStartRotate(event);\n\n          state = STATE.TOUCH_ROTATE;\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n\n          handleTouchStartDolly(event);\n\n          state = STATE.TOUCH_DOLLY;\n\n          break;\n\n        case 3: // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n\n          handleTouchStartPan(event);\n\n          state = STATE.TOUCH_PAN;\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      switch (event.touches.length) {\n        case 1: // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n          if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n          handleTouchMoveRotate(event);\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n          if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n          handleTouchMoveDolly(event);\n\n          break;\n\n        case 3: // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n          if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n          handleTouchMovePan(event);\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      if (scope.enabled === false) return;\n\n      handleTouchEnd(event);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      event.preventDefault();\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\n\n    scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\n\n    scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n    scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\n    scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\n\n    window.addEventListener(\"keydown\", onKeyDown, false);\n    window.addEventListener(\"keyup\", onKeyUp, false);\n\n    // force an update at start\n\n    this.update();\n\n    \n    \n  }\n\n  OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n  OrbitControls.prototype.constructor = OrbitControls;\n\n \n  \n\n  return OrbitControls;\n};\n","var def = require(\"../imports\").default;\nvar appState = require(\"../../../stores\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Calculates coordinates of mouse on canvas adjusted for padding\n   * @param {*} event\n   * @param {*} currentElement\n   */\n  self.relMouseCoords = function(pageX, pageY, currentElement) {\n    var totalOffsetX = 0;\n    var totalOffsetY = 0;\n    var canvasX = 0;\n    var canvasY = 0;\n\n    do {\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n    } while ((currentElement = currentElement.offsetParent));\n\n    canvasX = pageX - totalOffsetX;\n    canvasY = pageY - totalOffsetY;\n\n    return { x: canvasX, y: canvasY };\n  };\n\n  /**\n   * Add metadata to node\n   * @param {*} node\n   */\n  self.prepNode = function(node) {\n    let nodeToAdd = node;\n    if (!node.data) {\n      node.data = {};\n    }\n\n    let hexToRGB = (hex) => {\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? \n      new THREE.Color(appState.graph.edges.color)\n      : null;\n  }\n    nodeToAdd.renderData = {\n      label: node.data.label || \"No Label\",\n      color: node.data.color || def.NODE_COLOR,\n      hcolor: node.data.hcolor || def.NODE_HIGHLIGHT,\n      shape: node.data.shape || def.NODE_SHAPE,\n      linecolor:  hexToRGB(appState.graph.edges.color),\n      numYeast: Math.ceil(Math.random() * 8),\n      size: node.data.size,\n      tsize: node.data.tsize || def.TEXT_SIZE,\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0\n    };\n    return nodeToAdd;\n  };\n\n  /**\n   * Creates a generic rectangle shape to use for selection and boundaries\n   */\n  self.make1x1Rect = function() {\n    var rectShape = new THREE.Shape();\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(0, 1);\n    rectShape.lineTo(1, 1);\n    rectShape.lineTo(1, 0);\n    rectShape.lineTo(0, 0);\n    rectShape.lineTo(0, 1);\n    return new THREE.ShapeGeometry(rectShape);\n  };\n\n  /**\n   * Creates a centered 2x2 Rectangle\n   */\n  self.make2x2Rect = function() {\n    var rectShape = new THREE.Shape();\n    rectShape.moveTo(-1, -1);\n    rectShape.lineTo(-1, 1);\n    rectShape.lineTo(1, 1);\n    rectShape.lineTo(1, -1);\n    rectShape.lineTo(-1, -1);\n    return new THREE.ShapeGeometry(rectShape);\n  };\n\n  /**\n   *  find radius of circle given the volume\n   * @param {*} volume\n   */\n  self.volToRadius = function(volume) {\n    return Math.pow((volume / Math.PI) * (3.0 / 4.0), 1.0 / 3.0);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nconst { default: appState } = require(\"../../stores\");\n\n\nmodule.exports = function(self) {\n  /**\n   * Creates or converts ngraph or d3 graph\n   */\n  self.setupGraph = function() {\n    var createNGraph = require(\"ngraph.graph\");\n    self.graph = createNGraph();\n    if (self.inGraph) {\n      self.updateGraph(self.inGraph);\n    }\n  };\n\n  /**\n   *  Create layout using d3\n   */\n  self.setupLayout = function() {\n    if (self.options.layout == \"ngraph\") {\n      self.setupNgraphLayout();\n    } else if (self.options.layout == \"d3\") {\n      self.setupD3Layout();\n    }\n  };\n\n  /**\n   * Set graph layout to ngraph\n   */\n  self.setupNgraphLayout = function() {\n    self.force = require(\"ngraph.forcelayout\")(self.graph);\n  };\n\n  /**\n   * Set graph layout to D3 Force Directed and set decay parameters\n   */\n  self.setupD3Layout = function() {\n    self.force = d3\n      .forceSimulation()\n      .force(\"charge\", d3.forceManyBody().strength(-1))\n      .force(\"link\", d3.forceLink())\n      .force(\"y\", d3.forceY(0).strength(0.001))\n      .force(\"x\", d3.forceX(0).strength(0.001))\n      .stop();\n\n    // set alpha decay to be lower than the default 0.0228\n    // so force layout does not prematurely stop\n    self.force.alphaDecay(0.005);\n\n    // set velocity decay to be lower than the default 0.4\n    // so nodes move to their final locations\n    self.force.velocityDecay(0.1);\n  };\n\n  self.setDisplayParams = function() {\n    self.element = document.getElementById(\"graph-container\");\n    self.clientRect = self.element.getBoundingClientRect();\n    self.width = self.clientRect.width;\n    self.height = self.clientRect.height;\n    self.aspect = self.width / self.height;\n    self.resolution = new THREE.Vector2(self.width, self.height);\n  };\n\n  self.setRendererParams = function() {\n    self.renderer.setSize(self.width, self.height);\n    self.cssRenderer = new THREE.CSS3DRenderer();\n    self.cssRenderer.setSize(self.width, self.height);\n    self.cssRenderer.domElement.style.position = \"absolute\";\n    self.cssRenderer.domElement.style.top = 0;\n    self.minimapRenderer.domElement.style.position = \"absolute\";\n    self.minimapRenderer.domElement.style.bottom = 0;\n    self.minimapRenderer.domElement.style.left = 0;\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\n    self.minimapRenderer.zIndex = 1000;\n    self.renderer.setPixelRatio(window.devicePixelRatio);\n  };\n\n  /**\n   *  Create initial camera and parameters\n   */\n  self.setupCamera = function() {\n    self.ccamera = new THREE.PerspectiveCamera(\n      self.fov,\n      self.width / self.height,\n      self.near,\n      self.far\n    );\n    self.ccamera.position.z = 200;\n    var controls = new OrbitControls(self.ccamera, self.element, appState);\n    \n    //add orbitcontrols to appstate\n    appState.controls = controls\n\n    controls.spacePan = true; // Space bar panning\n    controls.bothPan = true; // Space bar and right click panning\n    controls.minDistance = 10;\n    controls.maxDistance = self.renderWidth * 2;\n    controls.target.set(0, 0, 0);\n    controls.enableRotate = false;\n    self.controls = controls;\n  };\n\n  /**\n   *  Create minimap\n   */\n  self.setupMinimap = function() {\n    self.minimap = {};\n    self.minimap.camera = new THREE.PerspectiveCamera(\n      self.fov,\n      1,\n      self.near,\n      self.far\n    );\n    self.minimap.camera.position.z = self.renderWidth * 2;\n\n    (self.oldCoords = {\n      x: null,\n      y: null,\n      z: null\n    }),\n      /**\n       * Pan the ccamera according to mouse position on screen (should be called only when mouse is on minimap)\n       * @param coordX mouse position on screen returned by relMouseCoords\n       * @param coordY mouse position on screen returned by relMouseCoords\n       */\n      (self.minimap.panToMousePosition = function(coordX, coordY) {\n        // ensures that the camera position is updated from the last pan.\n        if (\n          self.ccamera.position.x == self.oldCoords.x &&\n          self.ccamera.position.y == self.oldCoords.y &&\n          self.ccamera.position.z == self.oldCoords.z\n        ) {\n          return;\n        }\n\n        self.oldCoords.x = self.ccamera.position.x;\n        self.oldCoords.y = self.ccamera.position.y;\n        self.oldCoords.z = self.ccamera.position.z;\n\n        // 850 is an approximation\n        const coefficient = (self.height - 200) / self.ccamera.position.z;\n\n        self.controls.pan(\n          ((coordX / self.minimap.width) * 4000 -\n            2000 -\n            self.ccamera.position.x) *\n            -coefficient,\n          (((self.height - coordY) / self.minimap.height) * 4000 -\n            2000 -\n            self.ccamera.position.y) *\n            coefficient\n        );\n      });\n\n      appState.panToMousePosition = self.minimap.panToMousePosition;\n  };\n\n  /**\n   *  Create initial scene geometry and attributes\n   */\n  self.setupGeometry = function() {\n    self.scene = new THREE.Scene();\n\n    self.points = new THREE.BufferGeometry();\n    self.nodes = new THREE.Group();\n    self.scene.add(self.nodes);\n\n    if (def.LINES == \"fancy\") {\n      self.setupFancyEdges();\n    } else {\n      self.setUpSimpleEdges();\n    }\n\n    var rect = self.make1x1Rect();\n\n    self.setupSelectionBox(rect);\n    self.setupBoundaries(rect);\n    self.setupViewPort(rect);\n  };\n\n  /**\n   * Setup data structures for fancy edges\n   */\n  self.setupFancyEdges = function() {\n    self.edges = [];\n    self.edgeCount = 0;\n  };\n\n  /**\n   * Sets up data structures for simple edges\n   */\n  self.setUpSimpleEdges = function() {\n    self.edges = new THREE.BufferGeometry();\n    var material = new THREE.LineBasicMaterial({\n      linewidth: 2,\n      color: 0xffffff,\n      vertexColors: THREE.VertexColors,\n      shading: THREE.FlatShading\n    });\n    self.line = new THREE.LineSegments(self.edges, material);\n    self.line.frustumCulled = false;\n    self.scene.add(self.line);\n\n    var positions = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n    var colors = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n\n    self.edges.addAttribute(\"position\", positions);\n    self.edges.addAttribute(\"color\", colors);\n\n    /**Adding triangles for directed edges update*/\n    self.directedArrows = new THREE.BufferGeometry();\n    var arrowMaterial = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n    });\n    self.arrow = new THREE.Mesh(self.directedArrows, arrowMaterial);\n    self.arrow.frustumCulled = false;\n    self.scene.add(self.arrow)\n    var arrowPositions = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n    var arrowColors = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n\n    self.directedArrows.addAttribute(\"position\", arrowPositions);\n    self.directedArrows.addAttribute(\"color\", arrowColors);\n    \n    self.drawCount = 0;\n  };\n\n  /**\n   * Adds box to screen that is displayed when selecting groups of nodes\n   */\n  self.setupSelectionBox = function(rect) {\n    self.selectBox = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x3399aa })\n    );\n    self.selectBox.visible = false;\n    self.scene.add(self.selectBox);\n  };\n\n  /**\n   * Sets boundaries for max edges of graph\n   */\n  self.setupBoundaries = function(rect) {\n    self.boundaries = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x999999 })\n    ); \n    self.scene.add(self.boundaries);\n    self.setBoundarySize(self.renderWidth * 2);\n  };\n\n  /**\n   * Sets viewport to match size of display\n   */\n  self.setupViewPort = function(rect) {\n    self.viewPort = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: self.darkMode? 0xffffff : 0x000000})\n    );\n    self.scene.add(self.viewPort);\n    self.setViewPortSize(self.ccamera);\n  };\n\n  /**\n   *  Creates listeners and events for selecting nodes\n   */\n  self.setupSelect = function() {\n    self.points.addAttribute(\n      \"position\",\n      new THREE.BufferAttribute(new Float32Array(20 * 3), 3)\n    );\n    self.points.computeBoundingSphere();\n    self.nodeCount = 0;\n    var mouseHandler = function(callback) {\n      return function(event) {\n        event.preventDefault();\n        let pageX, pageY;\n        if (event.touches && event.touches.length > 0) {\n          // for touch events\n          pageX = event.touches.item(0).pageX;\n          pageY = event.touches.item(0).pageY;\n        } else {\n          pageX = event.pageX;\n          pageY = event.pageY;\n        }\n\n        //logs the current pageX and pageY for the auto-dropdown display in mouse.js \n        appState.graph.currentMouseX = pageX;\n        appState.graph.currentMouseY = pageY;\n\n        var coords = self.relMouseCoords(pageX, pageY, this);\n        var mouseX = (coords.x / self.width) * 2 - 1;\n        var mouseY = 1 - (coords.y / self.height) * 2;\n        var mousePosition = new THREE.Vector3(mouseX, mouseY, 1);\n        mousePosition.unproject(self.ccamera);\n        var dir = mousePosition.sub(self.ccamera.position).clone();\n        mousePosition.normalize();\n        // Determine whether mouse is on minimap\n        self.isMouseCoordinatesOnMinimap =\n          coords.x <= self.minimap.width &&\n          self.height - coords.y <= self.minimap.height;\n        if (self.isMouseCoordinatesOnMinimap) {\n          self.minimap.mouseX = coords.x;\n          self.minimap.mouseY = coords.y;\n        }\n\n        // Determine intersects\n        var raycaster = new THREE.Raycaster(\n          self.ccamera.position,\n          mousePosition\n        );\n\n        // Find real location of mouse\n        var distance = -self.ccamera.position.z / dir.z;\n        var pos = self.ccamera.position\n          .clone()\n          .add(dir.multiplyScalar(distance));\n\n        if (callback == self.onRightClick && event.which != 3) {\n          return;\n        }\n\n        if (\n          callback == self.onRightClick &&\n          event.target.getAttribute(\"contenteditable\")\n        ) {\n          event.target.focus();\n        } else {\n          event.preventDefault();\n          if (callback == self.onRightClick) {\n            self.onRightClickCoords(event);\n          }\n          self.callMouseHandler(event, raycaster, pos, callback);\n        }\n      };\n    };\n\n    //Add listeners to web page\n    self.setupMouseHandlers(mouseHandler);\n  };\n\n  /**\n   * Checks if a node has been clicked, and calls the appropriate mouse handler function\n   */\n  self.callMouseHandler = function(event, raycaster, pos, callback) {\n    var intersects = raycaster.intersectObjects(self.nodes.children);\n    if (intersects.length) {\n      // If a node has been clicked\n      var nodeIndex = intersects[0].object.index;\n      self.oldIntersect = nodeIndex;\n      callback(\n        self.graph.getNode(nodeIndex),\n        pos.x,\n        pos.y,\n        event.button,\n        event.ctrlKey\n      );\n    } else {\n      callback(null, pos.x, pos.y, event.button, event.ctrlKey);\n    }\n  };\n\n  /**\n   * Add Mouse Event Listeners to page\n   */\n  self.setupMouseHandlers = function(mouseHandler) {\n    self.element.addEventListener(\n      \"mousemove\",\n      mouseHandler(self.onMouseMove),\n      false\n    );\n    self.element.addEventListener(\n      \"mousedown\",\n      mouseHandler(self.onMouseDown),\n      false\n    );\n    self.element.addEventListener(\n      \"mouseup\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n    self.element.addEventListener(\n      \"mouseup\",\n      mouseHandler(self.onRightClick),\n      false\n    );\n    self.element.addEventListener(\n      \"touchstart\",\n      mouseHandler(self.onMouseDown),\n      false\n    );\n    self.element.addEventListener(\n      \"touchmove\",\n      mouseHandler(self.onMouseMove),\n      false\n    );\n    self.element.addEventListener(\n      \"touchend\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n    self.element.addEventListener(\n      \"touchcancel\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  self.addNode = function(node) {\n    self.graph.addNode(node.id, node.data);\n    var graphNode = self.graph.getNode(node.id);\n    graphNode.x = node.x;\n    graphNode.y = node.y;\n    graphNode.fx = node.fx;\n    graphNode.fy = node.fy;\n    graphNode.pinnedx = node.fx != undefined;\n    graphNode.pinnedy = node.fy != undefined;\n    self.prepNode(graphNode);\n    self.drawNode(graphNode);\n    graphNode.links = [];\n    self.layoutInit = true;\n    return graphNode;\n  };\n\n  self.removeNode = function(node) {\n    if (!node || !node.id) {\n      return;\n    }\n    self.removeGraphEdges(node);\n    self.undrawEdges(node);\n    self.nodes.remove(node.renderData.draw_object);\n    self.graph.removeNode(node.id);\n    self.undrawNode(node);\n    self.nodeCount -= 1;\n  };\n\n  self.removeGraphEdges = function(node) {\n    var nodeLinks = self.graph.getLinks(node.id);\n    if (nodeLinks) {\n      nodeLinks.forEach(function(edge) {\n        self.graph.removeLink(edge);\n      });\n    }\n  };\n\n  self.undrawNode = function(node) {\n    var nodes = self.force.nodes();\n    if (nodes) {\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id == node.id) {\n          self.scene.remove(nodes[i].renderData.draw_object);\n          nodes[i].renderData.textHolder.children[0].element.hidden = true;\n          nodes.splice(i, 1);\n        }\n      }\n    }\n  };\n\n  self.undrawEdges = function(node) {\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n    var killed = 0;\n    for (var i = 0; i - killed < self.lineIndices.length; i++) {\n      if (\n        self.lineIndices[i - killed].source.id == node.id ||\n        self.lineIndices[i - killed].target.id == node.id\n      ) {\n        for (var j = i - killed; j < self.lineIndices.length; j++) {\n          var k = j + 1;\n          if (k == self.lineIndices.length) {\n            positions[j * 6] = 0;\n            positions[j * 6 + 1] = 0;\n            positions[j * 6 + 3] = 0;\n            positions[j * 6 + 4] = 0;\n            colors[j * 6] = 255;\n            colors[j * 6 + 1] = 160;\n            colors[j * 6 + 2] = 80;\n            colors[j * 6 + 3] = 255;\n            colors[j * 6 + 4] = 160;\n            colors[j * 6 + 5] = 80;\n          } else {\n            self.lineIndices[j] = self.lineIndices[k];\n            self.lineObjects[j * 2] = self.lineObjects[k * 2];\n            self.lineObjects[j * 2 + 1] = self.lineObjects[k * 2 + 1];\n            positions[j * 6] = positions[k * 6];\n            positions[j * 6 + 1] = positions[k * 6 + 1];\n            positions[j * 6 + 3] = positions[k * 6 + 3];\n            positions[j * 6 + 4] = positions[k * 6 + 4];\n            colors[j * 6] = colors[k * 6];\n            colors[j * 6 + 1] = colors[k * 6 + 1];\n            colors[j * 6 + 2] = colors[k * 6 + 2];\n            colors[j * 6 + 3] = colors[k * 6 + 3];\n            colors[j * 6 + 4] = colors[k * 6 + 4];\n            colors[j * 6 + 5] = colors[k * 6 + 5];\n          }\n        }\n        self.lineIndices.pop();\n        self.lineObjects.pop();\n        self.lineObjects.pop();\n        self.drawCount -= 2;\n        killed += 1;\n      }\n    }\n    console.log(\"Deleted \" + killed.toString() + \" edges\");\n  };\n\n  self.getNode = function(node_id) {\n    return self.graph.getNode(node_id);\n  };\n\n  self.addEdge = function(source, target, visible = true) {\n    self.graph.addLink(source.id, target.id);\n    self.drawEdge(self.getNode(source.id), self.getNode(target.id), visible);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Change color of node edges\n   */\n  self.highlightNode = function(node, toggle, color = def.NODE_HIGHLIGHT) {\n    if (toggle) {\n      node.renderData.draw_object.children[0].material.color.setHex(color);\n      node.renderData.draw_object.children[0].visible = true;\n    } else {\n      node.renderData.draw_object.children[0].material.color.set(\n        node.renderData.hcolor\n      );\n      node.renderData.draw_object.children[0].visible = false;\n    }\n  };\n\n  /**\n   *  Highlight edges from and to a node and hide others\n   */\n  self.highlightEdges = function(node, toggle) {\n    const froms = [];\n    const tos = [];\n    if (self.selection == null) {\n      return;\n    }\n    for (var i = 0; i < self.selection.length; i++) {\n      if (self.selection[i].links == null) {\n        continue; \n      }\n      for (var j = 0; j < self.selection[i].links.length; j++) {\n        froms.push(self.selection[i].links[j].fromId);\n        tos.push(self.selection[i].links[j].toId);\n      }\n    }\n    if (toggle) {\n      for (var i = 0; i < node.links.length; i++) {\n        froms.push(node.links[i].fromId);\n        tos.push(node.links[i].toId);\n      }\n      self.highlightNeighbors(node, froms, tos);\n    } else {\n      self.highlightNeighbors(node, froms, tos);\n    }\n  };\n\n  /**\n   * Highlight adjacent nodes\n   * \n   * Also highlights edges.\n   */\n  self.highlightNeighbors = function(node, froms, tos) {\n    self.graph.forEachNode(n => {\n      if (self.selection.indexOf(n) != -1 || n == node) {\n        // If the node is selected or the node is the node to be highlighted\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, true);\n        for (var i = 0; n.linkObjs && i < n.linkObjs.length; i++) {\n          n.linkObjs[i].linecolor = n.renderData.linecolor;\n        }\n      } else if (\n        self.doHighlightNeighbors &&\n        (froms.indexOf(n.id) != -1 || tos.indexOf(n.id) != -1)\n      ) {\n        // If the node is not selected or highlighted and\n        // if the node is present in either froms or tos arrays\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, false);\n      } else if (\n        !self.prevHighlights ||\n        self.prevHighlights.indexOf(n.id) == -1\n      ) {\n        self.colorNodeOpacity(n, 0.5);\n        self.colorNodeEdge(n, false);\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\n      }\n    });\n  };\n\n  /**\n   *  Change color of node edges\n   */\n  self.colorNodeEdge = function(node, isHighlighted) {\n    let red = new THREE.Color(appState.graph.edges.color).r;\n    let blue = new THREE.Color(appState.graph.edges.color).g;\n    let green = new THREE.Color(appState.graph.edges.color).b;\n    if(isHighlighted) {\n      node.renderData.linecolor.r = red;\n      node.renderData.linecolor.g = blue;\n      node.renderData.linecolor.b = green;\n      self.arrow.material.color.setRGB(red, blue, green);\n    } else {\n      node.renderData.linecolor.r =  self.darkMode ? 0.25 : .75;\n      node.renderData.linecolor.g = self.darkMode ? 0.25 : .75;\n      node.renderData.linecolor.b = self.darkMode ? 0.25 : .75;\n    }\n    \n  };\n\n  /**\n   *  Change node opacity\n   */\n  self.colorNodeOpacity = function(node, op) {\n    node.renderData.draw_object.material.opacity = op;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\nconst { default: appState } = require(\"../../stores\");\n\n\nconst arraysEqual = (a1, a2) => {\n  return a1.length === a2.length && a1.every((o, idx) => objectsEqual(o, a2[idx]));\n};\n\nconst objectsEqual = (o1, o2) => {\n  return o1.id === o2.id;\n};\n\nconst findNode = (o1, a1) => {\n  if (!a1) return null;\n  for (let i = 0; i < a1.length; i++) {\n    if (o1.id == a1[i].id) {\n      return a1[i];\n    }\n  }\n  return null;\n};\n\nmodule.exports = function (self) {\n  \n\n\n  /**\n   * Mouse move event that selections nodes in selection box\n   */\n  self.onMouseMove = function (selection, mouseX, mouseY, button, ctrl) {  \n    // self.onHover(selection);\n    // check if left button is not down\n    self.mouseX = mouseX;\n    self.mouseY = mouseY;\n    if (self.leftMouseDown && self.mouseDown) {\n      // left-clicked empty space (i.e., not clicking a node)\n      if (!self.dragging && self.selection.indexOf(selection) == -1 && !ctrl) {\n        self.clearSelection();\n      }\n\n\n      if (!self.dragging) {\n        // add nodes enclosed by selection box into node selection\n        self.checkSelection(mouseX, mouseY);\n      }\n    }\n\n    \n\n\n    if (self.selection.length > 0) {\n      // reactivate (in D3's terminology: reheat) the force layout\n      if (self.dragging) {\n        self.force.alpha(1);\n      }\n      // update position of nodes in selection\n      self.updateSelection(mouseX, mouseY);\n    }\n\n    if (!self.mouseDown) {\n      self.onHover(selection);\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\n    } else {\n      // if mouse is in minimap, do nothing else\n      if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\n        self.minimap.panToMousePosition(\n          self.minimap.mouseX,\n          self.minimap.mouseY\n        );\n        return;\n      }\n\n\n\n      // update selection box size/position\n      if (self.leftMouseDown && !self.dragging) {\n        if (self.showBox) {\n          self.selectBox.visible = true;\n          self.showBox = false;\n        }\n        self.selectBox.position.x = mouseX;\n        self.selectBox.position.y = mouseY;\n        var diffx = self.mouseStart.x - mouseX;\n        var diffy = self.mouseStart.y - mouseY;\n        self.selectBox.scale.set(diffx, diffy, 1);\n      } else {\n        self.selectBox.visible = false;\n      }\n    }\n  };\n\n  /**\n   * Mouse hover over node event that highlights the node and neighbors at mouse position\n   */\n  self.onHover = function (node) {\n    if (self.lastHover && self.selection.indexOf(self.lastHover) == -1) {\n      self.highlightNode(self.lastHover, false);\n      self.lastHover.renderData.textHolder.children[0].element.hideme = true;\n      self.highlightEdges(node, false);\n    }\n    self.lastHover = node;\n    if (node) {\n      self.highlightNode(node, true);\n      node.renderData.textHolder.children[0].element.hideme = false;\n      self.highlightEdges(node, true);\n\n      //set currently hovered node\n      appState.graph.currentlyHovered = node;\n\n      //deploys dropdown if hovers over same node for one second\n      // if (self.selection.length > 0 && findNode(node,self.selection)) {\n      //   if (!appState.graph.startedHovering) {\n      //     //if this is the first time you hover over a node\n      //     appState.graph.startedHovering = true;\n      //     appState.graph.hoveredTime = Date.now();\n      //   } else {\n      //     if (!appState.graph.autoDisplayExploration) {\n      //       //checks to see that the dropdown has not been displayed\n      //       if (Date.now() - appState.graph.hoveredTime > 1000) {\n      //         //display dropdown\n      //         appState.graph.autoDisplayExploration = true;\n      //         self.ee.emit(\"right-click\", {\n      //           pageX: appState.graph.currentMouseX,\n      //           pageY: appState.graph.currentMouseY\n      //         });\n      //       }\n      //     }\n      //   }\n      // }\n\n    } else if (self.selection.length == 0) {\n      //set currently hovered node\n      if (!appState.graph.autoDisplayExploration) {\n        //if we are displaying the dropdown, don't reset the currentlyHovered node\n        appState.graph.currentlyHovered = null;\n      }\n      self.graph.forEachNode(n => {\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, 0.5, 0.5);\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\n      });\n    }\n\n    //reset the counter when unhover a node\n    if (!node) {\n      appState.graph.startedHovering = false;\n      appState.graph.hoveredTime = undefined;\n      appState.graph.autoDisplayExploration = false;\n    }\n\n    if (self.prevHighlights != undefined) {\n      for (var i = 0; i < self.prevHighlights.length; i++) {\n        self.colorNodeOpacity(self.prevHighlights[i], 1);\n        self.highlightNode(self.prevHighlights[i], true, def.SEARCH_HIGHLIGHT);\n      }\n    }\n  };\n  \n\n\n\n\n  // vars to get time at mouse press and time at mouse release\n  var startTime = 0; \n  var endTime = 0;\n  /**\n   * Mouse down event to start a selection box or start dragging a node\n   */\n  self.onMouseDown = function (selection, mouseX, mouseY, button, ctrl) {\n    // if mouse is in minimap, do nothing else\n    if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\n      self.mouseDown = true;\n      self.minimap.panToMousePosition(self.minimap.mouseX, self.minimap.mouseY);\n      return;\n    }\n\n    \n\n    self.leftMouseDown = true;\n    if (self.leftMouseDown) {\n\n      self.onHover(selection);\n\n      self.mouseDown = true;\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\n      if (button == 0 && !self.dragging) {\n        self.showBox = true;\n      }\n      if (self.selection.indexOf(selection) == -1 && !ctrl) {\n        for (var i = 0; i < self.selection.length; i++) {\n          self.selection[i].renderData.isSelected = false;\n          if (!def.NODE_NO_HIGHLIGHT) {\n            self.selection[\n              i\n            ].renderData.draw_object.children[0].visible = false;\n          } else {\n            self.selection[i].renderData.draw_object.material.color.set(\n              new THREE.Color(self.selection[i].renderData.color)\n            );\n          }\n          self.selection[\n            i\n          ].renderData.textHolder.children[0].element.hideme = true;\n        }\n        self.selection = [];\n      }\n\n\n      if(selection) {\n        //when any node is clicked, un-smartpause if smartpaused\n        //appState.graph.smartPause.lastUnpaused = Date.now(); //old code using lastUnpaused\n        // console.log(selection)\n        appState.graph.smartPause.interactingWithGraph = true;\n        // appState.logger.addLog({eventName: `SelectNode`, elementName: selection.id, valueName: `Label`, newValue: selection.data.label});\n\n        \n        // if (!inArray(selection, appState.graph.currentNodes)) {\n        //   console.log(\"other node\")\n        //   appState.graph.currentNodes = selection\n        //   appState.graph.currentNodeX = selection.x\n        //   appState.graph.currentNodeY = selection.y\n        // }\n\n        appState.graph.currentNodes = {id: selection.id, x: selection.x, y: selection.y}\n        appState.graph.currentNodeX = selection.x\n        appState.graph.currentNodeY = selection.y\n      }\n\n\n      //captures click times to measure time distance between clicks\n      oldStartTime = startTime;\n      startTime = Date.now();\n\n      //keeps track of time difference\n      clickDifference = startTime - oldStartTime;\n\n      //sets whether or not last click was \n      //double click or not\n      if (clickDifference < 225) {\n        self.doubleClicked = true;\n      } else {\n        self.doubleClicked = false;\n      }\n\n      \n\n      //selects single node when dragged\n      if (selection) {\n        self.dragging = selection;\n        if (self.selection.indexOf(selection) == -1) {\n          self.selection.push(selection);\n          selection.renderData.isSelected = false;\n        }\n      }\n\n      if (selection) {\n        self.dragging = selection;\n        //only pins node if double-clicked\n        if (self.doubleClicked) {\n          //passing in 'selection' node to pass information for node to pin\n          self.updateSelection(self.dragging.x, self.dragging.y, selection);\n        } else if (ctrl) {\n          self.selection.splice(self.selection.indexOf(selection), 1);\n          selection.renderData.isSelected = false;\n          if (!def.NODE_NO_HIGHLIGHT) {\n            selection.renderData.draw_object.children[0].visible = false;\n          } else {\n            selection.renderData.draw_object.material.color.set(\n              new THREE.Color(self.selection[i].renderData.color)\n            );\n          }\n          selection.renderData.textHolder.children[0].element.hideme = true;\n          self.dragging = null;\n        }\n\n        //dragging removes the one second timer for auto display \n        appState.graph.startedHovering = false;\n        appState.graph.hoveredTime = undefined;\n        appState.graph.autoDisplayExploration = false;\n      } else {\n        if (self.newNodeIds) {\n          self.highlightNodeIds([], true);\n          self.newNodeIds = undefined;\n        }\n      }\n    }\n  };\n\n  /**\n   * Mouse up event that closes selection flags and emits selection to Argo\n   */\n  self.onMouseUp = function (selection, mouseX, mouseY, button) {\n    endTime = Date.now();\n    self.mouseDown = false;\n\n    //when not clicking, nodes aren't being interacted with\n    appState.graph.smartPause.interactingWithGraph = false;\n\n    // Left or right mouse button\n    if (true) {\n      self.showBox = false;\n      self.dragging = null;\n      self.selectBox.visible = false;\n      \n      if (self.selection) {\n        if (self.selection.length == 1) {\n          var selected = self.selection[0]\n          // console.log(\"size 1\")\n          // console.log(selected)\n          // console.log(appState.graph.currentNodes)\n\n          // console.log(\"========\")\n\n          // console.log(selected.x)\n          // console.log(appState.graph.currentNodeX)\n\n          // console.log(selected.x !== appState.graph.currentNodeX)\n\n          // console.log(\"=======\")\n          // console.log(selected.y)\n          // console.log(appState.graph.currentNodeY)\n\n          // console.log(selected.y - appState.graph.currentNodeY)\n\n          if (selected.id === appState.graph.currentNodes.id && (Math.abs(selected.x - appState.graph.currentNodeX) > 5 || \n              Math.abs(selected. y - appState.graph.currentNodeY) > 5)) {\n            console.log(\"moved node\");\n            var oldValues = {};\n            oldValues['x'] = appState.graph.currentNodeX;\n            oldValues['y'] = appState.graph.currentNodeY;\n\n            var newValues = {};\n            newValues['x'] = selected.x;\n            newValues['y'] = selected.y;\n\n            appState.logger.addLog({eventName: `MovedNode`, elementName: selection.id, valueName: `XYCoord`,\n              oldValue: oldValues, newValue: newValues});\n            appState.graph.currentNodeX = selected.x;\n            appState.graph.currentNodeY = selected.y;\n          }\n        } else if (self.selection.length > 1 && appState.graph.currentNodes) {\n          // console.log(\"===========\")\n          // console.log(self.selection)\n          // console.log(\"currentNodes\")\n          var oldNode = appState.graph.currentNodes\n          // console.log(selectedNode)\n          // console.log(\"In?\")\n          var newNode = findNode(oldNode, self.selection)\n          // console.log(associatedNode)\n          if (newNode) {\n            var xDiff = newNode.x - oldNode.x;\n            var yDiff = newNode.y - oldNode.y;\n            if (Math.abs(xDiff) > 5 || Math.abs(yDiff) > 5) {\n              // console.log(\"selected\")\n              // console.log(appState.graph.selectedNodes.slice())\n              // console.log(\"selection:\")\n              // console.log(self.selection)\n              // console.log(arraysEqual(appState.graph.selectedNodes.slice(), self.selection))\n              var elements = []\n              var oldValues = {};\n              oldValuesX = [];\n              oldValuesY = [];\n\n              var newValues = {};\n              newValuesX = [];\n              newValuesY = [];\n              self.selection.forEach(node => {\n                elements.push(node.id);\n                oldValuesX.push(node.x - xDiff);\n                oldValuesY.push(node.y - yDiff);\n                newValuesX.push(node.x)\n                newValuesY.push(node.y);\n              });\n\n              oldValues['x'] = oldValuesX;\n              oldValues['y'] = oldValuesY;\n\n              newValues['x'] = newValuesX;\n              newValues['y'] = newValuesY;\n\n              appState.logger.addLog({eventName: `MovedNodes`, elementName: elements, valueName: `XYCoord`,\n              oldValue: oldValues, newValue: newValues});\n              console.log(\"moved selected nodes\")\n            }\n          }\n          \n        }\n        // appState.graph.currentNodes = self.selection;\n        // console.log(\"currentNodes:\")\n        // console.log(appState.graph.currentNodes.slice())\n\n        // console.log(\"selection: \")\n        // console.log(self.selection)\n        // console.log(\"selected\")\n        // console.log(appState.graph.selectedNodes[0])\n        // console.log(self.selection[0] === appState.graph.selectedNodes[0])\n        // if (self.selection == appState.graph.selectedNodes[0] && self.selection.x !== appState.graph.currentNodeX && self.selection.y !== appState.graph.currentNodeY) {\n        //   console.log(\"moved node\");\n        //   appState.graph.currentNodeX = self.selection.x;\n        //   appState.graph.currentNodeY = self.selection.y;\n        // }\n      }\n\n      self.ee.emit(\"select-nodes\", self.selection);\n    }\n\n  };\n\n\n\n  /**\n   * Right click event to save right clicked node\n   */\n  self.onRightClick = function (selection) {\n    if (selection) {\n      self.rightClickedNode = selection;\n    } else {\n      self.rightClickedNode = null;\n    }\n  };\n\n  /**\n   * Right click event that emits context menu event to Argo\n   */\n  self.onRightClickCoords = function (event) {\n    // Don't show menu if dragging camera\n    if (endTime - startTime < 200) {\n      self.ee.emit(\"right-click\", {\n        pageX: event.pageX,\n        pageY: event.pageY\n      });\n    }\n  };\n};","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Set all nodes to a size\n   */\n  self.setUniformNodeSize = function(s) {\n    self.graph.forEachNode(function(node) {\n      node.renderData.draw_object.scale.set(s, s, 1);\n      var hsize = 1 + def.HIGHLIGHT_SIZE / s;\n      node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n    });\n  };\n\n  /**\n   * Set all nodes to a size based on a value in the node's data\n   */\n  self.setNodeDataSize = function(dataValue) {\n    self.graph.forEachNode(function(node) {\n      dataVal = node.renderData[dataValue];\n      if (!dataVal) {\n        console.log(\"Data value does not exist\");\n      } else {\n        dataVal = Math.log(dataVal + 1);\n        node.renderData.draw_object.scale.set(dataVal, dataVal, 1);\n        var hsize = 1 + def.HIGHLIGHT_SIZE / dataVal;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      }\n    });\n  };\n\n  /**\n   * Set all nodes to a color\n   */\n  self.setUniformNodeColor = function(hsvDegree) {\n    self.graph.forEachNode(function(node) {\n      node.renderData.draw_object.material.color.set(\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 43%)\")\n      );\n      if (!def.NODE_NO_HIGHLIGHT) {\n        node.renderData.draw_object.children[0].material.color.set(\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\n        );\n      }\n    });\n  };\n\n  /**\n   * Set all nodes to a color based on a value in the node's data\n   */\n  self.setNodeDataColor = function(dataValue) {\n    var i = 0;\n    values = [];\n    min = null;\n    max = null;\n\n    self.graph.forEachNode(function(node) {\n      if ((dataVal = node.renderData[dataValue])) {\n        if (min == null) min = dataVal;\n        if (max == null) max = dataVal;\n        if (dataVal < min) min = dataVal;\n        else if (dataVal > max) max = dataVal;\n        values[i] = dataVal;\n        i += 1;\n      } else {\n        values[i] = -1;\n      }\n    });\n\n    i = 0;\n    self.graph.forEachNode(function(node) {\n      var hsvDegree;\n      if (values[i] == -1) {\n        hsvDegree = 0;\n      } else {\n        values[i] = (values[i] - min) / (max - min);\n        hsvDegree = values[i] * 120;\n      }\n      node.renderData.draw_object.material.color.set(\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 48%)\")\n      );\n      if (!def.NODE_NO_HIGHLIGHT) {\n        node.renderData.draw_object.children[0].material.color.set(\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\n        );\n      }\n      i++;\n    });\n  };\n\n  /**\n   * Map a node attribute based on some mapping function\n   */\n  self.mapNodeAttributes = function(mapping, nodes = null) {\n    let val;\n    if (mapping[0] == \"degree\") {\n      val = node => (node.links ? node.links.length + 2 : 2);\n    } else if (mapping[0] == \"scalex\") {\n      val = node => node.renderData.draw_object.scale.x;\n    } else {\n      val = node => mapping[0];\n    }\n\n    let mod;\n    if (mapping[1] == \"volume\") {\n      mod = val => self.volToRadius(val);\n    } else if (mapping[1] == \"mult\") {\n      mod = val => val * mapping[3](val);\n    } else if (mapping[1] == \"add\") {\n      mod = val => val + mapping[3](val);\n    } else if (mapping[1] == \"log\") {\n      mod = val => Math.log(val);\n    } else {\n      mod = val => val;\n    }\n\n    let attr;\n    if (mapping[2] == \"scalexy\") {\n      attr = (node, val) => {\n        node.renderData.draw_object.scale.set(val, val, 1);\n        var hsize = 1 + def.HIGHLIGHT_SIZE / val;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      };\n    } else if (mapping[2] == \"edgeColorRed\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.r = 1;\n        node.renderData.linecolor.b = 1 - val / 5;\n        node.renderData.linecolor.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"edgeColorBlue\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.b = 1;\n        node.renderData.linecolor.r = 1 - val / 5;\n        node.renderData.linecolor.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"edgeColorGreen\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.g = 1;\n        node.renderData.linecolor.b = 1 - val / 5;\n        node.renderData.linecolor.r = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"nodeColorBlue\") {\n      attr = (node, val) => {\n        node.renderData.draw_object.material.color.b = 1;\n        node.renderData.draw_object.material.color.r = 1 - val / 5;\n        node.renderData.draw_object.material.color.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"pinned\") {\n      attr = (node, val) => {\n        node.pinnedx = val;\n        node.pinnedy = val;\n      };\n    } else if (mapping[2] == \"labelSize\") {\n      attr = (node, val) => {\n        self.changeLabelFontSize(node, val);\n      };\n    } else if (mapping[2] == \"labelLength\") {\n      attr = (node, val) => {\n        self.changeLabelLength(node, val);\n      };\n    }\n\n    self.changeNodes(val, mod, attr, nodes);\n  };\n\n  /**\n   *  get attribute from node using function val\n   *  modify result with function mode\n   *  set node attribute with attr\n   */\n  self.changeNode = function(val, mod, attr, node) {\n    var v = val(node);\n    if (v != undefined) {\n      var r = mod(v);\n      if (r != undefined) {\n        attr(node, r);\n      }\n    }\n  };\n\n  /**\n   *  perform changeNode on many nodes\n   */\n  self.changeNodes = function(val, mod, attr, nodes = null) {\n    if (nodes == null) {\n      self.graph.forEachNode(function(node) {\n        self.changeNode(val, mod, attr, node);\n      });\n    } else {\n      for (var i = 0; i < nodes.length; i++) {\n        self.changeNode(val, mod, attr, nodes[i]);\n      }\n    }\n  };\n\n  /**\n   * Limit label size by (estimated) characters\n   * This is only accurate if the label is monospaced\n   */\n  self.changeLabelLength = function(node, numChars) {\n    node.renderData.textHolder.children[0].element.children[0].style.width =\n      numChars.toString() + \"ch\";\n  };\n\n  /**\n   * Limit label size by (estimated) characters\n   * This is only accurate if the label is monospaced\n   */\n  self.changeLabelFontSize = function(node, size, relativeSize = 1) {\n    size = size * relativeSize;\n    node.renderData.textHolder.children[0].element.children[0].style.fontSize =\n      size.toString() + \"rem\";\n  };\n\n  /**\n   * Change boundary size\n   */\n  self.setBoundarySize = function(size) {\n    self.renderWidth = size;\n    self.renderHeight = size;\n    self.boundaries.scale.set(size * 2, size * 2, 1);\n    self.boundaries.position.x = -size;\n    self.boundaries.position.y = -size;\n    self.controls.maxDistance = size * 2;\n    self.minimap.camera.position.z = self.renderWidth * 2;\n  };\n\n  /**\n   * Change viewport size\n   */\n  self.setViewPortSize = function(camera) {\n    var distance = self.ccamera.position.z;\n    var height =\n      Math.tan(((camera.fov * Math.PI) / 180) * 0.5) * distance * 2 + 5;\n    var width = height * camera.aspect + 5;\n    self.viewPort.scale.set(width, height, 1);\n    self.viewPort.position.x = camera.position.x - width / 2;\n    self.viewPort.position.y = camera.position.y - height / 2;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\n\nmodule.exports = function(self) {\n  /**\n   *  Create highlight mesh\n   */\n  self.createHighlightMesh = function(node, texture) {\n    var shape =\n      node.renderData.hshape || node.renderData.shape || def.NODE_HSHAPE;\n    if (shape == \"square\") {\n      var hgeometry = self.make2x2Rect();\n    } else {\n      var hgeometry = new THREE.CircleGeometry(1, 32);\n    }\n\n    return self.createHighlightDrawObject(hgeometry, node, texture);\n  };\n\n  /**\n   * Sets the material, color, visibility, and size of the highlight drawing for a node.\n   */\n  self.createHighlightDrawObject = function(hgeometry, node, texture) {\n    var size = self.getNodeSize(node);\n    var hsize = def.HIGHLIGHT_SIZE;\n\n    texture = def.NODE_NO_HTEX ? null : texture;\n    var color = def.NODE_NO_HCOLOR\n      ? null\n      : parseInt(node.renderData.hcolor || def.NODE_HIGHLIGHT);\n    var hmaterial = new THREE.MeshBasicMaterial({ color: color, map: texture });\n    hmaterial.transparent = true;\n    var highlight = new THREE.Mesh(hgeometry, hmaterial);\n    highlight.visible = true;\n    highlight.scale.set(1 + hsize / size, 1 + hsize / size, 1);\n    highlight.position.z = -0.01;\n    return highlight;\n  };\n\n  /**\n   *  Create node mesh\n   */\n  self.createNodeMesh = function(node, texture) {\n    var shape = node.renderData.shape || def.NODE_SHAPE;\n    if (shape == \"square\") {\n      var geometry = self.make2x2Rect();\n    } else {\n      var geometry = new THREE.CircleGeometry(1, 32);\n    }\n    return self.createNodeDrawObject(geometry, node, texture);\n  };\n\n  /**\n   * Create mesh to visual show pinning\n   */\n  self.createPinMesh = function(size) {\n    var geometry = self.make2x2Rect();\n    var color = new THREE.Color(def.PIN_COLOR);\n    var material = new THREE.MeshBasicMaterial({ color: color });\n    var pinMesh = new THREE.Mesh(geometry, material);\n    pinMesh.scale.set(0.1, 0.1, 1);\n    pinMesh.position.z = 0.01;\n    pinMesh.visible = false;\n    return pinMesh;\n  };\n\n  /**\n   * Create the drawing information for a node\n   */\n  self.createNodeDrawObject = function(geometry, node, texture) {\n    var size = self.getNodeSize(node);\n\n    texture = def.NODE_NO_TEX ? null : texture;\n    var color = def.NODE_NO_COLOR\n      ? null\n      : new THREE.Color(node.renderData.color || def.NODE_COLOR);\n    var material = new THREE.MeshBasicMaterial({ color: color, map: texture });\n    material.transparent = true;\n    var draw_object = new THREE.Mesh(geometry, material);\n    draw_object.scale.set(size, size, 1);\n    return draw_object;\n  };\n\n  /**\n   * Get the size of a node if it exists, otherwise get it from the render data.\n   */\n  self.getNodeSize = function(node) {\n    var size;\n    if (node.renderData.size != undefined) size = node.renderData.size;\n    else size = node.renderData[\"size\"];\n    return size;\n  };\n\n  self.createNodeLabel = function(node) {\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x000000,\n      wireframe: true,\n      wireframeLinewidth: 1,\n      side: THREE.DoubleSide\n    });\n    var geometry = new THREE.PlaneGeometry(1000, 200);\n    var textMesh = self.createAndSetupLabelTextMesh(geometry, material);\n    var label = self.createAndSetupLabelDiv(node, textMesh);\n    var textHolder = self.createAndSetupTextHolder(label, textMesh);\n    node.renderData.textHolder = textHolder;\n    self.scene.add(textHolder);\n  };\n\n  self.createAndSetupLabelTextMesh = function(geometry, material) {\n    var textMesh = new THREE.Mesh(geometry, material);\n    textMesh.scale.set(def.TEXT_SIZE, def.TEXT_SIZE, 1);\n    var bbox = new THREE.Box3().setFromObject(textMesh);\n    textMesh.position.x += (bbox.max.x - bbox.min.x) * def.TEXT_X_OFFSET;\n    textMesh.position.y -= (bbox.max.y - bbox.min.y) * def.TEXT_Y_OFFSET;\n    textMesh.visible = def.TEXT_WIREFRAME;\n    return textMesh;\n  };\n\n  self.createAndSetupLabelDiv = function(node, textMesh) {\n    var label = self.createLabelDiv(node);\n    label.element.hidden = true;\n    label.position.copy(textMesh.position);\n    label.scale.copy(textMesh.scale);\n    return label;\n  };\n\n  self.createAndSetupTextHolder = function(label, textMesh) {\n    var textHolder = new THREE.Object3D();\n    textHolder.add(label);\n    textHolder.add(textMesh);\n    return textHolder;\n  };\n\n  /**\n   *  Create label div\n   */\n  self.createLabelDiv = function(node) {\n    // Create canvas to draw text label onto sprite image\n    var element = self.createLabelDivElement();\n    var content = document.createTextNode(node.renderData.label);\n    var textElement = self.createLabelTextElement();\n    textElement.appendChild(content);\n    element.appendChild(textElement);\n    var labelObj = new THREE.CSS3DObject(element);\n    return labelObj;\n  };\n\n  /**\n   * Creates the Label Div Element for a node's label\n   */\n  self.createLabelDivElement = function() {\n    var element = document.createElement(\"div\");\n    element.style.width = \"1000px\";\n    element.style.height = \"200px\";\n    element.style.backgroundColor = def.TEXT_BACK_COLOR;\n    element.style.opacity = def.TEXT_OPACITY;\n    return element;\n  };\n\n  /**\n   * Creates the text element to add to the label div for a node.\n   */\n  self.createLabelTextElement = function() {\n    var textElement = document.createElement(\"div\");\n    textElement.style.width = \"1000px\";\n    textElement.style.height = \"2ch\";\n    textElement.style.fontSize = \"96px\";\n    textElement.style.textOverflow = \"ellipsis\";\n    textElement.style.overflow = \"hidden\";\n    textElement.style.userSelect = \"all\";\n    textElement.style.whiteSpace = \"nowrap\";\n    //textElement.setAttribute('contenteditable', 'true');\n    return textElement;\n  };\n\n  /**\n   * Instantiates, sets highlight for, and sets position for the actual THREE\n   * drawing of a node\n   */\n  self.setupNodeDrawObject = function(node, htexture, texture) {\n    var draw_object = self.createNodeMesh(node, texture);\n\n    // Create highlight\n    if (!def.NODE_NO_HIGHLIGHT) {\n      var highlight = self.createHighlightMesh(node, htexture);\n      draw_object.add(highlight);\n    }\n\n    var pinMesh = self.createPinMesh();\n    draw_object.add(pinMesh);\n\n    draw_object.position.x = node.renderData.x;\n    draw_object.position.y = node.renderData.y;\n    draw_object.index = node.id;\n    draw_object.name = node.id;\n    node.renderData.draw_object = draw_object;\n\n    return draw_object;\n  };\n\n  /**\n   *  Create a node object and add it to the scene.\n   */\n  self.drawNode = function(node) {\n    function onHTextureLoad(node, htexture) {\n      // Load node texture\n      self.textureLoader.load(\n        node.renderData.image || def.NODE_TEXTURE,\n        onTextureLoad.bind(null, node, htexture)\n      );\n    }\n\n    function onTextureLoad(node, htexture, texture) {\n      // Create mesh for node\n      var draw_object = self.setupNodeDrawObject(node, htexture, texture);\n\n      // Create div for label\n      self.createNodeLabel(node);\n\n      self.nodeCount += 1;\n      self.nodes.add(draw_object);\n    }\n\n    if (def.NODE_NO_HTEX && def.NODE_NO_TEX) {\n      onTextureLoad(node, null, null);\n    } else {\n      // Load highlight texture\n      self.textureLoader.load(\n        node.renderData.himage || def.NODE_HTEXTURE,\n        onHTextureLoad.bind(null, node)\n      );\n    }\n  };\n\n  /**\n   *  Create an edge and add it to the lineSegments.\n   */\n  self.drawEdge = function(source, target, visible = true) {\n    if (\n      source.renderData.draw_object === undefined ||\n      target.renderData.draw_object === undefined\n    ) {\n      setTimeout(self.drawEdge.bind(null, source, target), 50);\n      return;\n    }\n    var index = self.drawCount * 3;\n    self.lineObjects[index / 3] = source;\n    self.lineObjects[index / 3 + 1] = target;\n    if (!source.linkObjs) {\n      source.linkObjs = [];\n    }\n    if (!target.linkObjs) {\n      target.linkObjs = [];\n    }\n\n    self.lineIndices.push({\n      source: source,\n      target: target,\n      hide: !visible,\n      linecolor: source.renderData.linecolor, \n    });\n\n    source.linkObjs.push(self.lineIndices[index / 6]);\n    target.linkObjs.push(self.lineIndices[index / 6]);\n    self.updateColorsAndPositions(source, target, index);\n    self.drawCount += 2;\n  };\n\n  /**\n   * Update the colors and positions of the edges between source and target\n   */\n  self.updateColorsAndPositions = function(source, target, index) {\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n\n    var v1pos = source.renderData.draw_object.position;\n    var v2pos = target.renderData.draw_object.position;\n    var v1color = self.lineIndices[index / 6].linecolor;\n    var v2color = self.lineIndices[index / 6].linecolor;\n    colors[index] = v1color.b;\n    positions[index++] = v1pos.x;\n    colors[index] = v1color.g;\n    positions[index++] = v1pos.y;\n    colors[index] = v1color.r;\n    positions[index++] = v1pos.z - 0.02;\n    colors[index] = v2color.b;\n    positions[index++] = v2pos.x;\n    colors[index] = v2color.g;\n    positions[index++] = v2pos.y;\n    colors[index] = v2color.r;\n    positions[index++] = v2pos.z - 0.02;\n  };\n};\n","const { default: appState } = require(\"../../stores\");\n\nvar def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\n/**\n * These functions are endpoints revealed to Argo frontend\n */\nmodule.exports = function(self) {\n  /**\n   * Set frame.mouseMode to the specified mode\n   * @param {string} mode name of the mode, currently supports ['select', 'move']\n   */\n  self.setMouseMode = mode => {\n    if (mode === \"select\") {\n      // This is the default mode, where users can select one or multiple nodes\n      self.mouseMode = \"select\";\n      self.isMouseModeMove = false;\n    } else if (mode === \"move\") {\n      // move mode, where user can drag the screen to achieve panning\n      self.mouseMode = \"move\";\n      self.isMouseModeMove = true;\n    }\n  };\n\n  self.pauseLayout = () => {\n    self.paused = true;\n  };\n  window.pause = self.pauseLayout;\n\n  self.resumeLayout = () => {\n    self.paused = false;\n  };\n\n  self.mapSelectedNodes = () => {\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"], self.selection);\n  };\n\n  self.mapAllNodes = () => {\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"]);\n  };\n\n  self.pinSelectedNodes = () => {\n    appState.logger.addLog({eventName: `pinSelectedNodes`, elementName: self.selection.map(node => node.id)})\n    self.mapNodeAttributes([true, \"\", \"pinned\"], self.selection);\n  };\n\n  self.unpinSelectedNodes = () => {\n    appState.logger.addLog({eventName: `unpinSelectedNodes`, elementName: self.selection.map(node => node.id)})\n    self.mapNodeAttributes([false, \"\", \"pinned\"], self.selection);\n  };\n\n  self.setLabelFontSize = size => {\n    self.graph.forEachNode(function(node) {\n      self.changeLabelFontSize(node, size, self.relativeFontSize);\n    });\n  };\n\n  self.setLabelRelativeSize = size => {\n    self.relativeFontSize = size;\n    self.setLabelFontSize(self.labelSize);\n  };\n\n  self.setLabelLength = numChars => {\n    self.graph.forEachNode(function(node) {\n      self.changeLabelLength(node, numChars);\n    });\n  };\n\n  self.toggleMiniMap = () => {\n    if (self.mapShowing) {\n      self.hideMiniMap();\n    } else {\n      self.showMiniMap();\n    }\n  };\n\n  self.showMiniMap = () => {\n    if (self.mapShowing) {\n      return;\n    }\n    self.mapShowing = true;\n    self.element.appendChild(self.minimapRenderer.domElement);\n  };\n\n  self.hideMiniMap = () => {\n    if (!self.mapShowing) {\n      return;\n    }\n    self.mapShowing = false;\n    self.element.removeChild(self.minimapRenderer.domElement);\n  };\n\n  // The CSS Renderer for rendering labels is the most expensive\n  // renderer. For 300+ nodes it's recommended to turn it off by\n  // default and only use it when no node is moving to prevent\n  // visible lagging (during layout, dragging etc.)\n  self.turnOffLabelCSSRenderer = () => {\n    if (self.cssRenderer.isPaused) {\n      return;\n    }\n    self.element.removeChild(self.cssRenderer.domElement);\n    self.cssRenderer.isPaused = true;\n  };\n\n  // See turnOffLabelCSSRenderer.\n  self.turnOnLabelCSSRenderer = () => {\n    if (!self.cssRenderer.isPaused) {\n      return;\n    }\n    self.element.appendChild(self.cssRenderer.domElement);\n    self.cssRenderer.isPaused = false;\n  };\n\n  // Emits id of every node with label being displayed at this moment.\n  // Used to keep mobx state in sync since GraphStore and snapshot\n  // needs to save what nodes have labels shown and what not.\n  // Also turns off label CSSRenderer when no node is showing label.\n  self.updateNodesShowingLabels = () => {\n    var nodes = [];\n    self.graph.forEachNode(n => {\n      var node = self.graph.getNode(n.id);\n      if (node.renderData.textHolder.children[0].element.override) {\n        nodes.push(n.id);\n      }\n    });\n\n    // Turns off label CSSRenderer when no node is showing label.\n    // This is because CSSRenderer is slow.\n    if (nodes.length == 0) {\n      self.turnOffLabelCSSRenderer();\n    } else if (!((self.selection.length > 0) && (self.dragging)) || (appState.graph.frame.paused)) { \n      //Only turns on when no node is moving\n      self.turnOnLabelCSSRenderer();\n    }\n\n    self.ee.emit(\"show-node-label\", nodes);\n  };\n\n  self.toggleSelectedLabels = () => {\n    appState.logger.addLog({eventName: 'ToggleSelectedLabels', elementName: self.selection.map(n => n.id)})\n\n    self.toggleLabels(self.selection.map(n => n.id));\n  };\n\n  self.showSelectedLabels = () => {\n    appState.logger.addLog({eventName: 'ShowSelectedLabels', elementName: self.selection.map(n => n.id)})\n\n    document.getElementById(\"showSelected\").style.display=\"none\";\n    document.getElementById(\"hideSelected\").style.display=\"inline\";\n    self.showLabels(self.selection.map(n => n.id));\n  };\n\n  self.hideSelectedLabels = () => {\n    appState.logger.addLog({eventName: 'HideSelectedLabels', elementName: self.selection.map(n => n.id)})\n\n    document.getElementById(\"hideSelected\").style.display=\"none\";\n    document.getElementById(\"showSelected\").style.display=\"inline\";\n    self.hideLabels(self.selection.map(n => n.id));\n  };\n\n  self.toggleLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        if (\n          node.renderData.textHolder.children[0].element.override == undefined\n        ) {\n          node.renderData.textHolder.children[0].element.override = false;\n        }\n        node.renderData.textHolder.children[0].element.override = !node\n          .renderData.textHolder.children[0].element.override;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.showLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        node.renderData.textHolder.children[0].element.override = true;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.hideLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        node.renderData.textHolder.children[0].element.override = false;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.hideAllLabels = () => {\n    appState.logger.addLog({eventName: 'HideAllLabels'})\n\n    document.getElementById(\"hideAll\").style.display=\"none\";\n    document.getElementById(\"showAll\").style.display=\"inline\";\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      node.renderData.textHolder.children[0].element.override = false;\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.showAllLabels = () => {\n    appState.logger.addLog({eventName: 'ShowAllNodes'})\n\n    document.getElementById(\"showAll\").style.display=\"none\";\n    document.getElementById(\"hideAll\").style.display=\"inline\";\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      node.renderData.textHolder.children[0].element.override = true;\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.setCanvasSize = function(size) {\n    self.setBoundarySize(size);\n  };\n\n  self.setAllNodesShape = function(shape) {\n    if (self.selection.length == 0) {\n      self.graph.forEachNode(function(node) {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      });\n    } else {\n      self.selection.forEach(function(node) {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      });\n    }\n  };\n\n  self.setAllNodesShapeWithOverride = function(shape, overrides) {\n    self.graph.forEachNode(function(node) {\n      if (overrides.has(node.id) && overrides.get(node.id).has('shape')) {\n        self.setNodeShape(self.graph.getNode(node.id), overrides.get(node.id).get('shape'));\n      } else {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      }\n    });\n  }\n\n  self.setNodeShape = function(node, shape) {\n    if (shape == \"square\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = self.make2x2Rect();\n      node.renderData.draw_object.children[0].geometry = self.make2x2Rect();\n    } else if (shape == \"circle\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 32);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        32\n      );\n    } else if (shape == \"triangle\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 3);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        3\n      );\n    } else if (shape == \"pentagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 5);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        5\n      );\n    } else if (shape == \"hexagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 6);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        6\n      );\n    } else if (shape == \"octagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 8);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        8\n      );\n    }\n  };\n\n  self.getNumSelected = function() {\n    if (self.selection.length == self.graph.getNodesCount()) {\n      return 0;\n    }\n    return self.selection.length;\n  };\n\n  self.toggleDark = function() {\n    self.darkMode = !self.darkMode;\n    self.updateViewPortEdgeColor();\n  };\n\n  self.updateViewPortEdgeColor = function() {\n    self.viewPort.material.color = new THREE.Color( self.darkMode? 0xffffff : 0x000000 );       \n  }\n\n  self.getGraph = function() {\n    return self.graph;\n  };\n\n  self.getNodeList = function() {\n    var nodes = [];\n    self.graph.forEachNode(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  };\n\n  self.getPositions = function() {\n    var poses = {};\n    self.graph.forEachNode(function(node) {\n      poses[node.id] = [node.x, node.y];\n    });\n    return poses;\n  };\n\n  self.getPinPositions = function() {\n    var poses = {};\n    self.graph.forEachNode(function(node) {\n      poses[node.id] = [node.fx, node.fy];\n    });\n    return poses;\n  };\n\n  // retrieves current graph's pinned nodes \n  self.getPinnedNodes = function() {\n    var poses = new Set();\n    self.graph.forEachNode(function(node) {\n      if(node.pinnedx && node.pinnedy) {\n        poses.add(node.id);\n      }\n    });\n    return poses;\n  }\n\n  //pins nodes that were pinned from a graph loaded in\n  self.setPinnedNodes = function(nodesToPin) {\n    self.mapNodeAttributes([true, \"\", \"pinned\"], nodesToPin);\n  }\n\n  var alias = false;\n  self.toggleAlias = () => {\n    // TODO: recreate renderer with new antialias\n    // self.init(alias);\n    // self.display();\n    alias = !alias;\n  };\n\n  self.setLastNode = id => {\n    self.lastNode = self.graph.getNode(id);\n  };\n\n  self.dragLastNode = () => {\n    self.selectNode(self.lastNode);\n  };\n\n  var x = 1.0;\n  self.lowerRes = () => {\n    x -= 0.1;\n    self.renderer.setPixelRatio(x);\n    self.onWindowResize();\n  };\n\n  self.toggleNeighborHighlight = function() {\n    self.doHighlightNeighbors = !self.doHighlightNeighbors;\n  };\n\n  self.highlightNodeIds = function(nodeids, toggle) {\n    if (nodeids.length > 0 && Array.isArray(nodeids[0])) {\n      nodeids = nodeids[0];\n    }\n    if (self.prevHighlights) {\n      for (var i = 0; i < self.prevHighlights.length; i++) {\n        self.highlightNode(\n          self.prevHighlights[i],\n          !toggle,\n          def.SEARCH_HIGHLIGHT\n        );\n      }\n    }\n    self.prevHighlights = [];\n    self.graph.forEachNode(function(node) {\n      if (nodeids.indexOf(node.id) != -1) {\n        self.highlightNode(node, toggle, def.SEARCH_HIGHLIGHT);\n        self.prevHighlights.push(node);\n      }\n    });\n  };\n\n  self.removeSelected = function() {\n    for (var i = 0; i < self.selection.length; i++) {\n      self.removeNode(self.selection[i]);\n    }\n    self.selection = [];\n  };\n\n  self.removeNodesByIds = function(nodeids) {\n    for (var i = 0; i < nodeids.length; i++) {\n      const node = self.graph.getNode(nodeids[i]);\n      if (node) {\n        self.removeNode(node);\n      }\n    }\n    self.selection = [];\n  };\n\n  self.getSelected = function() {\n    return self.selection;\n  };\n\n  self.getSelectedIds = function() {\n    return self.selection.map(n => n.id);\n  };\n\n  self.updateFrontEndNodeGraphDataWithBackendRawgraph = function() {\n    const nodeData = appState.graph.preprocessedRawGraph.nodesPanelData;\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      var updateNode = nodeData[node.id];\n      node.data.ref.degree = updateNode.degree;\n      node.data.ref.pagerank = updateNode.pagerank;\n      node.data.ref.node_id = updateNode.node_id;\n    });\n  };\n\n  // citationOrReference: 0 is citation and goes on right side, 0 is reference and goes on left side\n  self.addFrontEndNodeInARow = function(sourcenodeid, spawnnodeid, numofnode, citationOrReference) {\n    var parentnode = self.graph.getNode(sourcenodeid);\n    var childnode = self.graph.getNode(spawnnodeid);\n    if (citationOrReference == 0) {\n      //citation\n      childnode.x = parentnode.x + 25;\n    } else {\n      childnode.x = parentnode.x - 25;\n    }\n    childnode.y = parentnode.y - 10 * (numofnode + 1);\n    childnode.pinnedx = true;\n    childnode.pinnedy = true;\n  };\n};","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Update the position and color of the edges\n   */\n  self.updateEdges = function() {\n    self.edges.setDrawRange(0, self.drawCount + 6);\n    var total = self.drawCount + 6;\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n\n     //directed arrows\n     self.directedArrows.attributes.position.array = new Float32Array(self.MAX_LINES * 3);\n     var arrowPosition = self.directedArrows.attributes.position.array;\n     var arrowColor = self.directedArrows.attributes.color.array;\n\n    for (var i = 0; i < total; i += 2) {\n      if (self.lineIndices[i / 2]) {\n        if (self.lineIndices[i / 2].hide) {\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\n          positions[i * 3] = v1pos.x;\n          positions[i * 3 + 1] = v1pos.y;\n          positions[i * 3 + 3] = v2pos.x;\n          positions[i * 3 + 4] = v2pos.y;\n          colors[i * 3] = 255;\n          colors[i * 3 + 1] = 255;\n          colors[i * 3 + 2] = 255;\n          colors[i * 3 + 3] = 255;\n          colors[i * 3 + 4] = 255;\n          colors[i * 3 + 5] = 255;\n        } else {\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\n          var v1color = self.lineIndices[i / 2].linecolor;\n          var v2color = self.lineIndices[i / 2].linecolor;\n          positions[i * 3] = v1pos.x;\n          positions[i * 3 + 1] = v1pos.y;\n          positions[i * 3 + 3] = v2pos.x;\n          positions[i * 3 + 4] = v2pos.y;\n          colors[i * 3] = v1color.r;\n          colors[i * 3 + 1] = v1color.g;\n          colors[i * 3 + 2] = v1color.b;\n          colors[i * 3 + 3] = v2color.r;\n          colors[i * 3 + 4] = v2color.g;\n          colors[i * 3 + 5] = v2color.b;\n\n          //directed edges\n          if (appState.graph.directedOrNot) {\n            self.arrow.visible = true;\n            var midPointX = (v1pos.x + v2pos.x)/2;\n            var midPointY = (v1pos.y + v2pos.y)/2;\n\n            var dX = v2pos.x - v1pos.x;\n            var dY = v2pos.y - v1pos.y;\n\n            if (dX === 0) {\n              dX = 0.001;\n            }\n            var radianDegree = Math.atan(dY / dX);\n            // var tempXCorner = midPointX - Math.cos(radianDegree) * 0.866;\n            // var tempYCorner = midPointY - Math.sin(radianDegree) * 0.866;\n\n            // var degreeDifference = Math.PI/2 - radianDegree\n            arrowPosition[i / 2 * 9] = midPointX;\n            arrowPosition[i / 2 * 9 + 1] = midPointY;\n\n            if (dX >= 0) {\n              var tempXCorner = midPointX - Math.cos(radianDegree) * 0.866;\n              var tempYCorner = midPointY - Math.sin(radianDegree) * 0.866;\n              var degreeDifference = Math.PI/2 - radianDegree;\n              arrowPosition[i / 2 * 9 + 3] = tempXCorner - 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 4] = tempYCorner + 0.5 * Math.sin(degreeDifference);\n              arrowPosition[i / 2 * 9 + 6] = tempXCorner + 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 7] = tempYCorner - 0.5 * Math.sin(degreeDifference);\n\n            } else {\n              var tempXCorner = midPointX + Math.cos(radianDegree) * 0.866;\n              var tempYCorner = midPointY + Math.sin(radianDegree) * 0.866;\n              var degreeDifference = Math.PI/2 - radianDegree;\n              arrowPosition[i / 2 * 9 + 3] = tempXCorner + 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 4] = tempYCorner - 0.5 * Math.sin(degreeDifference);\n              arrowPosition[i / 2 * 9 + 6] = tempXCorner - 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 7] = tempYCorner + 0.5 * Math.sin(degreeDifference);\n            }\n          } else {\n            self.arrow.visible = false;\n          } \n        }\n      }\n    }\n    self.edges.attributes.position.needsUpdate = true;\n    self.edges.attributes.color.needsUpdate = true;\n\n    self.directedArrows.attributes.position.needsUpdate = true;\n    self.directedArrows.attributes.color.needsUpdate = true;\n  };\n\n  /**\n   *  Update the position of the labels\n   */\n  self.updateLabels = function() {\n    var nodes = self.force.nodes();\n    for (var i = 0; i < nodes.length; i++) {\n      let thisNode = self.graph.getNode(nodes[i].id);\n      if (thisNode.renderData.textHolder != undefined) {\n        if (\n          //thisNode.renderData.textHolder.children[0].element.hideme != false &&\n          !thisNode.renderData.textHolder.children[0].element.override\n        ) {\n          thisNode.renderData.textHolder.children[0].element.hidden = true;\n        } else {\n          thisNode.renderData.textHolder.children[0].element.hidden = false;\n        }\n      }\n      thisNode.renderData.textHolder.position.x =\n        thisNode.renderData.size + thisNode.renderData.draw_object.position.x;\n      thisNode.renderData.textHolder.position.y =\n        thisNode.renderData.draw_object.position.y;\n    }\n  };\n\n  /**\n   *  Update the position and color of the edges\n   */\n  self.updateNodes = function() {\n    if (self.options.layout == \"ngraph\") {\n      self.graph.forEachNode(function(node) {\n        if (node.renderData) {\n          node.renderData.draw_object.position.x = self.force.getNodePosition(\n            node.id\n          ).x;\n          node.renderData.draw_object.position.y = self.force.getNodePosition(\n            node.id\n          ).y;\n        }\n      });\n      if (!self.paused) {\n        self.force.step();\n      }\n    } else if (self.options.layout == \"d3\") {\n      var nodes = self.force.nodes();\n      for (var i = 0; i < nodes.length; i++) {\n        nodes[i].x = Math.max(\n          -self.renderWidth,\n          Math.min(self.renderWidth, nodes[i].x)\n        );\n        nodes[i].y = Math.max(\n          -self.renderHeight,\n          Math.min(self.renderHeight, nodes[i].y)\n        );\n        let thisNode = self.graph.getNode(nodes[i].id);\n        if (thisNode && thisNode.renderData.draw_object) {\n          if (!thisNode.pinnedx) {\n            thisNode.fx = null;\n            thisNode.renderData.draw_object.children[1].visible = false;\n          } else {\n            thisNode.fx = thisNode.x;\n            thisNode.renderData.draw_object.children[1].visible = true;\n          }\n          if (!thisNode.pinnedy) {\n            thisNode.fy = null;\n          } else {\n            thisNode.fy = thisNode.y;\n          }\n          thisNode.renderData.draw_object.position.x = nodes[i].x;\n          thisNode.renderData.draw_object.position.y = nodes[i].y;\n        }\n      }\n\n      if (!self.paused) {\n        self.force.tick();\n      }\n    }\n  };\n\n  /**\n   * Restrict camera translation\n   */\n  self.updateCamera = function() {\n    self.controls.target.x -=\n      self.controls.camera.position.x -\n      Math.max(\n        -self.renderWidth,\n        Math.min(self.renderWidth, self.controls.camera.position.x)\n      );\n    self.controls.camera.position.x -=\n      self.controls.camera.position.x -\n      Math.max(\n        -self.renderWidth,\n        Math.min(self.renderWidth, self.controls.camera.position.x)\n      );\n    self.controls.target.y -=\n      self.controls.camera.position.y -\n      Math.max(\n        -self.renderHeight,\n        Math.min(self.renderHeight, self.controls.camera.position.y)\n      );\n    self.controls.camera.position.y -=\n      self.controls.camera.position.y -\n      Math.max(\n        -self.renderHeight,\n        Math.min(self.renderHeight, self.controls.camera.position.y)\n      );\n    self.setViewPortSize(self.ccamera);\n  };\n\n  /**\n   * Given an ngraph, update the current ngraph and add or remove inconsistent nodes\n   */\n  self.updateGraph = function(graph) {\n    var numNodesAdded = 0;\n    graph.forEachNode(function(node) {\n      var oldNode = self.graph.getNode(node.id);\n      if (!oldNode) {\n        if (!self.newNodeIds) {\n          self.newNodeIds = [];\n        }\n        self.newNodeIds.push(node.id);\n        self.addNode(node);\n        numNodesAdded += 1;\n        self.lastNode = self.graph.getNode(node.id);\n      } else {\n        self.updateNode(oldNode, node);\n      }\n    });\n    graph.forEachLink(function(link) {\n      if (!self.graph.getLink(link.fromId, link.toId)) {\n        self.addEdge(\n          self.graph.getNode(link.fromId),\n          self.graph.getNode(link.toId)\n        );\n      }\n    });\n\n    self.graph.forEachNode(function(node) {\n      var oldNode = graph.getNode(node.id);\n      if (!oldNode) {\n        self.removeNode(node);\n      }\n    });\n\n    self.force.alpha(1);\n    self.force.stop();\n\n    if (numNodesAdded > 10) {\n      // This seems unnecessary for now\n      // self.tickToStatic = true;\n      self.tickToStatic = false;\n    } else {\n      self.tickToStatic = false;\n    }\n\n    if (self.newNodeIds) {\n      // Highlight every new node.\n      self.highlightNodeIds(self.newNodeIds, true);\n\n      // Select every new node if there aren't too many of them.\n      if (self.newNodeIds.length < 10) {\n        for (let i = 0; i < self.newNodeIds.length; i++) {\n          self.selection.push(self.graph.getNode(self.newNodeIds[i]));\n        }\n        self.ee.emit(\"select-nodes\", self.selection);\n      }\n    }\n  };\n\n  /**\n   * update positions in the ngraph given a list of positions\n   */\n  self.updatePositions = function(positions) {\n    self.graph.forEachNode(function(node) {\n      var pos = positions[node.id];\n      if (pos) {\n        node.x = pos[0];\n        node.y = pos[1];\n        if (node.pinnedx) {\n          node.fx = pos[0];\n        }\n        if (node.pinnedy) {\n          node.fy = pos[1];\n        }\n      }\n    });\n  };\n\n  /**\n   * Update a node given a new node\n   */\n  self.updateNode = function(node, newNode) {\n    if (newNode.data) {\n      if (node.data.color && newNode.data.color) {\n        node.data.color = newNode.data.color;\n        node.renderData.color = node.data.color;\n        node.renderData.draw_object.material.color.set(\n          new THREE.Color(node.data.color)\n        );\n      }\n      if (newNode.data.size && newNode.data.size > 0) {\n        node.data.size = newNode.data.size;\n        node.renderData.size = newNode.data.size;\n        node.renderData.draw_object.scale.set(\n          newNode.data.size,\n          newNode.data.size,\n          1\n        );\n        var hsize = 1 + def.HIGHLIGHT_SIZE / newNode.data.size;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      }\n      if (newNode.data.label) {\n        node.data.label = newNode.data.label;\n        node.renderData.label = node.data.label;\n        node.renderData.textHolder.children[0].element.childNodes[0].innerText =\n          node.data.label;\n      }\n      if (newNode.data.shape) {\n        node.data.shape = newNode.data.shape;\n        node.renderData.shape = node.data.shape;\n        self.setNodeShape(node, node.data.shape);\n      }\n    }\n  };\n};\n"],"sourceRoot":""}